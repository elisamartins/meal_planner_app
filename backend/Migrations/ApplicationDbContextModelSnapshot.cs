// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.FoodEntry", b =>
                {
                    b.Property<int>("FoodEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<int>("FoodID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MealPlanID")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodEntryID");

                    b.ToTable("FoodEntries");
                });

            modelBuilder.Entity("backend.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodGroupID")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("FoodID");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("backend.Models.GroceryItem", b =>
                {
                    b.Property<int>("GroceryItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("FoodID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroceryListID")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroceryItemID");

                    b.ToTable("GroceryItems");
                });

            modelBuilder.Entity("backend.Models.GroceryList", b =>
                {
                    b.Property<int>("GroceryListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("GroceryListID");

                    b.ToTable("GroceryLists");
                });

            modelBuilder.Entity("backend.Models.MealPlan", b =>
                {
                    b.Property<int>("MealPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("MealPlanID");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("backend.Models.NutrientName", b =>
                {
                    b.Property<int>("NutrientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NutrientID");

                    b.ToTable("NutrientNames");
                });

            modelBuilder.Entity("backend.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("backend.Models.RecipeItem", b =>
                {
                    b.Property<int>("RecipeItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("FoodID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecipeItemID");

                    b.ToTable("RecipeItems");
                });

            modelBuilder.Entity("backend.Models.YieldAmount", b =>
                {
                    b.Property<float>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("FoodID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YieldID")
                        .HasColumnType("INTEGER");

                    b.ToTable("YieldAmount");
                });

            modelBuilder.Entity("backend.Models.YieldName", b =>
                {
                    b.Property<int>("YieldID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("YieldID");

                    b.ToTable("YieldNames");
                });
#pragma warning restore 612, 618
        }
    }
}
