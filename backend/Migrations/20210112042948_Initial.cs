using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace backend.Migrations
{
    public partial class Initial : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "FoodEntries",
                columns: table => new
                {
                    FoodEntryID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FoodID = table.Column<int>(type: "INTEGER", nullable: false),
                    MealPlanID = table.Column<int>(type: "INTEGER", nullable: false),
                    Category = table.Column<string>(type: "TEXT", nullable: true),
                    Amount = table.Column<float>(type: "REAL", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FoodEntries", x => x.FoodEntryID);
                });

            migrationBuilder.CreateTable(
                name: "FoodGroups",
                columns: table => new
                {
                    FoodGroupID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FoodGroups", x => x.FoodGroupID);
                });

            migrationBuilder.CreateTable(
                name: "FoodItems",
                columns: table => new
                {
                    FoodID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FoodGroupID = table.Column<int>(type: "INTEGER", maxLength: 100, nullable: false),
                    Name = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FoodItems", x => x.FoodID);
                });

            migrationBuilder.CreateTable(
                name: "GroceryItems",
                columns: table => new
                {
                    GroceryItemID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FoodID = table.Column<int>(type: "INTEGER", nullable: false),
                    GroceryListID = table.Column<int>(type: "INTEGER", nullable: false),
                    Checked = table.Column<bool>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GroceryItems", x => x.GroceryItemID);
                });

            migrationBuilder.CreateTable(
                name: "GroceryLists",
                columns: table => new
                {
                    GroceryListID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Username = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false),
                    Name = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GroceryLists", x => x.GroceryListID);
                });

            migrationBuilder.CreateTable(
                name: "MealPlans",
                columns: table => new
                {
                    MealPlanID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Username = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false),
                    Date = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MealPlans", x => x.MealPlanID);
                });

            migrationBuilder.CreateTable(
                name: "NutrientNames",
                columns: table => new
                {
                    NutrientID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Unit = table.Column<string>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NutrientNames", x => x.NutrientID);
                });

            migrationBuilder.CreateTable(
                name: "RecipeItems",
                columns: table => new
                {
                    RecipeItemID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FoodID = table.Column<int>(type: "INTEGER", nullable: false),
                    RecipeID = table.Column<int>(type: "INTEGER", nullable: false),
                    Amount = table.Column<float>(type: "REAL", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RecipeItems", x => x.RecipeItemID);
                });

            migrationBuilder.CreateTable(
                name: "Recipes",
                columns: table => new
                {
                    RecipeID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Username = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false),
                    Note = table.Column<string>(type: "TEXT", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Recipes", x => x.RecipeID);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Username = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false),
                    Password = table.Column<string>(type: "TEXT", maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Username);
                });

            migrationBuilder.CreateTable(
                name: "YieldAmount",
                columns: table => new
                {
                    FoodID = table.Column<int>(type: "INTEGER", nullable: false),
                    YieldID = table.Column<int>(type: "INTEGER", nullable: false),
                    Amount = table.Column<float>(type: "REAL", nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "YieldNames",
                columns: table => new
                {
                    YieldID = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_YieldNames", x => x.YieldID);
                });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 1, "Produits laitiers et oeufs\n" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 25, "Grignotises" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 21, "Aliments prêts-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 20, "Céréales, grains et pâtes" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 19, "Sucreries" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 18, "Produits de boulangerie" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 17, "Ageau, veau et gibier" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 16, "Légumineuses et produits de légumineuses" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 15, "Produits de poissons, mollusques et crustacés" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 14, "Boissons" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 13, "Produits de boeuf" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 22, "Mets composés" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 11, "Légumes et produits végétaux" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 10, "Produits de porc" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 9, "Fruits et jus de fruits" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 8, "Céréales à déjeuner" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 7, "Saucisses et viandes froides" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 6, "Potages et sauces" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 5, "Produits de volaille" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 4, "Matières grasses et huiles" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 3, "Aliments pour bébés" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 2, "Épices et fines herbes" });

            migrationBuilder.InsertData(
                table: "FoodGroups",
                columns: new[] { "FoodGroupID", "Name" },
                values: new object[] { 12, "Noix et graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5286, 11, "Pomme de terre, rouge, chair et pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5287, 14, "Boisson au jus, légumes et fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5288, 14, "Boissons gazeuses, cola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5293, 14, "Boissons gazeuses, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5291, 14, "Thé instantané, sucré, saveur de citron, poudre, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5292, 14, "Boisson pour sportifs, saveur de fruits, hypocalorique, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5285, 11, "Pomme de terre, blanche, chair et pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5290, 14, "Thé instantané, non sucré, poudre, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5284, 11, "Pomme de terre, Russet, chair et pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5277, 11, "Pomme de terre, purée, faite maison, préparée avec lait 2% M.G. et margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5282, 9, "Abiyuch, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5279, 11, "Pomme de terre, purée, faite maison, préparée avec lait 2% M.G. et beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5278, 11, "Pomme de terre, purée, faite maison, préparée avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5276, 14, "Fraise, mélange à saveur, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5275, 14, "Lait malté, saveur de chocolat, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5273, 14, "Lait malté, saveur naturelle, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5270, 1, "Chocolat, sirop, consistance claire, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5294, 14, "Non alcoolisé, vin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5283, 9, "Rowal, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5295, 14, "Chocolat chaud, onctueux, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5316, 4, "Shortening, domestique, composite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5297, 14, "Chocolat chaud, cacao, sans sucre ajouté, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5335, 5, "Poulet, foie, toutes catégories, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5334, 5, "Poulet, pieds, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5333, 5, "Poulet, conserve, sans bouillon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5332, 4, "Vinaigrette, mayonnaise, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5331, 4, "Vinaigrette, ranch, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5330, 4, "Vinaigrette, ranch, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5329, 4, "Vinaigrette, ranch, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5328, 4, "Vinaigrette, italienne, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5296, 14, "Chocolat chaud avec guimauves, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5327, 4, "Vinaigrette, mille îles, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5310, 4, "Gras animal, gras de bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5309, 4, "Graisse de rôti (gras de porc, gras de boeuf, gras de mouton)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5308, 1, "Beurre, léger, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5307, 1, "Beurre, léger, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5306, 4, "Vinaigrette, française, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5305, 1, "Garniture à dessert (non laitière), sans gras, Reddi Wip" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5300, 1, "Crème sure, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5299, 1, "Crème sure, légère" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5269, 14, "Boisson, mélange à saveur, chocolat, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5268, 14, "Boisson, mélange à saveur, caroube, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5253, 6, "Soupe, NISSIN, OODLES OF NOODLES TOP RAMEN nouilles ramen, saveur orientale, sèches, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5266, 6, "Soupe, pois verts, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5221, 17, "Veau de grain, épaule, bifteck de palette, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5220, 5, "Bernache du canada (outarde), autochtone, cuisse, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5219, 5, "Bernache du canada (outarde), autochtone, poitrine, viande et peau, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5218, 5, "Bernache du Canada (outarde), autochtone, poitrine, viande et peau, rôtie sur le feu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5217, 5, "Bernache du Canada (outarde), autochtone, poitrine, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5216, 17, "Veau de lait, épaule, bifteck de palette, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5215, 5, "Bernache du Canada (outarde), autochtone, poitrine, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5214, 17, "Veau de lait, épaule, bifteck de palette, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5222, 17, "Veau de grain, épaule, bifteck de palette, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5213, 5, "Bernache du Canada (outarde), autochtone, viande seulement, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5211, 17, "Veau de lait, côtelette, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5209, 5, "Bernache du Canada (outarde), autochtone, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5208, 8, "Céréale, prête-à-manger, Honest O's, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5207, 17, "Veau, de lait, épaule, bifteck de palette, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5206, 17, "Veau de lait, épaule, bifteck de palette, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5205, 17, "Veau de lait, côtelette, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5204, 17, "Veau de grain, épaule, bifteck de palette, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5203, 17, "Veau de grain, épaule, bifteck de palette, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5212, 5, "Bernache du Canada (outarde), autochtone, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5267, 6, "Soupe, tomates, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5223, 5, "Bernache du canada (outarde), autochtone, cuisse, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5225, 5, "Bernache du canada (outarde), autochtone, cuisse, viande et peau, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5263, 6, "Soupe, crème, pommes de terre, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5261, 6, "Soupe, crème, oignon, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5260, 6, "Soupe, crème, champignons, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5258, 6, "Soupe, crème, poulet, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5257, 6, "Soupe, fromage cheddar, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5256, 6, "Soupe, crème, céleri, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5255, 6, "Soupe, crème, asperges, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5254, 6, "Soupe, NISSIN, CUP NOODLES, nouilles ramen, saveur de poulet, sèches, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5224, 5, "Bernache du canada (outarde), autochtone, cuisse, viande et peau, rôtie sur le feu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5336, 6, "Soupe, consommé ou bouillon, boeuf, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5240, 18, "Craquelin, fromage, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5232, 8, "Céréale, chaude, Red River, préparée, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5231, 8, "Céréale, chaude, Red River, séché, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5230, 5, "Bernache du canada (outarde), autochtone, poumons, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5229, 5, "Bernache du canada (outarde), autochtone, foie, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5228, 5, "Bernache du canada (outarde), autochtone, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5227, 5, "Bernache du canada (outarde), autochtone, cou, viande et peau, rôti sur le feu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5226, 5, "Bernache du canada (outarde), autochtone, cou, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5241, 14, "Boisson à base de plantes, soya, originale et vanille, non-enrichie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5337, 6, "Soupe, bouillon, poulet, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5355, 6, "Sauce chili, piments forts, chili, verts, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5339, 6, "Soupe, crème, champignons, conserve, condensée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5427, 15, "Mollusques, conque, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5426, 14, "Chocolat chaud, hypocalorique, avec aspartame, mélange sec, calcium et phosphore ajoutés, sans sodium ou vitamine A ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5424, 14, "Boisson, type déjeuner, orange, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5423, 14, "Café instantané, poudre, mi-caféiné (50% de caféine)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5422, 14, "Café infusé, espresso, préparation restaurant, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5419, 11, "Cornichons, chowchow, avec moutarde d'oignons et de chou-fleur, douce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5417, 11, "Poivron rouge, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5416, 11, "Carotte, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5428, 16, "Beurre d'arachides  crémeux, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5415, 11, "Poivron vert, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5413, 11, "Oignon, jeune, verts, bout seulement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5412, 11, "Laitue, feuilles rouges" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5411, 11, "Rapini (brocoli raab), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5410, 11, "Rapini (brocoli raab), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5409, 10, "Porc, bacon, gras fondu, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5408, 10, "Porc, estomac, cuit, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5407, 10, "Porc, salé, bacon, cuit, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5406, 10, "Porc, salé, bacon, cuit au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5414, 11, "Oignon, doux, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5405, 10, "Porc, salé, bacon, cuit, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5429, 14, "Boisson à base de plantes, soya, non enrichie, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5431, 18, "Craquelin, fromage, sandwich, fourré avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5457, 14, "Boisson, saveur de fruits, poudre, hypocalorique, vitamine C, avec aspartame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5456, 19, "Confiseries, sirop, grenadine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5455, 22, "Pâtes, fraîches-réfrigérées, tortellinis au fromage, tel qu'acheté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5454, 20, "Grains céréaliers, farine d'avoine, partiellement décortiquée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5453, 19, "Dessert, congelé, crème glacée, vanille, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5452, 19, "Bonbons, carrés avec fruits et noix, mou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5451, 19, "Chocolat chaud, cacao, à haute teneur en matière grasse ou déjeuner, préparé avec alkali, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5450, 19, "Chocolat chaud, cacao, à haute teneur en matière grasse ou déjeuner, nature, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5430, 18, "Tartelette de petit déjeuner, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5449, 25, "Grignotises, croustilles, tortilla, non salées, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5442, 25, "Grignotises, base de maïs, extrudé, bouchées, fromage, cuites au four, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5441, 25, "Grignotises, croustilles, tortilla, faibles en gras, cuites au four sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5439, 19, "Bonbons, fève de café, enrobé de chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5438, 19, "Bonbons, grain de café, enrobé de chocolat noir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5437, 19, "Dessert, congelé, crème glacée, chocolat, léger, sans sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5435, 19, "Bonbons, REESE'S, FAST BREAK, chocolat au lait, beurre d'arachide, et nougat mou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5434, 19, "Bonbons, tablettes, Kit Kat Grand Kat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5433, 19, "Bonbons, REESESTICKS, gaufrettes, beurre d'arachide, chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5444, 25, "Grignotises, maïs soufflé, sirop de sucre/caramel, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5404, 9, "Ananas, cru, variété extra sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5403, 9, "Ananas, cru, variétés traditionnelles" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5402, 19, "Confits, fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5368, 6, "Sauce, pâtes, spaghetti ou marinara, prête-à-servir, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5364, 6, "Sauce, tomate, sauce chili, bouteille, salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5363, 6, "Soupe, bouillon, poulet, prête-à-servir, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5362, 6, "Soupe, pommes de terre, instantanée, déshydratée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5361, 6, "Soupe, crème, champignons, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5358, 6, "Soupe, pois, faible en sodium, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5357, 6, "Soupe, tomates, faible en sodium, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5356, 6, "Soupe, bouillon, poisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5369, 6, "Sauce, viande ou volaille, préparée, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5199, 8, "Céréale, chaude, gruau, instantanée: fruits sauvages, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5353, 6, "Sauce, dinde, instantanée, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5352, 6, "Sauce, boeuf, instantanée, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5351, 6, "Sauce, brune, instantanée, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5350, 6, "Soupe, tomates, conserve, condensée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5348, 6, "Soupe, brocoli et fromage, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5347, 6, "Soupe, nouilles ramen, toutes saveurs, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5341, 6, "Sauce, teriyaki, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5340, 6, "Soupe, bouillon, poulet, prête à servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5354, 6, "Sauce chili, piments forts, chili, rouges, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5370, 6, "Soupe, boeuf et champignons, faible en sodium, chunky" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5371, 6, "Sauce, adobo fresco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5373, 6, "Soupe, bouillon ou consommé, en cube ou en granules, faible en sodium, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5401, 9, "Datte, variété Medjool" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5400, 9, "Tangerine (mandarines), conserve, dans du sirop épais, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5399, 9, "Prune, conserve, dans du sirop épais, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5398, 9, "Poire, conserve, dans du sirop épais, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5397, 9, "Pêche, conserve, dans du sirop épais, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5396, 9, "Cerise sucrée (guigne), conserve, dans du sirop épais, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5395, 9, "Abricot, conserve, dans du sirop épais, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5394, 9, "Ananas, conserve, dans du jus, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5393, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du sirop extra épais, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5392, 19, "Confits, cerises au marasquin, bocal, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5391, 9, "Olive, marinée, conserve ou embouteillées, verte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5390, 9, "Canneberge, séchée, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5389, 9, "Mûre sauvage, jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5384, 7, "Saucisse à déjeuner, en chapelet ou en galette, boeuf, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5381, 7, "Saucisse à déjeuner, en chapelet ou en galette, porc, pré-cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5379, 7, "Porc et poulet, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5378, 7, "Porc et jambon, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5377, 7, "Porc/jambon/poulet, en conserve, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5376, 7, "Saucisse fumée, boeuf, porc et dinde, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5338, 6, "Soupe, minestrone, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5196, 8, "Céréale, chaude, avoine (gruau), instantanée: miel avec son, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5179, 5, "Dindon, jeune, aile, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5193, 8, "Céréale, chaude, avoine (gruau), instantanée: Dinoseufs, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4873, 20, "Grains céréaliers, farine d'orge, malt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4872, 20, "Grains céréaliers, farine ou semoule d'orge" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4871, 20, "Grains céréaliers, farine de maïs, dégermée, non enrichie, jaune" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4870, 16, "Hoummos (hommos, hummus), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4869, 16, "Lentilles, roses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4868, 11, "Wasabi, racine, (raifort japonais), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4867, 11, "Champignon, paille de riz, conserve, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4866, 11, "Champignon, pleurote, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4874, 20, "Pâtes, nouilles de riz, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4865, 11, "Vergerette du Canada, autochtone, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4863, 11, "Piment, pasilla, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4862, 11, "Piment, hongrois, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4861, 11, "Piment, chili, vert, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4860, 11, "Piment, jalapeno, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4859, 11, "Piment, ancho, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4858, 11, "Piment, serrano, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4857, 11, "Piment, banane, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4856, 11, "Raisin, feuilles (feuilles de vigne), conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4864, 11, "Anserine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4855, 11, "Raisin, feuilles (feuilles de vigne), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4875, 5, "Canard, caneton, domestique, Pékin, cuisse, viande et peau, non désossé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4879, 9, "Pruneau, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4910, 16, "Tofu, soyeux, mou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4909, 16, "Tofu, régulier; mou, ou ferme, préparé avec chlorure de magnésium (nigari)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4908, 14, "Thé glacé, saveur de citron, prêt-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4906, 11, "Crosses de fougères (têtes de violon), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4905, 6, "Sauce, Alfredo, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4904, 6, "Soupe, NISSIN, CUP NOODLES, nouilles ramen, saveur de poulet, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4903, 6, "Soupe, NISSIN, OODLES OF NOODLES TOP RAMEN, nouilles ramen, saveur orientale, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4891, 2, "Raifort, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4878, 9, "Ramboutan / litchi chevelu,  conserve, sirop" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4890, 2, "Câpres, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4887, 25, "Grignotises, RICE KRISPIES SQUARES" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4886, 16, "Pois chiches, farine (Besan)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4885, 11, "Yautia (tannier, chou des Caraibes), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4884, 11, "Champignon, Cloud ears, déshydratés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4883, 11, "Épinards blancs de Malabar (baselle blanche), cuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4882, 11, "Chou, napa, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4881, 11, "Chrysantheme, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4880, 11, "Tomate, orange, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4888, 20, "Pâtes, nouilles de riz, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4854, 11, "Gourganes (fèves des marais, fava), cosses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4853, 11, "Citronelle (lemon-grass), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4851, 11, "Brocoli, chinois, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4815, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre et gras, parures de 3mm (1/8\"), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4814, 17, "Agneau, Nouvelle-Zélande, congelé, gigot, entier, maigre et gras, parures de 3mm (1/8\"), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4813, 17, "Agneau, Nouvelle-Zélande, congelé, gigot, entier, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4812, 17, "Agneau, Nouvelle-Zélande, congelé, jarret, maigre et gras, 3mm (1/8\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4811, 17, "Agneau, Nouvelle-Zélande, congelé, jarret, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4810, 17, "Agneau, Nouvelle-Zélande, congelé, coupes diverses, maigre et gras, 3mm (1/8\") paré, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4809, 17, "Agneau, Nouvelle-Zélande, congelés, coupes diverses, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4800, 17, "Agneau, canadien, épaule, entier, maigre et gras, 3mm (1/8\") paré, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4816, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre et gras, parures de 3mm (1/8\"), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4797, 17, "Agneau, canadien, épaule, entier, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4794, 17, "Agneau, canadien, côte, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4792, 17, "Agneau, canadien, longe, maigre et gras, 3mm (1/8\") paré, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4791, 17, "Agneau, canadien, longe, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4786, 17, "Agneau, canadien, gigot, entier, maigre et gras, 3mm (1/8\") paré, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4785, 17, "Agneau, canadien, gigot, entier, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4784, 17, "Agneau, canadien, jarret, maigre et gras, 3mm (1/8\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4783, 17, "Agneau, canadien, jarret, maigre et gras, 3mm paré (1/8''), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4782, 17, "Agneau, canadien, coupes diverses, maigre et gras, 3mm (1/8\"), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4795, 17, "Agneau, canadien, côte, maigre et gras, 3mm (1/8\") paré, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4817, 17, "Agneau, Nouvelle-Zélande, congelé, côte, maigre et gras, parures de 3mm (1/8\"), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4818, 17, "Agneau, Nouvelle-Zélande, congelé, côte, maigre et gras, parures de 3mm (1/8\"), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4819, 17, "Agneau, Nouvelle-Zélande, congelé, épaule, entier, maigre et gras, parures de 3mm (1/8\"), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4850, 11, "Arrowroot, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4849, 11, "Tomate, jaune, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4848, 11, "Concombre, pelé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4847, 9, "Durion, cru ou congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4846, 9, "Jaquier,  conserve, sirop" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4845, 9, "Mangoustan,  conserve, sirop" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4843, 7, "Charcuterie, poulet, poitrine (glacé au miel)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4841, 5, "Canard, caneton, domestique, Pékin, cuisse, viande, non désossé, cuit sans peau, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4840, 5, "Canard, caneton, domestique, Pékin, poitrine, viande, sans os, cuit sans peau, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4839, 5, "Canard, caneton, domestique, canard de Pékin, poitrine, viande et peau, désossé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4833, 19, "Dessert, congelé, glacé, italien, préparation de restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4832, 19, "Bonbons, M&M's, petits chocolats au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4831, 19, "Confiseries, chocolat à cuisson, chocolat au lait, petites brisures" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4830, 19, "Confiseries,  chocolat à cuisson, M&M's mi-sucré, petites brisures" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4829, 19, "Bonbons, halavah (halvah), nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4828, 19, "Bonbons, enrobage de yogourt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4823, 18, "Gâteau, jaune, léger, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4821, 18, "Gâteau quatre-quarts, préparation commerciale, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4820, 17, "Agneau, Nouvelle-Zélande, congelé, épaule, entier, maigre et gras, parures de 3mm (1/8\"), braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4911, 16, "Tofu, soyeux, ferme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5195, 8, "Céréale, chaude, avoine (gruau), instantanée: Biscuits et Crème, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4912, 16, "Tofu, soyeux, extra ferme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4914, 16, "Tofu, soyeux, léger, extra ferme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5144, 8, "Céréale, prête-à-manger, 'O' pommes cannelles, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5143, 8, "Céréale, chaude, avoine (gruau), Rapide: Robin Hood, sèche, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5139, 8, "Céréale, prête-à-manger, Selects, Cranberry Almond Crunch, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5137, 8, "Céréale, prête-à-manger, Shredded Wheat: miel et noix, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5136, 8, "Céréale, prête-à-manger, muesli: suprême, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5135, 8, "Céréale, prête-à-manger, Muesli: biologique, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5134, 8, "Céréale, prête-à-manger, Morning Crisp: quatre noix, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5133, 8, "Céréale, prête-à-manger, Morning Crisp: chocolat, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5145, 8, "Céréale, prête-à-manger, Puffins: cannelle, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5132, 8, "Céréale, prête-à-manger, Morning Crisp: fraises, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5114, 8, "Céréale, prête-à-manger, Kashi: soufflée au miel, Kashi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5113, 8, "Céréale, prête-à-manger, Grainshop, Weetabix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5112, 8, "Céréale, prête-à-manger, Alpen: faible en gras, sans sel, sans sucre, Weetabix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5088, 8, "Céréale, chaude, avoine (gruau), instantanée: fruits sauvages, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5084, 8, "Céréale, chaude, avoine (gruau), instantanée: miel avec son, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5082, 8, "Céréale, chaude, avoine (gruau), instantanée: biscuits et crème, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5081, 8, "Céréale, chaude, avoine (gruau), instantanée: Dinosoeufs, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5069, 8, "Céréale, prête-à-manger, Nesquik, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5124, 8, "Céréale, prête-à-manger, Kashi: élevée en fibre et granola, Kashi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5067, 8, "Céréale, prête-à-manger, Chex: miel et noix, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5148, 8, "Céréale, prête-à-manger, avoine en O miel et noix, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5155, 8, "Céréale, prête-à-manger, granola: avec raisins secs et amandes, Menu bleu, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5189, 5, "Dindon, jeune, haut de cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5188, 5, "Dindon, jeune, haut de cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5187, 5, "Dindon, jeune, pilon, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5186, 5, "Dindon, jeune, pilon, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5185, 5, "Dindon, jeune, aile, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5184, 5, "Dindon, jeune, cuisse, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5182, 5, "Dindon, jeune, haut de cuisse, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5181, 5, "Dindon, jeune, pilon, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5153, 8, "Céréale, prête-à-manger, Dribble-O-Maïs, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5180, 5, "Dindon, jeune, poitrine, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5178, 5, "Dindon, jeune, cuisse, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5176, 5, "Dindon, jeune, haut de cuisse, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5175, 5, "Dindon, jeune, pilon, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5174, 3, "Bébé, céréale, prête-à-manger, en forme de 'O', avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5173, 5, "Dindon, jeune, poitrine, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5168, 8, "Céréale, prête-à-manger, flocons de son, bon au possible, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5161, 8, "Céréale, prête-à-manger, flocons givrés légèrement grillés, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5158, 8, "Céréale, prête-à-manger, granola: au miel et aux amandes, biologique, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5458, 4, "Vinaigrette, crémeuse, à base de crème sure et/ou babeurre et/ou huile, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5011, 13, "Boeuf, haché, régulier, émietté, sauté, rinsé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5010, 13, "Boeuf, haché, régulier, émietté, non rinsé, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5009, 13, "Boeuf, haché, maigre, émietté, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4965, 22, "Pâté au poulet, congelé, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4964, 22, "Ragoût de boeuf, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4963, 22, "Chili con carne avec haricots, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4962, 22, "Pizza au pepperoni, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4954, 22, "Croquettes de poulet, macaroni au fromage, maïs en sauce et pouding au chocolat, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4951, 22, "Enchilada au poulet, riz de type mexicain, sauce au fromage Monterey Jack, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4942, 22, "Déjeuner, oeufs brouillés, saucisse et pommes de terre rissolées, congelés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4941, 22, "Choux farcis à la viande dans une sauce aux tomates et pommes de terre fouettées, congelés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4970, 2, "Sauce, moutarde, jaune, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4940, 22, "Bifteck Salisbury en sauce avec macaroni et fromage, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4936, 22, "Languettes de boeuf, sauce crémeuse, congelées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4935, 22, "Boeuf de type pot-au-feu avec pommes de terre fouettées, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4933, 22, "Macaroni et boeuf, sauce aux tomates, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4931, 22, "Poitrine de poulet farcie au brocoli et fromage, congelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4925, 22, "Pâtes avec saucisses tranchées, sauce aux tomates, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4919, 22, "Macaroni au fromage, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4917, 19, "Dessert, congelé, crème glacée, légère, avec aspartame, vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4915, 18, "Craquelin, fromage, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4939, 22, "Boeuf oriental, légumes et riz, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4973, 11, "Champignon, portobella (portobello), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4974, 11, "Champignon, bruns, italien (crimini), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4975, 12, "Noix, macadamia, rôties à sec, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5002, 7, "Charcuterie, poitrine de dinde, cuite, sans gras, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5001, 6, "Sauce, sauce au fromage pour nacho, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4998, 13, "Boeuf, haché, extra maigre, émietté, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4997, 13, "Boeuf, haché, extra maigre, galette de, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4996, 13, "Boeuf, haché, extra maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4995, 13, "Boeuf, haché, mi-maigre, émietté, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4994, 18, "Tartelette grille-pain, fruits (fraises, cerises, pommes) faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4993, 17, "Gibier, viande de, bison, épaule, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4991, 18, "Muffin, bleuets, saveur artificielle, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4990, 18, "Gaufre, blé entier, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4989, 17, "Gibier, viande de, bison, faux-filet, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4988, 17, "Gibier, viande de, bison, haut de surlonge, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4986, 16, "Soya, produits fermentés, tempeh (tempe), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4985, 14, "Thé infusé, préparé avec de l'eau de robinet, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4983, 14, "Café, instantané,saveur vanille française, aspartame et acésulfame de potassium, sans gras, sans sucre, hypocalorique, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4981, 14, "Café infusé, préparé avec eau municipale, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4980, 14, "Boissons gazeuses, cola, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4979, 14, "Boissons gazeuses, cola avec aspartame, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4976, 12, "Noix, macadamia, rôties à sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4913, 16, "Tofu, soyeux, léger, ferme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5459, 1, "Fromage, imitation, cheddar, faible en cholestérol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5474, 1, "Fromage monterey, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5463, 19, "Dessert, congelé, fait avec lait écrémé, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5753, 19, "Dessert, congelé, jus et crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5752, 19, "Dessert, congelé, jus, orange" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5751, 19, "Dessert, congelé, yogourt glacé, chocolat, lait écrémé, édulcorant artificiel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5750, 19, "Dessert, congelé, crème glacée, vanille, légère, sans sucre, enrobée de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5749, 19, "Pectine, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5748, 19, "Bonbons, amandes dragées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5747, 19, "Bonbons, ALMOND JOY bouchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5745, 19, "Bonbons, REESE'S bouchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5754, 19, "Dessert, congelé, crème glacée, chocolat, riche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5743, 19, "Bonbons, chocolat au lait avec amandes, bouchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5741, 19, "Dessert, pouding, tapioca, prêt-à-manger, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5740, 19, "Dessert, pouding, vanille, prêt-à-manger, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5739, 19, "Dessert, pouding, vanille, mélange sec, instantané, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5738, 19, "Dessert, pouding, chocolat, mélange sec, instantané, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5737, 19, "Bonbons, YORK BITES" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5736, 19, "Confiseries, garniture, tartinade au chocolat et noisettes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5735, 19, "Dessert, congelé, crème glacée, chocolat, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5734, 19, "Bonbons, TWIZZLERS NIBS CHERRY BITS" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5742, 19, "Dessert, pouding, chocolat, prêt-à-manger, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5733, 17, "Gibier, viande de chevreuil (venaison), intérieur de ronde, maigre, bifteck 1\", cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5755, 8, "Céréale, chaude, gruau, Rapide: Robin Hood, préparée, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5759, 17, "Gibier, viande, autochtone, phoque barbu, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5777, 17, "Gibier, viande, autochtone, narval, peau (muktuk), vieillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5776, 17, "Gibier, viande, autochtone, narval, peau (muktuk), bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5775, 17, "Gibier, viande, autochtone, narval, peau (muktuk), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5774, 17, "Gibier, viande, autochtone, narval, lard, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5773, 17, "Gibier, viande, autochtone, narval, lard, vieilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5772, 17, "Gibier, viande, autochtone, narval, lard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5771, 17, "Gibier, viande, autochtone, narval, viande, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5770, 17, "Gibier, viande, autochtone, narval, nageoires, vieillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5758, 14, "Café, succédané, boisson de céréales, poudre, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5769, 17, "Gibier, viande, autochtone, béluga, viande, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5767, 17, "Gibier, viande, autochtone, béluga, muktuk, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5766, 17, "Gibier, viande, autochtone, béluga, muktuk, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5765, 17, "Gibier, viande, autochtone, béluga, lard, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5764, 17, "Gibier, viande, autochtone, béluga, lard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5763, 17, "Gibier, viande, autochtone, phoque barbu, lard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5762, 17, "Gibier, viande, autochtone, phoque barbu, intestin, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5761, 17, "Gibier, viande, autochtone, phoque barbu, intestin, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5760, 17, "Gibier, viande, autochtone, phoque barbu, viande, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5768, 4, "Gras animal, autochtone, huile de béluga" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5732, 17, "Gibier, viande de chevreuil (venaison), filet, rôti, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5731, 17, "Gibier, viande de chevreuil (venaison), rôti de pointe d'épaule, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5730, 17, "Gibier, viande de chevreuil (venaison), longe, maigre, bifteck 1\", cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5699, 7, "Charcuterie, salami italien, porc et boeuf, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5698, 7, "Charcuterie, pain de viande, macaroni au fromage, poulet, porc et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5696, 7, "Charcuterie, jambon au miel, fumé, extra maigre, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5694, 7, "Charcuterie, saucisson de bologne, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5693, 7, "Charcuterie, poitrine de poulet, rôtie au four, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5692, 7, "Saucisse kielbassa (kolbassa), dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5691, 7, "Charcuterie, poitrine de poulet, rôtie au four, sans gras, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5689, 7, "Charcuterie, saucisson à la bière, porc et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5702, 7, "Charcuterie, poitrine de dinde, rôtie au four, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5687, 7, "Saucisse, fumée, dinde, épicée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5684, 7, "Charcuterie, salami italien, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5683, 7, "Charcuterie, pastrami, boeuf, extrai maigre, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5682, 7, "Saucisse Bratwurst, porc, boeuf et dinde, fumée, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5681, 7, "Saucisse Bratwurst, poulet, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5680, 7, "Saucisse Bratwurst, boeuf et porc, fumée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5679, 7, "Bâtonnets de viande, bacon et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5678, 7, "Saucisse, \"swisswurst\", porc et boeuf, avec fromage suisse, fumée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5677, 7, "Saucisse à déjeuner, en chapelet ou en galette, dinde, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5685, 7, "Saucisse italienne, dinde, fumée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5705, 7, "Saucisse fumée, viandes mélangées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5706, 11, "Pomme de terre, Russet, chair et pelure, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5707, 11, "Pomme de terre, blanche, chair et pelure, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5729, 17, "Gibier, viande de chevreuil (venaison), haché, cuit, grillé au poêlon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5728, 17, "Gibier, viande de  chevreuil (venaison), haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5727, 17, "Gibier, viande, wapiti (élan), filet, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5726, 17, "Gibier, viande, wapiti (élan), ronde, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5725, 17, "Gibier, viande, wapiti (élan), longe, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5724, 17, "Gibier, viande, wapiti (élan), haché, cuit, grillé au poêlon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5723, 17, "Gibier, viande, wapiti (élan) haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5722, 17, "Gibier, viande, bison, intérieur de ronde, maigre, bifteck, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5721, 17, "Gibier, viande, bison, intérieur de ronde, maigre, bifteck, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5720, 17, "Gibier, viande, bison, bifteck de faux-filet, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5719, 17, "Gibier, viande, bison, épaule, rôti pointe d'épaule, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5718, 17, "Gibier, viande, bison, épaule, rôti pointe d'épaule, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5717, 17, "Gibier, viande, bison, haut de surlonge, maigre, bifteck, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5716, 17, "Gibier, viande, bison, haché, cuit, grillé au poêlon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5715, 17, "Gibier, viande, bison, haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5714, 14, "Boisson, orange, vitamine C ajoutée, hypocalorique, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5710, 14, "Café, instantané, saveur moka, poudre, avec colorant à café et édulcorant artificiel, décaféiné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5709, 12, "Noix, noix d'acajou (cajous, anacardes), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5708, 11, "Pomme de terre, rouge, chair et pelure, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5778, 17, "Gibier, viande, autochtone, phoque annelé, lard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5675, 7, "Saucisse, fumée, avec fromage cheddar, pré-cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5779, 17, "Gibier, viande, autochtone, phoque annelé, lard, vieilli, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5781, 17, "Gibier, viande, autochtone, phoque annelé, lard, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5844, 15, "Poisson, ombre, autochtone, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5843, 15, "Ombre, autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5842, 15, "Poisson, omble chevalier, autochtone, peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5841, 15, "Poisson, omble chevalier, autochtone, viande et peau, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5840, 15, "Poisson, omble chevalier, autochtone, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5839, 15, "Poisson, omble chevalier, autochtone, viande, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5838, 15, "Poisson, omble chevalier, autochtone, viande, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5837, 17, "Gibier, viande, autochtone, ours, fumé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5845, 15, "Poisson, inconnu, autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5836, 17, "Gibier, viande, autochtone, ours blanc (ours polaire), gras, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5834, 17, "Gibier, viande, autochtone, ours blanc (ours polaire), bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5833, 17, "Gibier, viande, autochtone, ours blanc (ours polaire), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5832, 17, "Gibier, viande, autochtone, boeuf musqué, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5831, 17, "Gibier, viande, autochtone, boeuf musqué, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5830, 17, "Gibier, viande, autochtone, orignal, sang, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5829, 17, "Gibier, viande, autochtone, orignal, foie, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5828, 17, "Gibier, viande, autochtone, orignal, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5827, 17, "Gibier, viande, autochtone, orignal, rognon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5835, 17, "Gibier, viande, autochtone, ours blanc (ours polaire), gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5826, 17, "Gibier, viande, autochtone, orignal, poumons, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5846, 15, "Poisson, inconnu, autochtone, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5848, 15, "Poisson, inconnu, autochtone, fumé, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5867, 22, "Spaghetti avec boulettes de viande dans une sauce aux tomates, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5866, 22, "Chili sans haricots, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5864, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, désossé, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5863, 21, "Aliments prêts à manger, pizza avec viande et légumes, croûte lève-au-four, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5862, 21, "Aliments prêts à manger, pizza avec fromage, viande et légumes, croûte régulière, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5861, 21, "Aliments prêts à manger, pizza, avec fromage, croûte lève-au-four, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5860, 21, "Aliments prêts à manger, pizza avec fromage, croûte régulière, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5859, 19, "Dessert, congelé, crème glacée, chocolat, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5847, 15, "Poisson, inconnu, autochtone, fumé, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5858, 19, "Dessert, congelé, POPSICLE pop (orange, cerise, raisin), sans sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5856, 6, "Soupe, nouilles ramen, saveur de poulet, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5855, 6, "Soupe, nouilles ramen, saveur de boeuf, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5854, 5, "Poulet, aile, congelé, glacé, saveur de barbecue, réchauffé au four conventionnel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5853, 5, "Poulet, aile, congelé, glacé, saveur de barbecue, réchauffé au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5852, 5, "Poulet, aile, congelé, givré, saveur de barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5851, 8, "Céréale, prête-à-manger, Morning Crisp: petits fruis sauvages, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5850, 15, "Poisson, lotte (loche), autochtone, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5849, 15, "Poisson, lotte (loche), autochtone, oeufs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5857, 19, "Dessert, congelé, barre FUDGESICLE, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5825, 17, "Gibier, viande, autochtone, orignal, poumons, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5824, 4, "Gras animal, autochtone, orignal, gras, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5823, 17, "Gibier, viande, autochtone, orignal, gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5799, 17, "Gibier, viande, autochtone, phoque annelé, nageoires, mattak, vieillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5798, 17, "Gibier, viande, autochtone, morse, nageoires, mattak, vieillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5797, 17, "Gibier, viande, autochtone, morse, peau (muktuk), vieillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5796, 17, "Gibier, viande, autochtone, morse, peau (muktuk), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5795, 17, "Gibier, viande, autochtone, morse, viande, vieillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5794, 17, "Gibier, viande, autochtone, morse, viande, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5793, 17, "Gibier, viande, autochtone, morse, lard, vieilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5792, 17, "Gibier, viande, autochtone, morse, lard, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5800, 17, "Gibier, viande, autochtone, castor, viande, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5791, 17, "Gibier, viande, autochtone, morse, lard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5789, 17, "Gibier, viande, autochtone, phoque annelé, bébé phoque, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5788, 17, "Gibier, viande, autochtone, phoque annelé, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5787, 17, "Gibier, viande, autochtone, phoque annelé, yeux, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5786, 17, "Gibier, viande, autochtone, phoque annelé, cervelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5785, 17, "Gibier, viande, autochtone, phoque annelé, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5784, 17, "Gibier, viande, autochtone, phoque annelé, viande, vieillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5783, 17, "Gibier, viande, autochtone, phoque annelé, viande, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5782, 17, "Gibier, viande, autochtone, phoque annelé, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5790, 17, "Gibier, viande, autochtone, phoque annelé, bébé phoque, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5801, 17, "Gibier, viande, autochtone, castor, pieds, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5802, 17, "Gibier, viande, autochtone, castor, queue, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5803, 17, "Gibier, viande, autochtone, castor, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5822, 17, "Gibier, viande, autochtone, orignal, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5821, 17, "Gibier, viande, autochtone, orignal, moelle osseuse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5820, 17, "Gibier, viande, autochtone, orignal, moelle osseuse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5819, 17, "Gibier, viande, autochtone, orignal, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5818, 17, "Gibier, viande, autochtone, caribou, (renne), langue, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5817, 17, "Gibier, viande, autochtone, caribou, (renne), langue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5816, 17, "Gibier, viande, autochtone, caribou, (renne), foie, cuit au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5815, 17, "Gibier, viande, autochtone, caribou, (renne), foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5814, 17, "Gibier, viande, autocht., caribou, (renne), estomac, contenus stomacaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5813, 17, "Gibier, viande, autochtone, caribou, (renne), estomac, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5812, 17, "Gibier, viande, autochtone, caribou, (renne), poumons, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5811, 17, "Gibier, viande, autochtone, caribou, (renne), coeur, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5810, 17, "Gibier, viande, autochtone, caribou, (renne), coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5809, 17, "Gibier, viande, autochtone, caribou, (renne), cervelle, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5808, 17, "Gibier, viande, autochtone, caribou, (renne), cervelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5807, 17, "Gibier, viande, autochtone, caribou, (renne), viande, vieillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5806, 17, "Gibier, viande, autochtone, caribou, (renne), viande, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5805, 17, "Gibier, viande, autochtone, caribou (renne), gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5804, 17, "Gibier, viande, autochtone, caribou (renne), moelle osseuse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5780, 17, "Gibier, viande, autochtone, phoque annelé, lard, vieilli, solide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5462, 5, "Bacon, dinde, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5674, 7, "Saucisse, saucisson polonais, porc et boeuf, fumé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5667, 5, "Autruche, haut de longe, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5545, 16, "Ragoût, végétarien, sans viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5544, 16, "Viande, simili, tartinade à sandwich" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5543, 16, "Filet, végétarien, simili viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5541, 16, "Viande, simili, boulettes de viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5540, 16, "Viande, simili, viande froide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5539, 16, "Saucisse fumée (simili viande), végétarienne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5538, 16, "Viande, simili, poisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5537, 16, "Viande, simili, poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5546, 16, "Végétarien, pain de viande ou galette, simili viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5536, 16, "Haricots, rouges, liquide seulement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5534, 16, "Haricots, chili, barbecue, ranch, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5533, 25, "Grignotises, bretzels, mous" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5531, 19, "Confiseries, garniture à tarte, cerise, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5530, 14, "Lait frappé, non au chocolat, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5529, 19, "Bonbons, gomme à mâcher, sans sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5528, 19, "Bonbons, enrobage de chocolat, diététique ou hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5527, 19, "Bonbons, durs (sucre d'orge), sucré au sorbitol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5526, 19, "Bonbons, jujubes, moins de Calories (sorbitol)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5535, 16, "Vermicelles de soya, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5525, 19, "Bonbons, nougat, avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5547, 11, "Radis, à l'hawaïenne, mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5549, 11, "Chou, moutarde, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5569, 1, "Oeuf, poule, brouillé, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5568, 5, "Faisan, cuit, portion comestible" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5567, 5, "Caille, cuite, portion comestible" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5566, 1, "Fromage cheddar, imitation" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5565, 1, "Fromage à tartiner, base de fromage à la crème, arômatisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5563, 1, "Fromage à la crème, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5562, 1, "Fromage cottage, avec légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5561, 19, "Dessert, congelé, coupe glacée (sundae), préemballé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5548, 11, "Chou, à la japonaise, frais, mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5560, 1, "Crème, garniture fouettée, succédané, diététique, poudre, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5557, 11, "Tomate, sauce, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5556, 4, "Vinaigrette, babeurre, légère" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5555, 4, "Beurre, succédané, sans gras, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5554, 16, "Viande, simili, bacon en miettes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5553, 14, "Déjeuner instantané, poudre, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5552, 14, "Alcoolisé, vin de table, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5551, 14, "Alcoolisé, vin de cuisine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5550, 11, "Aubergine, marinée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5558, 14, "Déjeuner instantané, poudre, chocolat, sans sucre, avec édulcorant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5524, 19, "Bonbons, caramel avec noix, enrobé de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5523, 19, "Confiseries, confitures et conserves, diététique (avec saccharine), toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5522, 19, "Confiseries, sirop, diététique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5487, 1, "Babeurre, liquide, culture, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5486, 7, "Saucisse fumée, boeuf et porc, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5485, 19, "Dessert, congelé, yogourt glacé, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5483, 16, "Boisson, fèves" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5480, 4, "Vinaigrette, mayonnaise, à base de tofu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5478, 4, "Vinaigrette, française, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5476, 4, "Vinaigrette, crémeuse, crème sure et/ou babeurre et/ou huile, réduite en Calories, sans cholestérol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5475, 4, "Vinaigrette, crémeuse, crème sure et/ou babeurre et/ou huile, réduite en Calories, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5489, 4, "Vinaigrette, fromage bleu ou Roquefort, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4781, 17, "Agneau, canadien, coupes diverses, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5472, 9, "Orange-fraise-banane, jus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5471, 19, "Bonbons, M&M's bonbons avec beurre d'arachide et chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5470, 1, "Colorant à café, liquide, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5469, 4, "Vinaigrette, italienne, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5467, 4, "Vinaigrette, mayonnaise, teneur réduite en gras, sans cholestérol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5466, 4, "Vinaigrette, grains de poivre, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5465, 1, "Colorant à café (non laitier), en poudre, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5464, 1, "Garniture à dessert (non laitière), congelée, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5473, 4, "Vinaigrette, fromage bleu ou roquefort, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5490, 4, "Vinaigrette, mayonnaise et type mayonnaise, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5491, 19, "Bonbons, tablettes,  MILKY WAY, tablette foncée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5492, 16, "Indien, papad (papadum)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5521, 4, "Vinaigrette, césar, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5520, 4, "Vinaigrette, fromage bleu ou roquefort, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5518, 4, "Vinaigrette, à base de babeurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5517, 4, "Vinaigrette, green goddess, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5516, 4, "Vinaigrette, salade de chou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5515, 4, "Vinaigrette, césar, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5512, 1, "Fromage mozzarella, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5511, 1, "Fromage muenster, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5510, 4, "Huile végétale, canola (colza) et soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5509, 16, "Beurre d'arachides, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5508, 4, "Huile végétale, maïs et canola (colza)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5507, 25, "Grignotises, croustilles de pommes de terre blanches, restructurées, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5501, 25, "Grignotises, maïs soufflé à l'huile, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5499, 7, "Saucisse, fumée, porc, pré-cuite, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5498, 1, "Fromage cottage, 1% M.G., réduit en lactose" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5497, 4, "Huile végétale, graines de lin, pressée à froid" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5496, 4, "Vinaigrette, salade de chou, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5495, 19, "Bonbons,  M&M's bonbons avec amandes et chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5493, 18, "Grignotises, galettes de riz, craquelins (mini crousties inclues)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5570, 5, "Pigeonneau (pigeon), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5669, 7, "Saucisson de foie, tartinade" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5571, 10, "Porc, style oriental, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5573, 11, "Pomme de terre, conserve, solides égouttés, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5644, 5, "Émeu, croupe, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5643, 5, "Émeu, croupe, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5642, 5, "Émeu, filet plat, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5641, 5, "Émeu, filet de l'éventail, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5640, 5, "Émeu, filet de l'éventail, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5639, 5, "Émeu, haché, cuit, grillé au poêlon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5638, 5, "Émeu, haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5635, 15, "Mollusques, escargot, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5645, 5, "Émeu, intérieur de pilon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5634, 15, "Mollusques, pétoncle (de baie ou géant), cuit à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5632, 14, "Boisson, saveur de fruits, poudre, vitamine C, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5631, 19, "Dessert, pouding, toutes saveurs sauf chocolat, mélange sec, instantané, hypocalorique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5630, 19, "Dessert, pouding, toutes saveurs sauf chocolat, mélange sec, régulier, hypocalorique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5629, 19, "Dessert, pouding, chocolat, mélange sec, régulier, hypocalorique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5628, 14, "Préparation pour cocktail non alcoolisé, concentré, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5627, 19, "Confiseries, garniture à tarte, bleuets, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5626, 19, "Confiseries, gelées, réduites en sucre ou sans sucre, faites maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5625, 19, "Dessert, pouding, chocolat, mélange sec, instantané, hypocalorique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5633, 15, "Poisson, maquereau, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5624, 11, "Flocons de céleri, déshydratés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5646, 5, "Émeu, intérieur de pilon, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5648, 5, "Émeu, sot-l'y-laisse, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5666, 5, "Autruche, haut de longe, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5665, 5, "Autruche, pointe de cuisse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5664, 5, "Autruche, pointe de cuisse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5663, 5, "Autruche, filet, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5662, 5, "Autruche, ronde, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5661, 5, "Autruche, sot-l'y-laisse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5660, 5, "Autruche, sot-l'y-laisse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5659, 5, "Autruche, extérieur de cuisse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5647, 5, "Émeu, extérieur de pilon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5658, 5, "Autruche, extérieur de cuisse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5656, 5, "Autruche, intérieur de cuisse, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5655, 5, "Autruche, intérieur de cuisse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5654, 5, "Autruche, intérieur de pilon, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5653, 5, "Autruche, intérieur de pilon, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5652, 5, "Autruche, l'éventail, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5651, 5, "Autruche, hachée, cuite, grillée au poêlon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5650, 5, "Autruche, hachée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5649, 5, "Émeu,  haut de longe, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5657, 5, "Autruche, extérieur de pilon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5623, 1, "Fromage, préparation, imitation" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5622, 4, "Huile végétale, maïs, arachides et olives" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5620, 4, "Vinaigrette, mayonnaise, sans cholestérol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5595, 11, "Navet, feuilles, conserve, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5593, 9, "Canneberge, jus, non sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5592, 1, "Produit de fromage fondu, Suisse, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5591, 10, "Porc, salé, bacon, réduit en sodium, grillé, sauté ou rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5589, 14, "Boisson, saveur de chocolat, base de lactosérum et lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5588, 5, "Dindon, pilon, fumé, cuit, avec peau, désossé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5587, 5, "Dindon, aile, fumée, avec peau, désossée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5586, 11, "Jus, tomates et légumes, conserve, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5597, 5, "Dindon, viande blanche ou brune, fumée, cuite, avec peau, désossée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5585, 25, "Grignotises, croustilles, tortilla, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5583, 1, "Fromage cottage, 1% M.G., sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5582, 11, "Choucroute, conserve, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5580, 1, "Fromage parmesan, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5579, 4, "Vinaigrette, bacon et tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5578, 4, "Vinaigrette, mayonnaise et type mayonnaise, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5577, 10, "Porc, salé, jambon, faible en sodium, extra maigre (approximativement 5% M.G. ), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5575, 10, "Porc, salé, jambon, faible en sodium, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5574, 11, "Légumes, macédoine, conserve, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5584, 4, "Vinaigrette, type mayonnaise, faible en sodium, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5598, 5, "Dindon, viande blanche ou brune, fumée, cuite, désossée, sans peau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5599, 11, "Coeurs de palmier, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5600, 1, "Fromage cottage, faible en gras, 1% .M.G., avec légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5619, 1, "Fromage mozzarella, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5618, 18, "Barre de petit déjeuner, croûte de flocons de maïs avec fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5617, 1, "Fromage suisse, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5616, 25, "Grignotises, mais soufflé au four à micro-ondes, faible en gras et sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5615, 25, "Grignotises, croustilles, tortilla, léger, cuit au four avec moins d'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5614, 19, "Dessert, congelé, pop, avec édulcorant artificiel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5613, 7, "Saucisse fumée, teneur réduite en gras et sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5612, 15, "Méduse, déshydratée, salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5611, 14, "Alcoolisé, riz (saké)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5610, 16, "Yogourt, tofu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5609, 16, "Haricots au four (''fèves au lard''), conserve, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5608, 25, "Grignotises, base de maïs, extrudé, croustilles, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5607, 18, "Pain mollet, seigle foncé (\"pumpernickel\")" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5606, 16, "Viande, simili, poulet, pané et frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5605, 11, "Extrait de levure, tartinade" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5604, 1, "Fromage suisse, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5603, 14, "Boisson au jus canneberges et pommes, hypocalorique, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5602, 14, "Café, instantané, poudre, avec colorant à café et édulcorant artificiel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5601, 1, "Produit de fromage fondu, cheddar, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5572, 16, "Fromage en grains, soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4780, 14, "Boisson à base de plantes, riz, enrichie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4733, 6, "Sauce, fromage, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4778, 14, "Chocolat chaud, cacao, sans sucre ajouté, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4158, 19, "Dessert, congelé, crème glacée, vanille française, molle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4157, 19, "Dessert, congelé, crème glacée, vanille, riche, 16% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4156, 19, "Dessert, congelé, crème glacée, légère, vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4155, 19, "Confiserie, garniture / grains, chocolat blanc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4154, 19, "Confiserie, garniture / brisures, beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4153, 19, "Confiserie, garniture /brisures, caramel écossais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4152, 19, "Bonbons, Golden Almond Solitaires, chocolat avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4151, 19, "Bonbons, fondant, enrobage de chocolat sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4159, 19, "Bonbons, à la menthe, enrobage de chocolat, saveur de menthe" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4149, 19, "Bonbons, tablettes, chocolat sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4147, 19, "Confiseries, chocolat amer, à cuire, carré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4146, 19, "Confiserie, chocolat amer, à cuire, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4145, 19, "Bonbons, carqamels, rouleau à saveur de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4143, 19, "Bonbons, caramel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4142, 19, "Dessert. congelé, pop au pouding, vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4141, 19, "Dessert, congelé, pop au pouding, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4140, 19, "Bonbons, tablettes / grains (pépites), caroube" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4139, 19, "Bonbons, caramel écossais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4148, 19, "Bonbons, carrés / grains, chocolat mi-sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4138, 19, "Bonbons, tablettes, Butterfinger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4161, 19, "Bonbons, tablettes, Symphony" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4164, 19, "Dessert, congelé, crème glacée, pauvre en gras, vanille, molle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4183, 19, "Bonbons, guimauve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4182, 19, "Bonbons, tablettes, Mars avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4181, 19, "Confiseries, sirop de table, crêpe avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4180, 19, "Bonbons, Twizzlers (réglisse), fraises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4179, 19, "Bonbons, tablettes, Baby Ruth" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4178, 19, "Bonbons, tablettes, Krackel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4177, 19, "Bonbons, tablettes, Kit Kat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4176, 19, "Bonbons, fèves à la gelée (jellybean)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4163, 19, "Dessert, congelé, crème glacée, vanille, 11% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4175, 19, "Bonbons, durs (sucre d'orge)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4173, 19, "Bonbons, goobers, arachides, enrobage de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4172, 19, "Bonbons, fudge, vanille avec noix, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4171, 19, "Bonbons, fudge, vanille, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4169, 19, "Bonbons, fudge, chocolat avec noix, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4168, 19, "Bonbons, fudge, chocolat, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4167, 19, "Bonbons, fondant, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4166, 19, "Bonbons, tablettes, 5th Avenue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4165, 19, "Dessert, congelé, sorbet, orange" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4174, 19, "Bonbons, jujubes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4137, 19, "Bonbons, tablettes, Bit-O-Honey candy chews" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4136, 19, "Bonbons, tablettes, Alpine White avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4135, 19, "Bonbons, tablettes, Almond Joy" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4097, 25, "Grignotises, pâte de fruits déshydratée, rouleau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4096, 25, "Grignotises, pâte de fruits déshydratée, bouchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4095, 25, "Grignotises, pâte de fruits déshydratée, tablette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4094, 25, "Grignotises, tablette de riz croustillant, grains de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4093, 25, "Grignotises, grignotises de maïs (corn nuts), nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4092, 25, "Grignotises, base de maïs, extrudé, bouchées, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4091, 25, "Grignotises, base de maïs, extrudé, oignon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4089, 25, "Grignotises, base de maïs, extrudé, cornets, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4108, 25, "Grignotises, mélange oriental, base de riz" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4088, 25, "Grignotises, base de maïs, extrudé, croustilles, barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4086, 25, "Grignotises, jerky de boeuf, haché et formé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4085, 18, "Shake and bake, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4083, 18, "Craquelin, biscuit pilote de peniche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4082, 18, "Bannock" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4081, 18, "Gâteau, carré aux dattes, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4080, 18, "Pâté, tourtière, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4079, 18, "Pâté, au bifteck, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4078, 18, "Pâté, à la dinde, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4087, 25, "Grignotises, base de maïs, extrudé, croustilles, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4110, 25, "Grignotises, maïs soufflé à l'air" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4111, 25, "Grignotises, maïs soufflé à l'huile au four à micro-ondes, saveur régulière, sans gras trans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4112, 25, "Grignotises, maïs soufflé, galettes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4134, 25, "Grignotises, croustilles, tortilla, taco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4133, 25, "Grignotises, mélange montagnard, régulier avec grains de chocolat, noix et graines salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4132, 25, "Grignotises, mélange montagnard, tropical" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4130, 25, "Grignotises, mélange montagnard, régulier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4129, 25, "Grignotises, croustilles, tortilla, ranch" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4128, 25, "Grignotises, croustilles, tortilla, nacho" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4127, 25, "Grignotises, croustilles, tortilla, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4126, 25, "Grignotises, galettes de riz brun, graines de sésame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4125, 25, "Grignotises, galettes de riz brun, sarrasin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4124, 25, "Grignotises, galettes de riz brun, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4123, 25, "Grignotises, bretzels, durs, blé entier, incluant salés et non salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4120, 25, "Grignotises, croustilles, pommes de terre séchées, crème sure et oignon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4119, 25, "Grignotises, croustilles, pommes de terre séchées, légères" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4118, 25, "Grignotises, croustilles de pommes de terre, crème sure et oignon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4117, 25, "Grignotises, croustilles de pommes de terre, saveur de barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4116, 25, "Grignotises, croustilles de porc, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4115, 25, "Grignotises, maïs soufflé, saveur de fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4114, 25, "Grignotises, maïs soufflé, enrobage de caramel, sans arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4113, 25, "Grignotises, maïs soufflé, enrobage de caramel, avec arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4184, 19, "Bonbons, tablettes, Oh Henry!" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4077, 18, "Pâté, au poulet, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4185, 19, "Bonbons, tablettes, Chunky" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4187, 19, "Dessert, pouding, banane, mélange sec, instantané, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4264, 19, "Dessert, pouding, vanille, mélange sec, instantané, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4262, 19, "Dessert, pouding, tapioca, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4261, 19, "Dessert, pouding, riz, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4260, 19, "Dessert, pouding, vanille, mélange sec, régulier, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4259, 19, "Dessert, pouding, vanille, mélange sec, régulier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4258, 19, "Dessert, flan aux oeufs, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4257, 19, "Dessert, pouding, citron, mélange sec, instantané, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4255, 19, "Dessert, pouding, vanille, mélange sec, instantané, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4265, 19, "Dessert, pouding, vanille, mélange sec, régulier, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4254, 19, "Dessert, pouding, vanille, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4251, 19, "Dessert, pouding, tapioca, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4249, 19, "Dessert, pouding, riz, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4248, 19, "Dessert, pouding, riz, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4247, 19, "Dessert, pouding, riz, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4245, 19, "Dessert, pouding, noix de coco, mélange sec, instantané, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4244, 19, "Dessert, pouding, chocolat, mélange sec, régulier, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4243, 19, "Dessert, pouding, chocolat, mélange sec, régulier, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4242, 19, "Dessert, pouding, chocolat, mélange sec, régulier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4252, 19, "Dessert, pouding, tapioca, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4241, 19, "Dessert, flan au caramel, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4266, 19, "Dessert, rennine (présure), chocolat, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4268, 19, "Dessert, congelé, pop à la gélatine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4288, 19, "Dessert, congelé, crème glacée, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4287, 19, "Dessert, congelé, barre de fruits et jus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4286, 19, "Glaçage, blanc, velouté, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4285, 19, "Glaçage, blanc, velouté, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4284, 19, "Glaçage, vanille (blanc), crémeux, mélange sec, préparé avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4283, 19, "Glaçage, vanille (blanc), crémeux, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4282, 19, "Glaçage, chocolat, crémeux, mélange sec, préparé avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4281, 19, "Glaçage, chocolat, crémeux, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4267, 19, "Dessert, rennine (présure), vanille, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4280, 19, "Dessert, flan au caramel, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4278, 19, "Dessert, rennine (présure), comprimés, non sucrés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4276, 19, "Dessert, rennine, (présure), vanille, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4275, 19, "Dessert, rennine (présure), vanille, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4274, 19, "Dessert, rennine, (présure), chocolat, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4273, 19, "Dessert, rennine (présure), chocolat, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4272, 19, "Dessert, pouding, noix de coco, mélange sec, régulier, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4271, 19, "Dessert, pouding, tapioca, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4270, 19, "Dessert, congelé, glace à l'eau, fruits, avec aspartame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4279, 19, "Dessert, flan au caramel, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4238, 19, "Dessert, pouding, chocolat, mélange sec, instantané, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4237, 19, "Dessert, pouding, chocolat, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4234, 19, "Confiseries, gélatine, poudre, non sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4206, 19, "Bonbons, tablettes, Nestle Crunch" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4205, 19, "Bonbons, tablettes, 100 Grand" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4204, 19, "Bonbons, tablettes, Mr Goodbar" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4203, 19, "Bonbons, tablettes, Mounds" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4202, 19, "Bonbons, M&M's, bonbons au chocolat, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4201, 19, "Bonbons, M&M's bonbons au chocolat et arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4199, 19, "Confiseries,garniture, fraise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4198, 19, "Bonbons, tablettes, Skor" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4207, 19, "Bonbons, tablettes, arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4197, 19, "Bonbons, tablettes, Mars" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4195, 19, "Bonbons, tablettes, Hershey's Chocolat au Lait avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4194, 19, "Bonbons, tablettes, Golden Almond" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4193, 19, "Confiseries, sirop de table, crêpe" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4192, 19, "Confiseries, sirop de table, crêpe, réduit en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4191, 19, "Bonbons, raisins secs, enrobage de chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4190, 19, "Bonbons, arachides, enrobage de chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4189, 19, "Dessert, pouding, chocolat, mélange sec, instantané, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4188, 19, "Dessert, pouding, banane, mélange sec, régulier, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4196, 19, "Bonbons, tablettes, chocolat au lait avec céréale de riz" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4208, 19, "Bonbons, croquant aux arachides, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4209, 19, "Bonbons, Reese's moules au beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4210, 19, "Bonbons, Reese's Pieces" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4233, 19, "Dessert, gélatine, mélange sec, réduit en Calories, avec aspartame, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4232, 19, "Dessert, gélatine, mélange sec, réduit en Calories, avec aspartame, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4230, 19, "Dessert, gélatine, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4229, 19, "Dessert, gélatine, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4228, 19, "Dessert, flan aux oeufs, mélange sec, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4227, 19, "Dessert, flan aux oeufs, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4224, 19, "Confiseries, cacao, poudre, non sucré, procédé néerlandais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4223, 19, "Confiseries, cacao, poudre, non sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4222, 19, "Bonbons, tablettes, Special Dark" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4221, 19, "Bonbons, gomme à mâcher" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4220, 19, "Candies, taglettes, Whatchamacallit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4219, 19, "Bonbons, tablettes, Twix, biscuits au beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4218, 19, "Bonbons, tablettes, Twix, biscuits au caramel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4217, 19, "Bonbons, tablettes, 3 Musketeers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4215, 19, "Bonbons, Starburst bouchées de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4214, 19, "Bonbons, tablettes, Snickers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4213, 19, "Bonbons, croquant aux graines de sesame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4212, 19, "Bonbons, After Eight, mini-menthes enrobées de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4211, 19, "Bonbons, Rolo Caramels, enrobés de chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4186, 19, "Bonbons, tablettes / grains (pépites), chocolat au lait, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4289, 19, "Dessert, congelé, crème glacée, fraises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4076, 18, "Pâté, au porc, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4073, 18, "Pain mollet, petit, nature (aussi semi cuit), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3924, 18, "Muffin, semoule de maïs, fait maison, avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3923, 18, "Muffin, semoule de maïs, type grille-pain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3921, 18, "Muffin, semoule de maïs, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3920, 18, "Muffin, bleuets, fait maison,  avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3919, 18, "Muffin, bleuets, type grille-pain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3917, 18, "Muffin, bleuets, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3916, 18, "Muffin, bleuets, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3915, 18, "Muffin, nature, fait maison, avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3925, 18, "Muffin, son davoine (sans farine de blé)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3914, 18, "Crème glacée, cornet, sucre, type roulé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3912, 18, "Hush puppy, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3911, 18, "Pain doré, fait  maison, avec lait 2% et margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3910, 18, "Pain doré, congelé, prêt-à-chauffer" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3909, 18, "Muffin anglais, blé entier, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3908, 18, "Muffin anglais, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3907, 18, "Muffin anglais, blé, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3906, 18, "Muffin anglais, blé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3905, 18, "Muffin anglais, raisins secs-cannelle (pommes cannelle), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3913, 18, "Crème glacée, cornet, type gâteau ou gaufrette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3904, 18, "Muffin anglais, raisins secs-cannelle (pommes cannelle)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3926, 18, "Muffin, son de blé, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3931, 18, "Crêpe, nature (inclut au babeurre), mélange sec complet, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3957, 18, "Tarte, chausson, fruits (pommes, bleuets, pêches, fraises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3955, 18, "Tarte, flan aux oeufs, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3954, 18, "Tarte, flan, noix de coco, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3952, 18, "Tarte, crème, noix de coco, préparation, préparée, type sans cuisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3951, 18, "Tarte, crème, noix de coco, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3950, 18, "Tarte, mousse au chocolat, préparation, préparée, type sans cuisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3948, 18, "Tarte, crème, chocolat, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3947, 18, "Tarte, cerises, faite maison, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3930, 18, "Crêpe, nature, (inclut au babeurre), congelée, prête-à-chauffer" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3945, 18, "Tarte, bleuets, faite maison, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3943, 18, "Tarte, crème aux bananes, préparation, préparée, type sans cuisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3942, 18, "Tarte, pommes, faite maison, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3941, 18, "Tarte, pommes, commerciale, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3939, 18, "Crêpe, blé entier, mélange sec incomplet, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3937, 18, "Crêpe, sarrasin, mélange sec incomplet, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3936, 18, "Crêpe, bleuets, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3935, 18, "Crêpe, nature, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3933, 18, "Crêpe, nature (inclut au babeurre), mélange sec incomplet, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3944, 18, "Tarte, crème aux bananes, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3903, 18, "Muffin anglais, multigrains (aussi granola), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3902, 18, "Muffin anglais, multigrains (aussi granola)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3901, 18, "Muffin anglais, nature (aussi levain), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3874, 18, "Craquelin, type collation, sandwich avec beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3873, 18, "Craquelin, type collation, sandwich avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3872, 18, "Craquelin, salé (aussi huîtres, soda, soupe)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3871, 18, "Craquelin, seigle, gaufrette, assaisonné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3870, 18, "Craquelin, seigle, gaufrette, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3869, 18, "Craquelin, seigle, type sandwich avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3868, 18, "Craquelin, biscotte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3867, 18, "Craquelin, lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3875, 18, "Craquelin, blé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3866, 18, "Craquelin,l toast melbe, blé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3864, 18, "Craquelin, matzo, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3863, 18, "Craquelin, matzo, oeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3862, 18, "Craquelin, matzo, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3861, 18, "Craquelin, pain plat, seigle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3860, 18, "Craquelin, fromage, sandwich, fourré avec beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3859, 18, "Craquelin, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3858, 18, "Biscuit, gaufrette, vanille, 18 à 21% gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3857, 18, "Biscuit, gaufrette, vanille, 12 à 17% gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3865, 18, "Craquelin, toast melba, seigle (inclus pumpernickel)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3876, 18, "Craquelin, blé, sandwich, avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3877, 18, "Craquelin, blé, sandwich, avec beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3878, 18, "Craquelin, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3900, 18, "Muffin anglais, nature (aussi levain)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3898, 18, "Beigne, levure, fourré de gelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3897, 18, "Beigne, levure (miel), givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3896, 18, "Beigne, levure, fourré à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3895, 18, "Beigne, roussette, givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3893, 18, "Beigne, type gâteau, nature, enrobage de sucre ou givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3892, 18, "Beigne, type gâteau, nature, enrobé de chocolat ou glacé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3891, 18, "Beigne, type gâteau, nature (inclus non sucré, à l'ancienne)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3890, 18, "Pâtisserie, Danoise, noix (amandes, raisins secs et noix, cannelle et noix)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3889, 18, "Pâtisserie, Danoise, fruits (pommes, raisins, citron, framboises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3888, 18, "Pâtisserie, Danoise, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3887, 18, "Pâtisserie, Danoise, cannelle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3886, 18, "Croutons, assaissonnés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3885, 18, "Croutons, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3884, 18, "Croissant, fromage, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3883, 18, "Croissant, pommes, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3882, 18, "Croissant, beurre, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3880, 18, "Chou à la crème, fait maison, chou seulement, (inclus éclair)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3879, 18, "Craquelin, farine brute" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3958, 18, "Tarte, citron, meringue, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4075, 18, "Pâté, de boeuf, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3959, 18, "Tarte, au citron, meringue, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3961, 18, "Tarte, pacanes, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4047, 18, "Coquiulle à taco, cuite, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4046, 18, "Tarte, chausson, citron" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4045, 18, "Tarte, chausson, cerises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4044, 18, "Pain, blanc, commercial, grillé, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4043, 18, "Craquelin, blé entier, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4042, 18, "Craquelin, blé, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4041, 18, "Craquelin, type collation, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4040, 18, "Craquelin, salé, (aussi huîtres, soda, soupe), non saupoudrés de sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4048, 18, "Tortilla, prêt-à-cuire /frire, maïs, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4039, 18, "Craquelin, salé (aussi huîtres, soda, soupe), faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4037, 18, "Biscuit, doigt de dame (sans jus or zeste de citron)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4036, 18, "Pain, blanc, commercial, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4035, 18, "Gaufre, nature, congelée, prête à cuire, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4034, 18, "Croûte de tarte, type ordinaire, faite maison, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4033, 18, "Croûte de tarte, type biscuit, vanille, faite maison, réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4032, 18, "Craquelin, matzo, oeuf et oignon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4031, 18, "Croûte de tarte, type biscuit, graham, faite maison, réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4028, 18, "Pain mollet, petit, nature, faite maison, avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4038, 18, "Craquelin, toast melba, nature, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4022, 18, "Crêpe, babeurre, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4049, 18, "Tortilla, prêt-à-cuire /frire, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4052, 18, "Craquelin, salé (aussi huîtres, soda, soupe), faible en gras et sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4072, 18, "Craquelin, type collation" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4071, 18, "Craquelin, toast melba, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4070, 18, "Pain, préparation pour farce, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4069, 18, "Pain, chapelure, séchée, émiettée, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4068, 18, "Pain, blé entier, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4067, 18, "Pain, blé entier, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4066, 18, "Pain, blanc, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4065, 18, "Pain, seigle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4051, 18, "Biscuit, avoine, (avec raisins secs), commercial, moins de 5g gras/portion" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4063, 18, "Pain, français ou viennois (aussi levain)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4060, 18, "Pain, chapelure, séché, émiettée, assaisonnée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4059, 18, "Brioche, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4058, 18, "Tarte, citrouille, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4057, 18, "Tarte, pêche, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4056, 18, "Tarte, cerises, commerciale, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4055, 18, "Tarte, bleuets, commerciale, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4054, 18, "Beigne, type gâteau, chocolat, enrobé de sucre ou givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4053, 18, "Gâteau café, fourré à la crème, avec glaçage chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4061, 18, "Biscuit, poudre à pâte, nature/babeurre, congelé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4020, 18, "Muffin, son de blé, type grille-pain, avec raisins secs, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4018, 18, "Muffin, bleuets, type grille-pain, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4017, 18, "Pain, germe de blé, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3986, 18, "Pain mollet, hambourgeois / à hot-dog, multigrains" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3985, 18, "Pain mollet, hambourgeois / à hot-dog, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3984, 18, "Pain mollet, français" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3983, 18, "Pain mollet, petit, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3982, 18, "Pain mollet, petit, blé (60% farine de blé entier)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3981, 18, "Pain mollet, petit, seigle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3980, 18, "Pain mollet, petit, son d'avoine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3979, 18, "Pain mollet, petit, aux oeufs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3987, 18, "Pain mollet, hambourgeois / à hot-dog, réduit en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3975, 18, "Popover, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3973, 18, "Pâte feuilletée, congelée, prête-à-cuire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3972, 18, "Croûte de tarte, type ordinaire, faite maison, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3971, 18, "Croûte de tarte, type ordinaire, congelée, prête-à-cuire, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3970, 18, "Croûte de tarte, type ordinaire, congelée, prête-à-cuire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3968, 18, "Croûte de tarte, type ordinaire, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3964, 18, "Tarte, à la crème à la vanille, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3963, 18, "Tarte, citrouille, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3962, 18, "Tarte, pacanes, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3974, 18, "Phyllo, pâte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3988, 18, "Pain mollet, petit pain empereur (kaiser), dur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3989, 18, "Strudel, pommes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3990, 18, "Brioche, cannelle avec raisins secs, commerciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4016, 18, "Pain, son de riz, sans gluten, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4015, 18, "Pain, protéines (incluant gluten), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4010, 18, "Biscuit, grains de chocolat, fait maison, avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4009, 18, "Biscuit, avoine, faite maison, sans raisins secs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4008, 18, "Agent de levage, levure, boulangerie, séché, active" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4007, 18, "Agent de levage, levure, boulangerie, comprimée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4006, 18, "Agent de levage, crème de tartre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4005, 18, "Agent de levage, bicarbonate de soude" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4004, 18, "Agent de levage, levure chimique, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4003, 18, "Agent de levage, levure chimique, action double, phosphate" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4002, 18, "Agent de levage, levure chimique, double action, sodium, aluminium sulfate" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4001, 18, "Wonton, enveloppe (enveloppe à rouleaux impériaux)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4000, 18, "Gaufre,  nature, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3998, 18, "Gaufre, nature, congelée, prête-à-cuire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3997, 18, "Tortilla, prêt-à-cuire /frire, maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3996, 18, "Tartelette grille-pain, fruits (pommes, bleuets, cerises, fraises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3995, 18, "Tartelette grille-pain, sucre brun et cannelle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3994, 18, "Coquille à taco, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3991, 18, "Brioche, cannelle, pâte réfrigérée, avec glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3960, 18, "Tarte, mincemeat, faite maison, 2 croûtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4779, 14, "Café infusé, espresso, préparation restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4290, 19, "Dessert, congelé, glaces à l'eau, lime" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4292, 19, "Dessert, congelé, yogourt glacé, vanille, mou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4565, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, viande blanche (poitrine ou aile)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4564, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, viande brune (pilon ou cuisse)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4563, 21, "Aliments prêts à manger, dessert, coupe glacée (sundae), fraises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4562, 21, "Aliments prêts à manger, dessert, coupe glacée (sundae), chocolat chaud" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4561, 21, "Aliments prêts à manger, dessert, coupe glacée (sundae), caramel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4559, 21, "Aliments prêts à manger, dessert, biscuits, grains de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4558, 21, "Aliments prêts à manger, dessert, biscuits, petits animaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4557, 21, "Aliments prêts à manger, dessert, crème glacée, légère, vanille, molle avec cornet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4571, 21, "Aliments prêts à manger, plat principal, chili con carne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4556, 21, "Aliments prêts à manger, déjeuner, pommes de terre rissolées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4553, 21, "Aliments prêts à manger, déjeuner, pain doré avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4552, 21, "Aliments prêts à manger, déjeuner, muffin anglais avec oeuf, fromage et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4551, 21, "Aliments prêts à manger, déjeuner, muffin anglais avec oeuf, fromage et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4550, 21, "Aliments prêts à manger, déjeuner, muffin anglais avec fromage et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4549, 21, "Aliments prêts à manger, déjeuner, muffin anglais avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4548, 21, "Aliments prêts à manger, oeuf brouillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4544, 21, "Aliments prêts à manger, déjeuner, croissant avec oeuf, fromage et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4543, 21, "Aliments prêts à manger, déjeuner, croissant avec oeuf, fromage et jambon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4554, 21, "Aliments prêts à manger, déjeuner, bâtonnets de pain doré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4542, 21, "Aliments prêts à manger, déjeuner, croissant avec oeuf, fromage et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4572, 21, "Aliments prêts à manger, plat principal, myes (palourdes), panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4576, 21, "Aliments prêts à manger, plat principal, poisson, filet, en pâte à frire ou pané, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4595, 21, "Aliments prêts à manger, mexicain, burrito avec boeuf, fromage et piments forts" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4594, 21, "Aliments prêts à manger, mexicain burrito avec boeuf et piments forts" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4593, 21, "Aliments prêts à manger, mexicain, burrito avec boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4592, 21, "Aliments prêts à manger, mexicain, burrito avec haricots, fromage et piments forts" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4591, 21, "Aliments prêts à manger, mexicain, burrito avec haricots, fromage et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4590, 21, "Aliments prêts à manger, mexicain, burrito avec haricots et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4589, 21, "Aliments prêts à manger, mexicain, burrito avec haricots et piments forts" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4588, 21, "Aliments prêts à manger, mexicain, burrito avec haricots et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4575, 21, "Aliments prêts à manger, plat principal, beignet de crabe" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4587, 21, "Aliments prêts à manger, mexicain, burrito avec haricots" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4585, 21, "Aliments prêts à manger, plat principal, pétoncles, panés et frits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4584, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette, avec dinde, jambon et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4583, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette, avec crevettes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4582, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette, avec pâtes et fruits de mer" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4581, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette, avec poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4580, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette, avec fromage et oeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4579, 21, "Aliments prêts à manger, plat principal, salade, légumes, sans vinaigrette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4577, 21, "Aliments prêts à manger, plat principal, huîtres, en pâte à frire ou panées, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4586, 21, "Aliments prêts à manger, plat principal, crevettes, panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4541, 21, "Aliments prêts à manger, déjeuner, croissant avec oeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4539, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4538, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec jambon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4513, 20, "Pâtes, nouilles aux oeufs, épinards, enrichies, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4512, 20, "Pâtes, nouilles aux oeufs, enrichies, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4511, 20, "Pâtes, macaroni (spirales), légumes, enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4510, 20, "Pâtes, macaroni (spirales), légumes, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4509, 20, "Pâtes, macaroni, enrichi de protéines, enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4508, 20, "Pâtes, macaroni, enrichi de protéines, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4507, 20, "Pâtes, macaroni (coudes), enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4506, 20, "Pâtes, macaroni (coudes), enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4514, 20, "Pâtes, nouilles aux oeufs, épinards, enrichies, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4505, 20, "Pâtes, fraîches-réfrigérées, épinards, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4503, 20, "Pâtes, fraîches-réfrigérées, nature, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4502, 20, "Pâtes, fraîches-réfrigérées, nature, telles qu'achetées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4501, 20, "Grains céréaliers, farine de blé, blanche, tout usage, blanchie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4500, 20, "Grains céréaliers, farine de blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4499, 20, "Grains céréaliers, farine de seigle foncée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4498, 20, "Grains céréaliers, seigle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4497, 20, "Grains céréaliers, riz brun, grain long, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4496, 20, "Grains céréaliers, riz brun, grain long, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4504, 20, "Pâtes, fraîches-réfrigérées, épinards, telles qu'achetées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4515, 20, "Pâtes, spaghetti, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4516, 20, "Pâtes, spaghetti, blé entier, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4517, 20, "Pâtes, spaghetti, blé entier, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4537, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf, fromage et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4536, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf et bifteck" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4535, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4534, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf et jambon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4533, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4532, 21, "Aliments prêts à manger, déjeuner, biscuit poudre à pâte avec oeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4530, 20, "Grains céréaliers, farine de blé, blanche, teneur élevée en gluten" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4529, 20, "Grains céréaliers, orge, malt, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4528, 12, "Graines, lin, entières et moulues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4527, 20, "Pâtes, spaghetti, enrichi de protéines, enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4526, 20, "Pâtes, spaghetti, enrichi de protéines, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4525, 20, "Grains céréaliers, riz blanc, grain long, ordinaire, cuit, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4524, 20, "Pâtes, macaroni (coudes), non enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4523, 20, "Grains céréaliers, riz blanc, grain long, ordinaire, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4522, 20, "Pâtes, spaghetti, non enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4521, 20, "Pâtes, nouilles aux oeufs, non enrichies, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4520, 20, "Pâtes, macaroni (coudes), non enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4519, 20, "Pâtes, spaghetti, épinards, enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4518, 20, "Pâtes, spaghetti, épinards, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4596, 21, "Aliments prêts à manger, dessert, burrito avec fruits (pommes ou cerises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4495, 20, "Grains céréaliers, quinoa, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4597, 21, "Aliments prêts à manger, mexicain, chimichanga avec boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4599, 21, "Aliments prêts à manger, mexicain, chimichanga avec boeuf et piments forts rouges" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4669, 21, "Aliments prêts à manger, sandwichs et burgers, hamburgeois, gros, 2 galettes, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4666, 21, "Aliments prêts à manger, plat d'accompagnement, salade de pommes de terre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4665, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, en purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4664, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, frites dans l'huile végétale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4663, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, frites dans du suif de boeuf et huile végétale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4662, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, frites dans du suif de boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4661, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, au four, avec crème sure et ciboulette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4660, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, au four, avec sauce au fromage et chili" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4711, 1, "Lait, liquide, chocolat, partiellement écrémé, 1% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4659, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, au four, avec sauce au fromage et brocoli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4657, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, au four, avec sauce au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4656, 21, "Aliments prêts à manger, plat d'accompagnement, rondelles d'oignon, panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4655, 21, "Aliments prêts à manger, plat d'accompagnement, galette hush puppies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4654, 21, "Aliments prêts à manger, plat d'accompagnement, épi de maïs avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4653, 21, "Aliments prêts à manger, plat d'accompagnement, salade de chou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4652, 21, "Aliments prêts à manger, sandwichs et burgers, sous-marin fait avec pain blanc avec salade de thon, laitue et tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4651, 21, "Aliments prêts à manger, sandwichs et burgers, sous-marin fait avec pain blanc avec rôti de boeuf, laitue et tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4650, 21, "Aliments prêts à manger, sandwichs et burgers, sous-marin fait avec pain blanc, viandes froides, laitue et tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4658, 21, "Aliments prêts à manger, plat d'accompagnement, pommes de terre, au four, avec sauce au fromage et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4649, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au bifteck" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4721, 1, "Oeuf, poule, blanc, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4723, 2, "Épices, romarin, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4777, 14, "Chocolat chaud, onctueux, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4776, 14, "Chocolat chaud avec guimauves, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4758, 13, "Boeuf, cuisse, rôti de croupe, maigre et gras, 3mm (1/8\") paré, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4757, 13, "Boeuf, cuisse, rôti de croupe, maigre et gras, 3mm (1/8\") trim, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4746, 13, "Boeuf, pointe de poitrine, entier, maigre et gras, 3mm (1/8\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4745, 13, "Boeuf, pointe de poitrine, entier, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4736, 11, "Tomate, broyée, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4735, 6, "Sauce, pâtes, spaghetti ou marinara, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4722, 1, "Fromage à la crème, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4734, 6, "Sauce, fromage, prête-à-sevir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4731, 6, "Sauce, poisson, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4730, 6, "Sauce, huîtres, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4729, 6, "Sauce, hoisin, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4728, 6, "Soupe, bouillon, poisson, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4727, 6, "Sauce, prunes, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4726, 2, "Épices, menthe verte, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4725, 2, "Épices, menthe verte, fraîche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4724, 2, "Menthe poivrée, fraîche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5868, 22, "Spaghetti sans viande, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4648, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au rôti de boeuf avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4647, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au rôti de boeuf, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4646, 21, "Aliments prêts à manger, saucisse avec enrobage de farine de maïs (saucisse sur bâtonnet)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4619, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 2 galettes, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4618, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 1 galette, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4617, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 1 galette, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4616, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 1 galette, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4615, 21, "Aliments prêts à manger, mexicain, tostada avec guacamole" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4614, 21, "Aliments prêts à manger, mexicain, tostada avec boeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4613, 21, "Aliments prêts à manger, mexicain, tostada avec haricots, boeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4612, 21, "Aliments prêts à manger, mexicain, tostada avec haricots et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4620, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 2 galettes, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4611, 21, "Aliments prêts à manger, mexicain, salade de taco avec chili con carne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4609, 21, "Aliments prêts à manger, mexicain, taco avec boeuf, fromage et laitue, coquille dure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4607, 21, "Aliments prêts à manger, mexicain, nachos avec fromage, haricots, boeuf haché et tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4605, 21, "Aliments prêts à manger, mexicain, nachos avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4604, 21, "Aliments prêts à manger, mexicain, frijoles (haricots pinto) avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4603, 21, "Aliments prêts à manger, mexicain, enchirito avec fromage, boeuf et haricots" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4602, 21, "Aliments prêts à manger, mexicain, enchilada avec fromage et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4601, 21, "Aliments prêts à manger, mexicain, enchilada avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4600, 21, "Aliments prêts à manger, mexicain, chimichanga avec boeuf, fromage et piments forts rouges" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4610, 21, "Aliments prêts à manger, mexicain, salade de taco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4621, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 2 galettes et pains, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4622, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, ordinaire, 2 galettes et pains, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4623, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4645, 21, "Aliments prêts à manger, hot-dog (chien-chaud) avec chili" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4644, 21, "Aliments prêts à manger, hot-dog (chien-chaud), nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4643, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au jambon, oeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4642, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au jambon et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4641, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 3 galettes, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4639, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 1 galette, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4638, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, ordinaire, 2 galettes, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4637, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, ordinaire, 2 galettes, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4636, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, ordinaire, 1 galette, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4635, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, 1 galette, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4634, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, ordinaire, 1 galette, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4633, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au poisson avec sauce tartare et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4632, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au poisson avec sauce tartare" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4631, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich aux oeufs et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4629, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au filet de poulet, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4628, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 3 galettes, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4627, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 2 galettes, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4626, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, avec jambon, condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4624, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, avec bacon et condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4598, 21, "Aliments prêts à manger, mexicain, chimichanga avec boeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4291, 19, "Dessert, congelé, pop glacé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4494, 20, "Grains céréaliers, son d'avoine, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4492, 20, "Grains céréaliers, millet, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4373, 19, "Confiseries, chocolat, mi-sucré, préparé avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4372, 25, "Grignotises, croustilles de taro" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4371, 25, "Grignotises, croustilles, tortilla, nacho, légères" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4369, 25, "Grignotises, croustilles de pommes de terre, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4367, 25, "Grignotises, galettes de maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4366, 25, "Grignotises, bâtonnets de sésame, base de blé, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4365, 25, "Grignotises, galettes de riz brun, seigle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4364, 25, "Grignotises, bâtonnets de pommes de terre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4374, 19, "Glaçage, chocolat, crémeux, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4363, 25, "Grignotises, galettes de riz brun, multigrains" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4361, 25, "Grignotises, croustilles de pommes de terre séchées, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4360, 25, "Grignotises, croustilles de pommes de terre séchées, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4359, 25, "Grignotises, croustilles de porc, barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4358, 7, "Bâtonnets de viande, non-réfrigérés, fumés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4354, 25, "Grignotises, barre de riz croustillant, amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4352, 25, "Grignotises, grignotises de maïs (corn nuts), barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4351, 25, "Grignotises, croustilles de bananes séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4350, 19, "Dessert, congelé, yogourt glacé, chocolat, mou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4362, 25, "Grignotises, galettes de riz brun, maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4340, 19, "Glaçage, fondant, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4375, 19, "Glaçage, noix de coco-noix, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4377, 19, "Glaçage, saveur de crème sure, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4398, 19, "Confits, cédrat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4397, 19, "Confits, cerises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4396, 19, "Confits, cerises au marasquin, bocal, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4394, 25, "Grignotises, bretzels, durs, nature, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4393, 25, "Grignotises, mélange montagnard, régulier avec grains de chocolat, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4392, 25, "Grignotises, mélange montagnard, régulier, non salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4391, 25, "Grignotises, bâtonnets de sésame, base de blé, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4390, 25, "Grignotises, galettes de riz brun, graines de sésame, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4376, 19, "Glaçage, saveur de fromage à la crème, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4389, 25, "Grignotises, galettes de riz brun, multigrains, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4387, 25, "Grignotises, galettes de riz brun, nature, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4386, 25, "Grignotises, bretzels, durs, nature, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4383, 25, "Grignotises, maïs soufflé à l'huile, maïs blanc, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4382, 25, "Grignotises, mais soufflé à l'air, nature, maïs blanc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4381, 25, "Grignotises, galettes de maïs, ultra faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4380, 19, "Bonbons, carrés / grains (pépites), chocolat mi-sucré avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4379, 19, "Confiseries, confitures et conserves, abricot" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4378, 19, "Glaçage, vanille (blanc), crémeux, prêt-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4388, 25, "Grignotises, galettes de riz brun, nature, sarrasin, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4337, 19, "Glaçage, chocolat, crémeux, mélange sec, préparé avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4336, 19, "Glaçage, vanille (blanc), crémeux, mélange sec, préparé avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4335, 19, "Bonbons, Skittles" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4311, 19, "Dessert, pouding, noix de coco, mélange sec, régulier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4310, 19, "Dessert, pouding, noix de coco, mélange sec, instantané, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4309, 19, "Dessert, pouding, noix de coco, mélange sec, instantané, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4308, 19, "Dessert, pouding, banane, mélange sec, régulier, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4307, 19, "Dessert, pouding, banane, mélange sec, régulier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4306, 19, "Dessert, pouding, banane, mélange sec, instantané, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4305, 19, "Dessert, pouding, banane, mélange sec, instantané, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4304, 19, "Confiseries, garniture à tarte, conserve, cerise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4312, 19, "Dessert, pouding, noix de coco, mélange sec, régulier, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4303, 19, "Confiseries, garniture à tarte, conserve, pomme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4300, 19, "Confiseries, mélasse noire (mélasse verte)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4299, 19, "Confiseries, mélasse de fantaisie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4298, 19, "Confiseries, marmelade, orange" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4297, 19, "Bonbons, fudge, chocolat et guimauves avec noix, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4296, 19, "Confiseries, gelées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4295, 19, "Confiseries, confitures et conserves" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4294, 19, "Confiseries, miel, filtre ou extrait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4293, 19, "Confiseries, beurre de fruits, pomme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4301, 19, "Confiseries, pectine, non sucrée, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4313, 19, "Dessert, pouding, ditron, mélange sec, instantané, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4314, 19, "Dessert, pouding, citron, mélange sec, instantané, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4315, 19, "Dessert, pouding, citron, mélange sec, régulier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4334, 19, "Confiseries, garniture, noix dans sirop" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4333, 19, "Confiseries, garniture, ananas" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4332, 19, "Confiseries, garniture, crème de guimauve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4331, 19, "Confiseries, garniture (tartinade), caramel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4330, 19, "Confiseries, sirop de table, maïs, sirop de raffinerie et sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4329, 19, "Confiseries, sirop de table, canne et 15% érable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4328, 19, "Confiseries, sirop de table, crêpe, avec 2% érable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4327, 19, "Confiseries, sirop de sorgho" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4326, 19, "Confiseries, sirop d'érable, en vrac" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4325, 19, "Confiseries, sirop de malt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4324, 19, "Confiseries, sirop de maïs, élevé en fructose" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4323, 19, "Confiseries, sirop de maïs, clair" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4322, 19, "Confiseries, sirop de maïs, foncé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4321, 19, "Confiseries, sirop, chocolat, type fudge" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4320, 19, "Confiseries, sucre d'érable, dur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4319, 19, "Confiseries, sucre à glacer" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4318, 19, "Confiseries, sucre, granulé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4317, 19, "Confiseries, sucre, brun (cassonade)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4316, 19, "Dessert, pouding, citron, mélange sec, régulier, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4400, 19, "Confits, gingembre, racine, cristallisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4493, 20, "Grains céréaliers, son d'avoine, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4401, 19, "Confits, pamplemousse, pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4403, 19, "Confits, orange, pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4469, 20, "Pâtes, spaghetti, non enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4468, 20, "Pâtes, nouilles aux oeufs, non enrichies, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4467, 20, "Grains céréaliers, farine de maïs bouillie, conserve, jaune" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4466, 20, "Pâtes, spaghetti, enrichi, cuit, salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4465, 20, "Grains céréaliers, farine de maïs, masa, jaune, enrichi selon les normes des É.U." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4464, 20, "Pâtes, spaghetti, enrichi, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4463, 20, "Pâtes, nouilles japonaises, somen, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4462, 20, "Pâtes, nouilles japonaises, somen, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4470, 20, "Grains céréaliers, semoule de maïs (jaune), dégermée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4461, 20, "Pâtes, nouilles japonaises, soba, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4459, 20, "Pâtes, nouilles chinoises, chow mein" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4458, 20, "Pâtes, nouilles aux oeufs, enrichies, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4457, 20, "Pâtes, macaroni (coudes), blé entier, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4456, 20, "Pâtes, macaroni (coudes), blé entier, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4455, 20, "Pâtes, préparées sans oeufs, faites maison, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4454, 20, "Pâtes, préparées avec des oeufs, faites maison, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4453, 20, "Pâtes, maïs, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4452, 20, "Pâtes, maïs, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4460, 20, "Pâtes, nouilles japonaises, soba, sèches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4451, 20, "Grains céréaliers, farine de riz brun" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4471, 20, "Grains céréaliers, riz blanc, grain long, ordinaire, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4473, 20, "Grains céréaliers, riz blanc, grain long, étuvé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4491, 20, "Grains céréaliers, millet, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4490, 20, "Grains céréaliers, couscous, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4489, 20, "Grains céréaliers, bulgur, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4488, 20, "Grains céréaliers, farine de sarrasin, gruau entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4487, 20, "Grains céréaliers, sarrasin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4486, 20, "Grains céréaliers, orge, perlé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4485, 20, "Grains céréaliers, orge, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4484, 20, "Grains céréaliers, farine de blé, tout usage, enrichie, calcium ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4472, 20, "Grains céréaliers, riz blanc, grain long, étuvé, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4483, 20, "Pâtes, nouilles aux oeufs, enrichies, cuites, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4481, 20, "Grains céréaliers, riz blanc, grain long, précuit ou instantané, enrichi, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4480, 20, "Pâtes, spaghetti, non enrichi, cuit, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4479, 20, "Pâtes, nouilles aux oeufs, non enrichies, cuites, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4478, 20, "Grains céréaliers, semoule de blé dur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4477, 20, "Grains céréaliers, riz blanc, grain court, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4476, 20, "Grains céréaliers, riz blanc, grain court, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4475, 20, "Grains céréaliers, riz blanc, grain moyen, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4474, 20, "Grains céréaliers, riz blanc, grain moyen, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4482, 20, "Grains céréaliers, riz blanc, grain long, précuit ou instantané, enrichi, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4450, 20, "Grains céréaliers, riz sauvage, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4449, 20, "Grains céréaliers, riz sauvage, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4448, 20, "Grains céréaliers, blé, germé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4424, 20, "Grains céréaliers, riz blanc, glutineux, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4423, 20, "Grains céréaliers, riz brun, grain moyen, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4422, 20, "Grains céréaliers, riz brun, grain moyen, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4421, 20, "Grains céréaliers, avoine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4420, 20, "Grains céréaliers, couscous, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4419, 20, "Grains céréaliers, fécule de maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4418, 20, "Grains céréaliers, semoule de maïs (jaune), grain entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4417, 20, "Grains céréaliers, farine de maïs, jaune, grain entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4425, 20, "Grains céréaliers, riz blanc, glutineux, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4416, 20, "Grains céréaliers, son de maïs, brut" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4414, 20, "Grains céréaliers, bulgur, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4413, 20, "Grains céréaliers, gruau de sarrasin, rôti, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4412, 20, "Grains céréaliers, gruau de sarrasin, rôti, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4411, 20, "Grains céréaliers, orge, perlé, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4410, 20, "Grains céréaliers, farine d'arrowroot" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4409, 20, "Grains céréaliers, amarante, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4407, 25, "Grignotises, croustilles de pommes de terre, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4405, 19, "Confits, ananas" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4415, 20, "Grains céréaliers, maïs, jaune, campagnard, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4426, 20, "Grains céréaliers, riz blanc avec pâtes et assaisonnements, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4427, 20, "Grains céréaliers, riz blanc avec pâtes et assaisonnements, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4428, 20, "Grains céréaliers, son de riz, brut" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4447, 20, "Grains céréaliers, farine de blé, blanche, préparation pour tortilla" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4446, 20, "Grains céréaliers, farine de blé, blanche, farine à gâteau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4445, 20, "Grains céréaliers, farine de blé, blanche, farine à pain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4444, 20, "Grains céréaliers, farine de blé, blanche, avec levure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4443, 20, "Grains céréaliers, germe de blé, brut" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4442, 20, "Grains céréaliers, son de blé, brut" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4441, 20, "Grains céréaliers, blé durum" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4440, 20, "Grains céréaliers, blé blanc tendre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4439, 20, "Grains céréaliers, blé blanc dur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4438, 20, "Grains céréaliers, blé tendre rouge d'hiver" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4437, 20, "Grains céréaliers, blé de force roux d'hiver (blé vitreux roux d'hiver)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4436, 20, "Grains céréaliers, blé de force roux de printemps (blé vitreux roux de printemps)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4435, 20, "Grains céréaliers, farine de triticale, grain entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4434, 20, "Grains céréaliers, triticale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4433, 20, "Grains céréaliers, tapioca, perlé, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4432, 20, "Grains céréaliers, sorgho" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4431, 20, "Grains céréaliers, farine de seigle pâle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4430, 20, "Grains céréaliers, farine de seigle moyenne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4429, 20, "Grains céréaliers, riz blanc, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4402, 19, "Confits, citron, pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5869, 22, "Lasagne avec viande et sauce, faible en gras, congelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5882, 15, "Poisson, diable de mer (Mante), autochtone, viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5871, 15, "Agutuk, autochtone, poisson/baie avec huile de phoque (Crème glacée alaskienne)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502250, 6, "Trempette au fromage avec piments forts du Chili, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502249, 4, "Vinaigrette, césar, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502248, 4, "Vinaigrette, graines de pavot, crémeuse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502247, 4, "Vinaigrette, moutarde au miel, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502246, 6, "Sauce, salsa verde (verte), prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502245, 6, "Sauce, canard, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502244, 6, "Soupe, poulet et nouilles, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502243, 1, "Fromage, mélange mexicain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502251, 4, "Vinaigrette, moutarde au miel, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502242, 19, "Dessert, congelé, lait glacé, barre, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502240, 19, "Dessert congelé, crème glacée, sans gras, sans sucre ajouté, saveurs autres que chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502239, 25, "Grignotises, Clif bar, toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502238, 22, "Ravioli, sauce aux tomates et fromage, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502237, 5, "Poulet, croquette, viande blanche, précuite, congelée, non réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502236, 5, "Poulet, croquette, viande blanche et brune, précuite, congelée, non réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502235, 19, "Dessert congelé, sandwich à la crème glacée, crème glacée légère, vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502234, 19, "Dessert congelé, cornet de crème glacée enrobé de chocolat, avec noix, saveurs autres que chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502233, 19, "Dessert congelé, sandwich à la crème glacée, biscuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502241, 6, "Soupe, chaudrée de palourdes, Nouvelle-Angleterre, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502232, 19, "Dessert, congelé, sandwich à la crème glacée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502252, 4, "Huile végétale, graines de lin, contient des morceaux de graines de lin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502254, 11, "Maïs sucré, conserve, solides égouttés, rinsés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502273, 18, "Craquelin, 7 grains" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502272, 14, "Boisson, saveur de fruits, poudre, hypocalorique, vitamine C" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502271, 25, "Craquelin, sésame et miel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502270, 18, "Pain, Focaccia, pain plat italien, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502269, 18, "Pain au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502268, 14, "Boisson au jus de fruits, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502267, 25, "Grignotises, pâte de fruits déshydratée, bouchées, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502266, 18, "Chou à la crème, éclair, garni de crème pâtissière ou de crème, avec glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502253, 9, "Jus, orange ananas" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502265, 18, "Bagel, blé entier (multigrain)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502262, 16, "Pois chiches (garbanzo), conserve, égouttés et rinsés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502261, 16, "Pois chiches (garbanzo), conserve, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502260, 22, "Mets chinois, porc avec sauce aigre-douce, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502259, 14, "Tisane à l'hibiscus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502258, 22, "Mets chinois, poulet avec sauce aigre-douce, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502257, 14, "Boisson, saveur de fruits, vitamine C ajoutée, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502256, 22, "Mets chinois, crevettes et légumes, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502255, 11, "Pois, petits (verts), conserve, solides égouttés, rinsés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502264, 18, "Craquelin, salé (aussi huîtres, soda, soupe), blé entier (inclus multigrains)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502274, 15, "Poisson, saumon, rouge (sockeye), conserve, tout le contenu de la boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502231, 19, "Dessert, congelé, crème glacée, barre, enrobée de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502229, 19, "Dessert, congelé, yogourt glacé, saveurs autres que chocolat, lait écrémé, édulcorant artificiel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502202, 1, "Yogourt à boire, saveurs de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502201, 1, "Yogourt, soya, saveur de vanille, avec fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502199, 1, "Yogourt, soya, saveurs de fruits, fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502198, 1, "Yogourt, soya, saveurs de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502196, 1, "Yogourt, soya, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502195, 1, "Yogourt de chèvre, saveur de vanille, fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502194, 1, "Yogourt de chèvre, saveurs de fruits, fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502193, 1, "Yogourt de chèvre, nature, fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502203, 1, "Yogourt à boire, saveur de vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502192, 1, "Yogourt, Grec, sucré, riche (8-12% M.G.), vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502190, 1, "Yogourt, Grec, saveur de vanille, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502189, 1, "Yogourt, Grec, saveur de fruits, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502188, 1, "Yogourt, Grec, nature, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502187, 1, "Yogourt, saveur de café, riche/type méditerranéen  (6-9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502186, 1, "Yogourt, saveur de vanille, riche/type méditerranéen (6-9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502185, 1, "Yogourt, saveurs de fruits, riche/type méditerranéen (6-9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502184, 1, "Yogourt, nature, riche/type méditerranéen  (6-9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502183, 1, "Yogourt, saveur de café, type Balkan (4-6% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502191, 1, "Yogourt, Grec, nature, riche (8-12% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502230, 19, "Dessert, glacé, crème glacée molle, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502204, 1, "Yogourt, nature, type du fromage frais (quark), sans gras, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502206, 1, "Yogourt, garniture granola/céréales" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502228, 1, "Babeurre, liquide, culture, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502226, 6, "Sauce, aigre-douce, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502223, 9, "Melon à cornes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502222, 1, "Produit de fromage fondu, cheddar, teneur réduite en gras, à tartiner" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502221, 1, "Produit de fromage fondu, cheddar, à tartiner" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502220, 1, "Produit de fromage fondu, cheddar, pain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502219, 1, "Produit de fromage fondu, suisse, sans gras, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502218, 1, "Produit de fromage fondu, mozzarella, sans gras, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502205, 1, "Yogourt, saveurs de fruits, fromage frais, très petit format, vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502217, 1, "Produit de fromage fondu, cheddar, sans gras, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502215, 1, "Produit de fromage fondu, suisse, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502214, 1, "Produit de fromage fondu, mozzarella, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502213, 1, "Produit de fromage fondu, cheddar, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502212, 3, "Bébé, yogourt, saveurs de fruits, Vitamin D et DHA ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502211, 1, "Yogourt, saveurs de fruits, faible en gras, vitamine D ajoutée (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502209, 1, "Kéfir, saveurs de fruits, faible en gras (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502208, 1, "Kéfir, nature, faible en gras (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502207, 1, "Yogourt, saveurs de fruits, format tube, vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502216, 1, "Produit de fromage fondu, cheddar, teneur réduite en gras, tranches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502275, 18, "Craquelin, fromage asiago" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502276, 18, "Craquelin, légumes grillés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502277, 15, "Poisson, saumon, route (sockey), conserve, égoutté, sans peau et os" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502370, 7, "Charcuterie, boeuf salé ''corned beef'', fraisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502369, 7, "Charcuterie, prosciutto (cotto), extra maigre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502368, 7, "Charcuterie, jambon Forêt Noire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502367, 7, "Charcuterie, jambon cuit, sans gras, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502366, 7, "Charcuterie, bologne, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502364, 7, "Charcuterie, bologne, viandes mélangées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502362, 7, "Saucisse fumée, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502361, 7, "Saucisse fumée européenne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502371, 7, "Charcuterie, boeuf salé ''corned beef'', extra maigre, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502360, 7, "Saucisse fumée bavaroise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502358, 19, "Confiserie, sirop, canne à sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502357, 22, "Macaroni au fromage, mélange en boîte avec sauce au fromage, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502356, 22, "Macaroni au fromage, mélange en boîte avec sauce au fromage, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502355, 20, "Grains céréaliers, mélange de riz et vermicelles, saveur pilaf, préparé avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502354, 20, "Grains céréaliers, mélange de riz et vermicelles, saveur pilaf, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502353, 20, "Grains céréaliers, mélange de riz et vermicelles, saveur de boeuf, préparé avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502352, 20, "Grains céréaliers, mélange de riz et vermicelles, saveur de boeuf, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502351, 11, "Algue canadienne, cultivée, EMI-TSUNOMATA, réhydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502359, 10, "Porc, salé, bacon, réduit en sodium, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502350, 11, "Algue canadienne, cultivée, EMI-TSUNOMATA, séchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502372, 7, "Charcuterie, pointe de poitrine fumée à l'ancienne, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502374, 7, "Charcuterie, capicollo" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502395, 14, "Boisson énergisante, sans sucre / hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502394, 14, "Boisson énergisante, saveur de café, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502393, 14, "Boisson énergisante, saveurs variées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502392, 14, "Boisson énergisante, dose énergisante (''energy shot''), sans sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502391, 14, "Boisson énergisante, saveur de café" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502388, 7, "Cretons de veau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502387, 7, "Pâté, toutes saveurs, teneur réduite en gras et en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502386, 7, "Pâté de campagne au poivre noir, givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502373, 7, "Charcuterie, viande fumée montréalaise, extra maigre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502385, 7, "Pâté de campagne aux fines herbes, givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502382, 7, "Charcuterie, pepperoni, dinde, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502381, 7, "Charcuterie, pepperoni" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502380, 7, "Charcuterie, mortadelle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502379, 7, "Charcuterie, saucisson d'été" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502378, 7, "Charcuterie, salami (Genoa), salé à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502377, 7, "Charcuterie, salami (Hongrois), porc et boeuf, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502376, 7, "Saucisse kielbasa (kolbassa), extra maigre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502375, 7, "Saucisse kielbasa (kolbassa)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502384, 7, "Pâté de campagne au cognac, givré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502349, 6, "Sauces, fromage et salsa, moyenne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502348, 20, "Grains céréaliers, mélange de riz et vermicelles, saveur de poulet, préparé avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502347, 22, "Grains céréaliers, mélange de riz et vermicelles, saveur de poulet, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502295, 21, "Aliments prêts à manger, mexicain, taco avec poulet, fromage et laitue, souple" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502294, 21, "Aliments prêts à manger, mexicain, taco avec boeuf, fromage et laitue, souple" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502293, 22, "Macaroni au fromage, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502292, 21, "Aliments prêts à manger, pizza, pepperoni, croûte mince" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502291, 22, "Salade de pommes de terre, avec oeufs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502290, 21, "Aliments prêts à manger, pizza, saucisse, croûte mince" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502289, 22, "Porc effiloché dans une sauce barbecue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502288, 21, "Aliments prêts à manger, pizza, saucisse, croûte régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502296, 22, "Ravioli à la viande, avec sauce aux tomates ou à la viande, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502287, 22, "Saucisse avec enrobage de farine de maïs (saucisse sur bâtonnet), congelé, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502285, 18, "Brioche à la cannelle, avec glaçage (brioche au miel)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502284, 18, "Pain à l'ail" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502283, 16, "Haricots, pinto, conserve, égouttés et rincés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502282, 16, "Haricots, rouges, conserve, égouttés et rincés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502281, 6, "Sauce à cocktail, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502280, 16, "Haricots, pinto, conserve, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502279, 16, "Haricots, rouges, conserve, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502278, 15, "Poisson, saumon, rose, conserve, égoutté, sans peau et os" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502286, 20, "Grains céréaliers, farine de blé à grains entiers, blé tendre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502297, 22, "Ravioli au fromage, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502298, 21, "Aliments prêts à manger, quesadilla au poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502299, 21, "Salade, raisins et pommes avec yogourt et noix de Grenobles confites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502346, 21, "Pizza, fromage, croûte mince, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502345, 19, "Édulcorant, sirop d'agave" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502344, 12, "Noix, noix mélangées, rôties dans l'huile sans arachides, légèrement salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502343, 12, "Noix, noix mélangées, rôties dans l'huile avec arachides, légèrement salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502342, 9, "Pomme, Golden Delicious, crue, avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502341, 9, "Poire, Bartlett, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502340, 1, "Yogourt de chèvre, saveur de vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502339, 1, "Yogourt de chèvre, saveurs de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502338, 1, "Yogourt de chevre, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502337, 1, "Yogourt à boire, saveur de vanille, vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502336, 1, "Yogourt à boire, saveurs de fruits, vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502335, 1, "Yogourt, soya, saveur de vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502334, 1, "Yogourt, saveur de vanille, vitamine D ajoutée (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502333, 1, "Yogourt, saveurs de fruits (2-3,9 M.G.), vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502332, 1, "Yogourt, saveur de vanille, sans gras, vitamine D et A ajoutées (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502331, 22, "Poulet, tendres de poulet, panés, congelés, cuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502330, 1, "Yogourt, saveurs de fruits, sans gras, vitamine D ajoutée (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502329, 1, "Yogourt, nature, sans gras, vitamine D ajoutée (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502328, 1, "Yogourt, saveur de vanille, faible en gras, vitamin D ajoutées (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502182, 1, "Yogourt, saveur de vanille, type Balkan (4-6% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502181, 1, "Yogourt, saveurs de fruits, type Balkan (4-6% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502180, 1, "Yogourt, nature, type Balkan (4-6% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502179, 1, "Yogourt, saveur de vanille, calcium et vitamine D ajoutés (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502051, 8, "Céréale, prête-à-manger, Spécial K: avec baies rouges, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502044, 6, "Sauce, boeuf, déshydratée, préparée avec de l'eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502041, 1, "Yogourt, parfait au yogourt, avec fruits et granola, yogourt à teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502040, 19, "Édulcorant, sucre granulé brun" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502039, 19, "Confiseries, sucre turbiné (turbinado)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502037, 22, "Pâté imperial (egg roll), assortiment, préparation restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502036, 22, "Bâtonnets de fromage mozzarella, frits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502035, 25, "Grignotises, croustilles de bagel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502052, 8, "Céréale, prête-à-manger, Oaty Bites, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502034, 19, "Bonbons, morceaux de bonbons enrobés de yogourt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502032, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, peau et panure provenant de tous les morceaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502031, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, aile, viande et peau avec panure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502030, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, aile, viande seulement, peau et panure retirées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502029, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, haut de cuisse, viande et peau avec panure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502027, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, haut de cuisse, viande seulement, peau et panure retirées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502026, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, pilon, viande et peau avec panure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502025, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, pilon, viande seulement, peau et panure retirés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502024, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, poitrine, viande et peau avec panure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502033, 25, "Grignotises, croustilles aux légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502023, 21, "Aliments prêts à manger, plat principal, poulet, pané et frit, poitrine, viande seulement, peau et panure retirés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502053, 8, "Céréale, prête-à-manger, riz croquant, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502056, 8, "Céréale, prête-à-manger, Flax plus pacanes croquantes à l'érable, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502077, 5, "Dinde, jeune, cuisse, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502076, 5, "Dinde, jeune, haut de cuisse, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502075, 5, "Dinde, jeune, pilon, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502074, 5, "Dinde, jeune, poitrine, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502073, 5, "Dinde, jeune, aile, viande, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502072, 5, "Dinde, jeune, cuisse, viande, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502071, 5, "Dinde, jeune, haut de cuisse, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502070, 5, "Dinde, jeune, pilon, viande, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502055, 8, "Céréale, prête-à-manger, flocons d'épeautre, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502069, 5, "Dinde, jeune, poitrine, viande, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502066, 8, "Céréale, prête-à-manger, granola agave tournesol, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502065, 8, "Céréale, prête-à-manger, Granola: Amande et Vanille, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502064, 8, "Céréale, prête-à-manger, Granola: grenade plus avec cerises, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502063, 8, "Céréale, prête-à-manger, granola acai plus, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502062, 8, "Céréale, prête-à-manger, granola au beurre d'arachide, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502059, 8, "Céréale, prête-à-manger, Granola Hemp Plus, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502058, 8, "Céréale, prête-à-manger, O entiers, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502057, 8, "Céréale, prête-à-manger, Mesa Sunrise, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502067, 8, "Céréale, prête-à-manger, Multigrain, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502022, 22, "Sandwich club avec poulet frit, bacon, tomates, fromage, laitue et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502021, 19, "Bonbons, barre croustillante avec garniture au beurre d'arachide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502020, 19, "Confiseries, sucre, cassonnade, contient sucre et sucralose" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501996, 22, "Sauté au boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501994, 22, "Spaghetti avec sauce à la viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501993, 22, "Spaghetti avec sauce à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501992, 22, "Boulettes avec sauce aigre-douce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501991, 22, "Sushi avec poisson et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501990, 22, "Sushi avec légumes, sans poisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501989, 22, "Pad thaï au poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501988, 18, "Pain à l'ail grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501997, 22, "Sauté avec poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501987, 22, "Courgettes, en pâte à frire, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501985, 21, "Aliments prêts à manger, sandwichs et burgers, donair ou gyro" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501984, 21, "Aliments prêts à manger, sandwichs et burgers, sous-marin végétarien, fait avec pain blanc et légumes uniquement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501983, 21, "Aliments prêts à manger, sandwichs et burgers, sous-marin fait avec pain blanc et dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501982, 22, "Sandwich, hambourgeois végétarien avec légumes et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501981, 22, "Sandwich roulé au poulet, légumes et fromage, vinaigrette ranch" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501980, 22, "Sandwich club avec poulet grillé, bacon, tomates, fromage, laitue et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501979, 22, "Sandwich chaud au poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501978, 22, "Indien, samosa (samoussa), végétarien" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501986, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au poulet grillé, avec laitue, tomates et tartinade" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501998, 22, "Sauté avec tofu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501999, 22, "Poutine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502000, 22, "Pâté chinois avec maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502019, 18, "Gaufre, grains de chocolat, congelée, prête-à-cuire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502018, 18, "Craquelin, blé entier, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502017, 11, "Haricots (italiens, jaunes ou verts), frais, cuits au four micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502016, 9, "Kiwi jaune, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502015, 19, "Dulce de leche (lait caramélisé)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502014, 6, "Trempette à base de crème sure (et soupe à l'oignon déshydratée)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502013, 6, "Trempette aux épinards, à base de crème sure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502012, 6, "Trempette à base de fromage à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502011, 18, "Pain de pommes de terre (patates)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502010, 14, "Boisson à base de plantes, soya, enrichie, toutes saveurs, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502009, 18, "Crêpe, nature, faite maison avec beurre et sirop d'érable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502008, 21, "Aliments prêts à manger, pizza avec fromage, viande (pepperoni, boeuf haché et sausisse) et légumes, croûte régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502007, 22, "Quésadilla à la viande et au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502006, 22, "Riz frit au poulet, avec pois, oignon et oeufs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502005, 22, "Poulet Général Tao (Tso)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502004, 22, "Sauté au boeuf et brocoli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502003, 22, "Poulet, sauté aux amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502002, 22, "Ragoût de boeuf avec pommes de terre et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502001, 22, "Fajita au poulet et aux légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502078, 5, "Dinde, jeune, aile, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502396, 14, "Boisson énergisante, avec jus de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502079, 5, "Dinde, toutes catégories, pilon, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502081, 5, "Dinde, toutes catégories, poitrine, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502150, 11, "Épinard, conserve, solides et liquide, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502148, 6, "Soupe aux haricots noirs, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502147, 22, "Tamale, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502146, 22, "Tamale, maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502145, 9, "Papaye, conserve dans du sirop épais, drainé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502144, 11, "Grande Ortie (ortie commune), autochtone, blanchie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502143, 11, "Navet des Prairies, autochtone, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502142, 11, "Navet des Prairies, autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502151, 10, "Porc, coupes diverses, cuisse, longe et épaule, maigre, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502141, 22, "Mets chinois, poulet Kung Pao, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502139, 22, "Poulet au citron, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502138, 22, "Mets chinois, boeuf et légumes, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502137, 11, "Champignon, morille, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502136, 11, "Champignon, Chanterelle, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502135, 9, "Plantain, vert, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502134, 10, "Porc, coupes diverses, cuisse, longe et épaule, maigre et gras, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502133, 8, "Céréale, prête-à-manger, Muesli: Raisins sec et amandes, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502132, 8, "Céréale, prête-à-manger, Avoine grillée, Sélection merite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502140, 15, "Poisson, saumon, rouge (sockeye), autochtone, fillets avec peau, fumés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502131, 8, "Céréale, prête-à-manger, Flocons de mais, Sélection merite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502152, 10, "Porc, coupes diverses, cuisse, longe et épaule, maigre, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502157, 1, "Yogourt, nature, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502178, 1, "Yogourt, saveurs de fruits, calcium et vitamine D ajoutés (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502176, 1, "Yogourt, saveurs de fruits, fibres ajoutées  (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502174, 1, "Yogourt, saveur de café (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502173, 1, "Yogourt, saveur de vanille (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502172, 1, "Yogourt, saveurs de fruits (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502171, 1, "Yogourt, nature, sucré (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502170, 1, "Yogourt, nature (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502169, 1, "Yogourt, saveurs de fruits, faible en gras, teneur réduite en lactose (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502153, 1, "Crème, 5%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502168, 1, "Yogourt, nature, faible en gras, teneur réduite en lactose (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502165, 1, "Yogourt, saveur de vanille, faible en gras (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502164, 1, "Yogourt, saveurs de fruits, faible en gras (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502163, 1, "Yogourt, nature, faible en gras (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502162, 1, "Yogourt, saveurs de fruits, sans gras (0-0,5% M.G.), fibres et vitamine D ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502161, 1, "Yogourt, saveur de vanille, avec édulcorant artificiel, sans gras (0-0,5% M.G.), avec vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502160, 1, "Yogourt, saveurs de fruits, avec édulcorant artificiel, sans gras (0-0,5% M.G.), avec vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502159, 1, "Yogourt, saveur de vanille, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502158, 1, "Yogourt, saveurs de fruits, sans gras (0-0,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502167, 1, "Yogourt, saveurs de fruits, faible en gras, oméga-3 (lin) ajouté (0,5-1,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502130, 8, "Céréale, prête-à-manger, Avoine en O: miel et noix, Sélection merite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502129, 8, "Céréale, prête-à-manger, Blé, Soufflé, Safeway" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502128, 8, "Céréale, prête-à-manger, Carrés de blé, Biologique, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502101, 5, "Dinde, à griller, pilon, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502100, 5, "Dinde, à griller, pilon, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502099, 5, "Dinde, jeune, haut de cuisse, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502098, 5, "Dinde, jeune, pilon, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502097, 18, "Tourtière maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502094, 5, "Dinde, jeune, haut de cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502093, 5, "Dinde, jeune, pilon, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502092, 5, "Dinde, toutes catégories, aile, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502102, 5, "Dinde, à griller, pilon, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502091, 5, "Dinde, toutes catégories, aile, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502089, 5, "Dinde, toutes catégories, pilon, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502088, 5, "Dinde, toutes catégories, cuisse, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502087, 5, "Dinde, toutes catégories, poitrine, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502086, 5, "Dinde, toutes catégories, haut de cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502085, 5, "Dinde, toutes catégories, pilon, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502084, 5, "Dinde, toutes catégories, haut de cuisse, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502083, 5, "Dinde, toutes catégories, pilon, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502082, 5, "Dinde, toutes catégories, cuisse, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502090, 5, "Dinde, toutes catégories, haut de cuisse, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502103, 5, "Dinde, à griller, pilon, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502104, 5, "Dinde, à griller, haut de cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502105, 5, "Dinde, à griller, haut de cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502127, 8, "Céréale-prête-à-manger, Victoire, Choix du président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502126, 8, "Substitut de repas (céréale, prête-à-manger, Force active, Choix du président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502125, 8, "Céréale, prête-à-manger, Flocons de son à l'avalanche de raisins sec, Compliments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502124, 8, "Céréale, prête-à-manger, Riz croustillant, Compliments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502123, 8, "Céréale, prête-à-manger, Flocons de mais: givré, Compliments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502121, 8, "Céréale, prête-à-manger, Spécial K: Satisfaction, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502120, 8, "Céréale, prête-à-manger, Spécial K: Vanille et amandes, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502118, 8, "Céréale, prête-à-manger, All Bran bouchées aux fraises, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502117, 8, "Céréale, prête-à-manger, Kashi: GoLean, Kashi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502116, 8, "Céréale, prête-a-manger, Croque pain doré, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502115, 8, "Céréale, prête-à-manger, Fibre 1: Grappes au son et aux raisins secs, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502114, 8, "Céréale, prête-à-manger, Fiber 1: grappes au miel, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502113, 8, "Céréale, prête-à-manger, Cheerios: Pépites d'avoine croquantes, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502112, 11, "Champignon, shiitake, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502110, 6, "Sauce, Hollandaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502109, 5, "Dinde, toutes catégories, dos, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502108, 5, "Dinde, toutes catégories, dos, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502107, 5, "Dinde, à griller, haut de cuisse, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502106, 5, "Dinde, à griller, haut de cuisse, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502080, 5, "Dinde, toutes catégories, haut de cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502397, 14, "Boisson énergisante, sans caféine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502398, 14, "Boisson énergisante, saveur de thé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502399, 14, "Alcoolisé, boisson énergisante (7% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502723, 16, "Haricots, sautés (frigoles refrits)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502722, 22, "Riz espagnol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502721, 22, "Poulet au parmesan" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502720, 22, "Tamale, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502719, 22, "Ravioli au fromage avec sauce marinara" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502718, 22, "Quésadilla au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502717, 22, "Spaghetti avec sauce aux tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502716, 22, "Riz espagnol, mélange, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502724, 6, "Soupe, bouillon, poulet, conserve, condensée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502715, 22, "Riz espagnol, mélange, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502713, 21, "Aliments prêts à manger, biscuit poudre à pâte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502712, 17, "Veau, haché, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502711, 17, "Veau, jarret, osso buco, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502710, 17, "Veau, jarret, osso buco, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502709, 17, "Agneau, Nouvelle-Zélande, filet, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502708, 17, "Agneau, Nouvelle-Zélande, filet, maigre, cuit rapidement dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502707, 17, "Agneau, Nouvelle-Zélande, filet, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502706, 17, "Agneau, Nouvelle-Zélande, filet, maigre et gras, cuit rapidement dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502714, 18, "Craquelin, type collation, avec blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502705, 17, "Agneau, Nouvelle-Zélande, gigot, côtelette / steak, maigre, sauté rapidement dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502725, 6, "Soupe, bouillon, poulet, conserve, condensée, eau ajoutée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502728, 6, "Soupe, crème, céleri, conserve, condensée, réduite en gras, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502781, 4, "Margarine, tartinade, molle, hydrogénée, huiles de canola et soya, 50% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502780, 4, "Margarine, tartinade, molle, non hydrogénée, huiles mélangées, 68% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502779, 4, "Margarine, molle, non hydrogénée, huile de canola, avec stérols végétaux, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502778, 4, "Yogourt grec, saveur de fruits, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502777, 4, "Margarine, molle, non hydrogénée, huiles de canola et olive" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502776, 1, "Yogourt, Grec, nature, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502774, 4, "Margarine, molle, non hydrogénée, huiles de canola et de poisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502773, 4, "Margarine, molle, non hydrogénée, huiles de canola (incluant de l'huile de tournesol), sans lactose, végétalienne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502727, 6, "Soupe, crème, céleri, conserve, condensée, réduite en gras, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502772, 4, "Margarine, molle, non hydrogénée, huile de canola (incluant de l'huile de tournesol), non salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502768, 4, "Margarine, molle, non hydrogénée, huile de canola (incluant huile de tournesol)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502762, 4, "Margarine, molle, non hydrogénée, huile de soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502759, 4, "Margarine, dure, huiles de palme et soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502758, 4, "Margarine, dure, huile de canola et/ou soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502742, 14, "Boisson, mélange à saveur, chocolat, poudre, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502732, 3, "Bébé, dîner, agneau aux fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502730, 6, "Soupe, brocoli et fromage, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502729, 6, "Soupe, crème, champignons, conserve, condensée, réduite en gras, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502771, 4, "Margarine, molle, non hydrogénée, huile de canola, avec stérols végétaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502704, 22, "Quinoa, galette de hambourgeois, congelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502703, 14, "Boissons gazeuses, soda au citron et à la lime, avec caféine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502702, 12, "Noix, amandes, rôties dans l'huile, légèrement salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502677, 6, "Soupe, crème, pommes de terre, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502676, 6, "Soupe, champignons et orge, prête-à-servir, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502675, 6, "Soupe, crème, champignons, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502674, 6, "Soupe, crème, champignons, conserve, condensée, réduite en sodium, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502673, 6, "Soupe, crème, champignons, conserve, condensée, réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502672, 6, "Soupe, crème, champignons, conserve, condensée, réduite en gras, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502671, 6, "Soupe, crème, champignons, conserve, condensée, réduite en sodium, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502670, 6, "Soupe, crème, poulet, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502678, 6, "Soupe, noces à l'italienne, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502669, 6, "Soupe, crème, poulet, conserve, condensée, réduite en gras, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502667, 6, "Soupe, crème, poulet, conserve, condensée, réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502666, 6, "Soupe, crème, brocoli, conserve, condensée, réduite en gras, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502665, 6, "Soupe, crème, céleri, conserve, condensée, réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502663, 6, "Soupe, crème, brocoli, conserve, condensée, réduite en gras, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502662, 6, "Soupe, crème, brocoli, conserve, condensée, réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502661, 6, "Soupe, crème, brocoli, conserve, condensée, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502660, 6, "Soupe, crème, brocoli, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502659, 6, "Soupe, crème, brocoli, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502668, 6, "Soupe, crème, poulet, conserve, condensée, réduite en gras, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502679, 6, "Soupe, lentilles, prête-à-manger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502680, 6, "Soupe, crème, asperges, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502682, 6, "Soupe aux pois cassés, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502701, 9, "Framboise, congelée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502700, 9, "Jus d'orange, concentré, congelé, non dilué, calcium et vitamine D ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502699, 22, "Boulettes de viande, à l'italienne, congelées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502698, 5, "Bernache du Canada (outarde), autochtone, poitrine, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502697, 22, "Spaghetti et boulettes de viande, préparation restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502696, 11, "Légumes, jus, cocktail, conserve, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502695, 9, "Jus de pommes, conserve ou bouteille, non sucré, calcium et vitamine C et D ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502694, 8, "Céréale, chaude, crème de blé, instantanée: blé entier, préparée avec de l'eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502693, 8, "Céréale, chaude, crème de blé, instantanée: blé entier, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502692, 3, "Bébé, viande, en pot et congelée, boeuf, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502691, 6, "Soupe, wonton (won ton), conserve, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502690, 6, "Soupe, tomates et poivrons rouges, prête-à-servir, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502689, 6, "Soupe, tomates, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502688, 3, "Bébé, jus de poires, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502687, 3, "Bébé, jus de pommes et de pruneaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502686, 3, "Bébé, jus de pommes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502685, 6, "Soupe, tomates, conserve, condensée, réduite en sodium, lait 2% M.G. ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502684, 6, "Soupe, tomates, conserve, condensée, réduite en sodium, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502683, 6, "Soupe, tomates et nouilles, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502782, 4, "Margarine, molle, non hydrogénée, huile de canola (incluant de l'huile de tournesol), réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502657, 6, "Soupe, chaudrée de palourdes, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502783, 4, "Margarine, molle, non hydrogénée, huiles végétales mélangées, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502787, 14, "Boisson à base de plantes, noix de coco, enrichie, sucrée, toutes les saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503342, 3, "Bébé, céréale, avoine, avec poudre de lait, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503341, 3, "Bébé, céréale, avoine, avec poudre de lait, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503340, 3, "Bébé, céréale, mélange de grains, avec fruits, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503339, 3, "Bébé, céréale, avoine, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503338, 3, "Bébé, céréale, mélange de grains, avec fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503337, 3, "Bébé, céréale, mélange de grains, avec poudre de lait et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502922, 3, "Bébé, céréale, mélange de grains, avec biscuit, poudre de lait et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502921, 3, "Bébé, céréale, mélange de grains, avec biscuit, poudre de lait et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503343, 3, "Bébé, céréale, riz, avec poudre de lait et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502920, 3, "Bébé, céréale, orge, avec poudre de lait, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502918, 3, "Bébé, céréale, mélange de grains, avec poudre de lait, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502917, 3, "Bébé, céréale, prête-à-manger, en forme de 'O'" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502916, 3, "Aliments pour bébé, grignotises, biscuit, blé avec poudre de lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502878, 14, "Boisson à base de plantes, noix de coco, enrichie, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502877, 3, "Bébé, légumes, en pot, brocoli et pommes de terre avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502876, 3, "Bébé, légumes et produits céréaliers, en pot, maïs en crème avec riz" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502875, 3, "Bébé, légumes et fruits, courgettes et pommes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502874, 3, "Bébé, légumes et fruits, en pot, haricots verts et pommes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502919, 3, "Bébé, céréale, mélange de grains, avec poudre de lait, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502873, 3, "Bébé, légumes, en pot, patates sucrées, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503344, 3, "Bébé, céréale, riz avec yogourt et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503346, 3, "Bébé, céréale, riz avec poudre de lait, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503367, 4, "Margarine, molle, hydrogénée, huile de canola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503366, 4, "Margarine, molle, hydrogénée, huile de soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503365, 9, "Jus d'orange, concentré, dilué, calcium et vitamine D ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503364, 14, "Boisson à base de plantes, noix de coco, non enrichie, sucrée, toutes les saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503363, 14, "Boisson à base de plantes, noix de coco, non enrichie, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503362, 12, "Graines de chanvre, décortiquées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503358, 3, "Bébé, céréale, blé, avec poudre de lait, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503357, 3, "Bébé, céréale, blé, avec poudre de lait, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503345, 3, "Bébé, céréale, riz avec yogourt et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503356, 3, "Bébé, céréale, avoine, avec poudre de lait et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503354, 3, "Bébé, céréale, soya, avec fruits, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503353, 3, "Bébé, céréale, soya, avec fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503352, 3, "Bébé, céréale, blé, avec poudre de lait et fruits, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503351, 3, "Bébé, céréale, blé, avec poudre de lait et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503350, 3, "Bébé, céréale, blé, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503349, 3, "Bébé, céréale, blé, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503348, 3, "Bébé, céréale, riz, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503347, 3, "Bébé, céréale, riz avec poudre de lait, préparée avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503355, 3, "Bébé, céréale, avoine, avec poudre de lait et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502872, 3, "Bébé, légumes, en pot, courge, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502871, 3, "Bébé, légumes, en pot, pois, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502870, 3, "Bébé, légumes, pois et carottes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502842, 3, "Bébé, dessert, en pot, fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502834, 3, "Bébé, dessert, en pot, bleuets, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502833, 3, "Bébé, dessert, en pot, bananes avec crème de coco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502832, 3, "Bébé, dessert, en pot, abricots, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502831, 3, "Bébé, dessert, en pot, fraises" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502830, 3, "Bébé, fruits, en pot, pruneaux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502829, 3, "Bébé, fruits, en pot, poires, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502828, 3, "Bébé, fruits, en pot, pêches, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502843, 3, "Bébé, dessert, en pot, tarte graham aux bananes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502827, 3, "Bébé, fruits, en pot, fruits mélangés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502824, 3, "Bébé, en pot, fruits, abricots et autres fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502821, 3, "Bébé, fruits, en pot, pommes et autres fruits (prune, mangue, kiwi, poire, banane, abricot et/ou ananas), toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502819, 3, "Bébé, fruits, en pot, pommes et petits fruits (bleuets, framboises ou fraises), toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502816, 3, "Bébé, fruits, en pot, bananes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502804, 3, "Bébé, fruits, en pot, pommes (compote), tous les stages" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502803, 3, "Bébé, dessert, en pot, pouding au lait ou costarde (incluant à la vanille)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502789, 14, "Boisson à base de plantes, cajou, enrichie, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502788, 14, "Boisson à base de plantes, noix de coco, enrichie, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502825, 3, "Bébé, fruits, en pot, bananes et autres fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502847, 3, "Bébé, viande, en pot et congelée, poulet, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502848, 3, "Bébé, viande, agneau, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502849, 3, "Bébé, viande, porc, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502869, 3, "Bébé, légumes, en pot, légumes mélangés, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502868, 3, "Bébé, légumes, en pot, haricots verts, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502867, 3, "Bébé, légumes, en pot, maïs en crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502866, 3, "Bébé, légumes, en pot, carottes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502865, 3, "Bébé, dîner, en pot, pâtes avec fromage et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502864, 3, "Bébé, dîner, en pot, pâtes avec légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502863, 3, "Bébé, dîner, veau avec légumes et orge" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502862, 3, "Bébé, dîner, en pot ou congelé, dinde avec riz ou orge et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502861, 3, "Bébé, dîner, en pot, dinde avec légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502860, 3, "Bébé, dîner, en pot, porc avec légumes et fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502859, 3, "Bébé, dîner, en pot, poulet avec légumes et fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502857, 3, "Bébé, dîner, en pot, poulet avec pâtes au fromage et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502856, 3, "Bébé, dîner, en pot, poulet avec pâtes et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502855, 3, "Bébé, diner, en pot ou congelé, poulet avec riz ou orge et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502854, 3, "Bébé, diner, en pot ou congelé, poulet avec légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502853, 3, "Bébé, diner, en pot ou congelé, boeuf avec pâtes et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502852, 3, "Bébé, diner, en pot ou congelé, boeuf et légumes, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502851, 3, "Bébé, viande, veau, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502850, 3, "Bébé, viande, dinde, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502784, 14, "Boisson, mélange à saveur, chocolat, poudre, sans sucre ajouté, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501977, 22, "Sandwich à la salade de saumon, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502656, 3, "Bébé, fruits mélangés avec céréale à l'avoine, toutes les étapes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502654, 6, "Soupe, bouillon, légumes, prêt-à-servir, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502472, 18, "Indien, pain, chapati ou roti, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502471, 6, "Sauce aux arachides (faite à partir de beurre d'arachides, eau et sauce soya)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502470, 25, "Grignotises, croustilles de pommes de terre, légèrement salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502469, 25, "Grignotises, bretzels, durs, enrobés de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502468, 25, "Grignotises, croustilles de riz brun" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502467, 19, "Édulcorant, poudre d'extrait de la feuille de Stevia" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502466, 16, "Soya, sauce (fait avec protéine végétale hydrolysée), réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502465, 16, "Haricots, sautés (frigoles refrits), conserve, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502473, 18, "Indien, pain, paratha, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502463, 16, "Pois chiches (garbanzo), conserve, solides et liquide, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502461, 16, "Haricots, rouges, conserve, solides et liquide, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502458, 18, "Pain, épeautre, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502454, 14, "Eau vitaminée, saveurs autres que citron/orange, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502453, 14, "Eau vitaminée, saveurs autres que citron/orange, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502452, 16, "Haricots, \"Great Northern\", conserve, solides et liquide, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502451, 16, "Haricots, noirs, grains mûrs, conserve, solides et liquide, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502450, 15, "Poisson, truite mouchetée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502449, 14, "Boisson, poudre élevée en protéine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502462, 16, "Haricots, pinto, conserve, solides et liquide, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502448, 14, "Boisson à base de plantes, poudre protéinée à base de soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502477, 18, "Indien, pain, naan, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502480, 18, "Biscuit, sandwich fourré au beurre d'arachides, enrobé de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502498, 22, "Pâtes, boeuf classique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502497, 22, "Pâtes, mélange, macaroni boeuf et fromage classique, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502496, 22, "Taquito, boeuf et fromage, congelé, réchauffé au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502495, 22, "Taquito, poulet et fromage, congelé, réchauffé au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502494, 11, "Pomme de terre, frite, coupe ondulée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502493, 11, "Pomme de terre, frite, quartier, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502492, 11, "Patate douce soufflée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502491, 11, "Patate douce, frite, coupe ondulée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502479, 18, "Indien, pain, chapati ou roti, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502490, 11, "Patate douce, frite, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502488, 18, "Biscuit, graham, nature ou miel, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502487, 18, "Biscuit, sandwich à l'avoine, fourré à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502486, 18, "Biscuit, sandwich au chocolat, fourré de crème, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502485, 18, "Biscuit, carré au chocolat, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502484, 18, "Tortilla, prêt-à-cuire /frire, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502483, 18, "Biscuit, chocolat, avec glaçage ou enrobage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502482, 18, "Biscuit, au beurre ou au sucre, avec glaçage ou garniture au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502481, 18, "Craquelin, multigrains" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502489, 18, "Craquelin, fromage, grains entiers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502447, 14, "Boisson, poudre protéinée à base de lactosérum" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502446, 14, "Boisson au jus, orange, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502445, 14, "Boisson, isolat de protéines de lactosérum, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502421, 19, "Dessert, congelé, crème glacée, barre ou pépites, enrobage croquant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502420, 19, "Dessert, glacé, crème glacée molle, chocolat, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502419, 18, "Pain, multigrains, commercial, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502418, 18, "Pain, grains entiers (blé entier), avec fibres ajoutées, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502417, 18, "Pain, grains entiers (blé entier) avec graines et son, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502416, 18, "Pain, grains entiers (blé entier) avec graines (lin, tournesol), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502415, 18, "Pain, grains entiers (blé entier), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502413, 18, "Pain, blanc, commercial, avec fibres ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502422, 2, "Assaisonnement, chili, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502412, 18, "Pain, 60% blé entier, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502410, 4, "Huile végétale, tournesol, teneur moyenne en acide oléique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502406, 7, "Jambon, flocons, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502405, 14, "Eau vitaminée, saveur citronée tropicale, sucrée, avec caféine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502404, 14, "Eau vitaminée, saveur de citron/orange, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502403, 14, "Eau vitaminée, saveur de citron/orange, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502402, 14, "Eau vitaminée, toutes les saveurs, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502401, 14, "Eau vitaminée, toutes les saveurs, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502400, 14, "Boisson énergisante, avec électrolytes, sans sucre/ hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502411, 22, "Mets chinois, riz frit sans viande, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502423, 3, "Aliments pour bébé, grignotises, biscuit de riz" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502424, 4, "Vinaigrette, mayonnaise huile d'olive, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502425, 6, "Sauce aux arachides (faite à partir de noix de coco, eau, sucre, arachides)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502444, 14, "Boisson, boisson protéinée, prête-à-boire, MUSCLE MLK, léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502443, 14, "Boisson à base de plantes, amande, enrichie, sucrée, saveur de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502442, 14, "Boisson à base de plantes, amande, enrichie, sucrée, saveur de vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502441, 14, "Boisson, eau de noix de coco, non sucrée, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502440, 12, "Noix, amandes, rôties dans l'huile, saveur de fumée, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502439, 12, "Noix de Grenoble, givrées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502438, 11, "Pomme de terre, rôtie, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502437, 10, "Porc, salé, bacon de dos, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502436, 9, "Pomme, Fuji, crue avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502435, 9, "Pomme, Gala, crue avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502434, 9, "Pomme, Granny Smith, crue, avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502433, 9, "Pomme, Red Delicious, crue, avec peau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502432, 9, "Poire, anjou verte, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502431, 9, "Poire, bosc, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502430, 9, "Poire, anjou rouge, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502429, 9, "Cerise sure, conserve, dans l'eau, drainée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502428, 9, "Bleuet séché, sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502427, 9, "Cerises, séchées, sucrées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502426, 8, "Céréale, prête-à-manger, Krave, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502500, 22, "Pizza roulée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502655, 6, "Soupe, poulet et riz, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502501, 22, "Ravioli chinois ou wonton (potsticker), porc et légumes, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502503, 22, "Lasagne au fromage, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502588, 7, "Saucisse, fumée, avec fromage cheddar, pré-cuite, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502587, 7, "Saucisse, fumée, avec fromage cheddar, pré-cuite, réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502586, 13, "Boeuf, épaule, bout-de-côte, désossé, maigre, 0mm paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502584, 7, "Saucisse, fumée, porc, pré-cuite, réchauffée, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502582, 7, "Saucisse, fumée, porc, pré-cuite, réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502580, 7, "Bâtonnet de viande, pepperoni, non-réfrigéré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502579, 7, "Bâtonnet de viande, pepperoni, réfrigéré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502578, 7, "Bâtonnet de viande, poulet/dinde, réfrigéré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502589, 7, "Saucisse, fumée, avec fromage cheddar, pré-cuite, réchauffée, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502577, 7, "Bâtonnet de viande, viandes mélangées, réfrigéré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502575, 7, "Saucisse knackwurst (knockwurst), cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502574, 7, "Saucisse merguez, agneau, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502573, 7, "Saucisse merguez, agneau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502572, 7, "Saucisse, saucisson polonais, fumé, pré-cuit, réchauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502571, 7, "Saucisse, boudin, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502570, 7, "Saucisse Bratwurst, porc, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502569, 7, "Saucisse, miel et ail, porc, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502568, 7, "Saucisse, miel et ail, porc, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502576, 7, "Bâtonnet de viande, boeuf, réfrigéré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502567, 7, "Saucisse italienne, dinde, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502590, 7, "Saucisse, fumée, miel et ail, pré-cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502592, 13, "Boeuf, épaule, bout-de-côte, désossé, maigre et gras, 0mm paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502653, 6, "Soupe, poulet et nouilles, conserve, condensée, eau ajoutée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502652, 6, "Soupe, poulet et nouilles, conserve, condensée, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502651, 6, "Soupe, courge musquée, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502650, 6, "Soupe, bouillon, légumes, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502649, 6, "Soupe, pois cassés avec jambon, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502648, 6, "Soupe, bouillon, boeuf, prête-à-servir, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502647, 6, "Soupe, bouillon, boeuf, prêt-à-servir, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502646, 6, "Soupe, légumes et boeuf, prête-à-servir, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502591, 13, "Boeuf, épaule, bout-de-côte, maigre, 0 mm paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502645, 6, "Soupe, chaudrée de palourdes, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502643, 6, "Soupe, boeuf et orge, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502642, 6, "Soupe (sauce), bouillon, crème, prêt-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502641, 1, "Yogourt, nature, riche/type méditerranéen  (6-9% M.G.), vitamine D ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502622, 18, "Pain Italien, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502596, 7, "Saucisse, épicée au boeuf et poivrons rouges rôtis, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502595, 7, "Saucisse, épicée au boeuf et poivrons rouges rôtis, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502594, 13, "Boeuf, épaule, bout-de-côte, désossé, maigre et gras, 0mm paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502593, 7, "Saucisse, fumée, miel et ail, pré-cuite, réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502644, 6, "Soupe, boeuf et orge, prête-à-servir, réduite en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502566, 7, "Saucisse italienne, dinde, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502565, 7, "Saucisse italienne, porc, teneur réduite en gras et sodium, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502564, 7, "Saucisse italienne, porc, teneur réduite en gras et sodium, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502533, 18, "Pain, grains entiers (blé entier), commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502532, 18, "Pain, blanc, commercial, avec fibres ajoutées, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502531, 18, "Pain, 60% blé entier, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502527, 18, "Biscuit, sablé, nature, commercial, sans sucre ajouté, avec édulcorant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502526, 19, "Dessert, congelé, barre FUDGESICLE, sans sucre ajouté, avec édulcorant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502525, 18, "Chausson aux fruits, (pommes, petits fruits, cerises, pêches)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502524, 18, "Pain, préparé avec du lait, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502523, 18, "Pain, avoine (inclut gruau et son d'avoine), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502536, 18, "Pain, grains entiers (blé entier) avec graines (lin, tournesol), commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502522, 18, "Pain, blé germé, calcium et vitamine D ajoutés, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502520, 7, "Charcuterie, jambon, tranché, composite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502512, 7, "Charcuterie, composite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502510, 18, "Pain, blé germé, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502508, 14, "Café et cacao (mocha), poudre, avec colorant à café et édulcorant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502507, 22, "Mets chinois, poulet à l'orange, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502506, 22, "Mets chinois, poulet et légumes, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502505, 22, "Mets chinois, lo mein aux légumes, sans viande, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502504, 22, "Mets chinois, chow mein aux légumes, sans viande ni nouilles, préparé au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502521, 7, "Charcuterie, bologne, composite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502537, 18, "Pain, grains entiers (blé entier) avec graines et son, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502538, 18, "Pain, grains entiers (blé entier), avec fibres ajoutées, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502539, 18, "Pain, multigrains, commercial, réduit en sodium, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502562, 5, "Poulet à griller, haut de cuisse, viande et peau, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502561, 5, "Poulet à griller, haut de cuisse, viande, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502560, 5, "Poulet à griller, pilon, viande, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502559, 7, "Saucisse Oktoberfest, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502558, 7, "Saucisse Oktoberfest, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502557, 7, "Saucisse, chorizo, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502555, 5, "Poulet à griller, poitrine, sans la peau, désossée, viande, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502554, 5, "Poulet à griller, poitrine, sans la peau, désossée, viande, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502553, 7, "Saucisse, Chorizo, semi-sec (type espagnol), saumuré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502552, 7, "Saucisse, chorizo, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502551, 7, "Saucisse, chorizo, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502547, 7, "Saucisse à déjeuner, en chapelet ou en galette, dinde, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502546, 7, "Saucisse à déjeuner, en chapelet ou en galette, porc, pré-cuite, réchauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502545, 7, "Saucisse à déjeuner, en chapelet ou en galette, boeuf, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502544, 18, "Pain, préparé avec du lait, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502543, 18, "Pain, avoine (inclut gruau et son d'avoine), commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502542, 18, "Pain, blé germé, calcium et vitamine D ajoutés, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502541, 18, "Pain, blé germé, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502540, 18, "Pain, épeautre, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 502502, 22, "Chausson au fromage et sauce tomates, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501976, 22, "Sandwich à la salade de thon, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501975, 22, "Sandwich au jambon, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501974, 22, "Sandwich aux oeufs durs, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6216, 10, "Porc, salé, jambon, tranche, avec os, maigre et gras, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6215, 10, "Porc, salé, jambon, tranche, avec os, maigre, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6214, 10, "Porc, salé, jambon, tranche, avec os, maigre et gras, chauffé, grillé dans la poêle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6213, 10, "Porc, salé, jambon, flanc, avec os, maigre et gras, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6212, 10, "Porc, salé, jambon, flanc, avec os, maigre et gras, chauffé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6211, 10, "Porc, salé, jambon, flanc, avec os, maigre, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6210, 10, "Porc, salé, jambon, flanc, avec os, maigre, chauffé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6209, 10, "Porc, salé, jambon, croupe, avec os, maigre, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6217, 11, "Fèves, soya frais (edamame), congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6208, 10, "Porc, salé, jambon, croupe, avec os, maigre, chauffé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6206, 10, "Porc, mariné, jarrets de porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6205, 9, "Mangue, nectar, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6204, 9, "Goyave, nectar, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6203, 9, "Orange, jus, réfrigéré, de concentré inclus, enrichi en calcium et vitamin D" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6199, 6, "Sauce, aigre-douce, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6197, 11, "Sauce, pizza, en conserve, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6196, 2, "Vinaigre, balsamique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6195, 2, "Vinaigre, vin rouge" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6207, 10, "Porc, salé, jambon, croupe, avec os, maigre et gras, chauffé, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6194, 18, "Craquelin, blé, réduit en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6218, 11, "Fèves, soya frais (edamame), congelée, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6220, 16, "Beurre d'arachides, moins de sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6238, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois,  gros, 1 galette, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6237, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 1 galette, avec condiments, légumes et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6236, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 2 galettes; avec condiments, légumes et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6235, 21, "Aliments prêts à manger, mini-brioches à la cannelle" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6234, 19, "Bonbons, fudge blanc divinity, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6233, 19, "Bonbons, caramel (toffee) , fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6232, 19, "Bonbons, tire d'érable, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6231, 19, "Bonbons, fudge, chocolat guimauve, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6219, 11, "Champignon, Maitake, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6230, 19, "Bonbons, Snickers, avec amandes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6228, 19, "Dessert, croustade aux pommes, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6227, 19, "Dessert, mousse, chocolat, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6226, 19, "Dessert, flan aux oeufs, cuit au four, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6225, 19, "Bonbons, truffes, faites maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6224, 19, "Bonbons, fudge, beurre d'arachides, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6223, 19, "Dessert, flan, crème au caramel, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6222, 18, "Tartelette grille-pain, fruits, grillée (pommes, bleuets, cerises, fraises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6221, 18, "Tartelette grille-pain, glacée (pommes, bleuets, cerises, fraises)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6229, 19, "Bonbons, praline, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6193, 20, "Grains céréaliers, teff, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6192, 20, "Grains céréaliers, riz blanc, glutineux, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6191, 20, "Grains céréaliers, épeautre, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6152, 13, "Boeuf, longe, rôti de triangle de bas de surlonge, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6150, 13, "Boeuf, longe, rôti de triangle de bas de surlonge, désossé, maigre et gras, 0mm (0'') paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6149, 13, "Boeuf, longe, rôti de triangle de bas de surlonge, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6147, 13, "Boeuf, longe, rôti de triangle de bas de surlonge, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6146, 13, "Boeuf, longe, bifteck de haut de surlonge, désossé, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6145, 13, "Boeuf, longe, bifteck de haut de surlonge, désossé, maigre et gras, 3mm (1/8\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6144, 13, "Boeuf, longe, bifteck de haut de surlonge, désossé, maigre et gras, 0mm (0\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6143, 13, "Boeuf, longe, bifteck de haut de surlonge,  désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6156, 13, "Boeuf, longe, bifteck de triangle de bas de surlonge, désossé, maigre et gras, 0mm (0'') paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6142, 13, "Boeuf, longe, bifteck de haut de surlonge, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6137, 13, "Boeuf, longe, rôti de haut de surlonge, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6134, 13, "Boeuf, longe, filet, bifteck, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6132, 13, "Boeuf, longe, filet, bifteck, maigre et gras, 0mm (0\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6131, 13, "Boeuf, longe, filet, bifteck, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6129, 13, "Boeuf, longe, filet, bifteck, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6128, 13, "Boeuf, longe, filet, rôti, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6126, 13, "Boeuf, longe, filet, rôti, maigre et gras, 0mm (0\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6125, 13, "Boeuf, longe, filet, rôti, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6140, 13, "Boeuf, longe, rôti de haut de surlonge, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6159, 10, "Porc, longe, rôti, bout côte, désossée, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6160, 10, "Porc, longe, rôti, bout côte, désossé, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6161, 10, "Porc, longe, rôti, bout côte, désossée, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6190, 20, "Grains céréaliers, sorgho, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6189, 11, "Patate douce, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6188, 11, "Igname, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6187, 20, "Grains céréaliers, quinoa, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6186, 20, "Grains céréaliers, millet, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6185, 20, "Grains céréaliers, blé, kamut khorasan, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6184, 11, "Manioc, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6183, 16, "Lentilles, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6182, 16, "Haricots, blancs, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6181, 16, "Haricots, noirs, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6180, 20, "Grains céréaliers, amarante, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6179, 5, "Nandou (rhea), raw" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6178, 19, "Confiseries, tire d'érable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6177, 19, "Confiseries, beurre d'érable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6176, 19, "Confiseries, sucre d'érable, granulé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6175, 19, "Confiseries, sirop d'érable, préemballé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6172, 13, "Boeuf, coupes diverses, bifteck/rôti, maigre et gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6169, 13, "Boeuf, coupes diverses, bifteck/rôti, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6162, 10, "Porc, longe, rôti, bout côte, désossé, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6239, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 1 galette, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6123, 13, "Boeuf, longe, filet, rôti, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6240, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois,  régulier, 1 galette, avec condiments et sauce spéciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6243, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 2 galettes, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501524, 14, "Eau, saveur de fruits, édulcorant artificiel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501523, 18, "Barre aux céréales et au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501522, 6, "Sauce spaghetti, avec légumes du jardin, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501521, 6, "Soupe, courge musquée, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501520, 6, "Soupe, poivrons rouges et haricots noirs, prête-à-servir, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501519, 6, "Sauce, spaghetti, avec oignons et ail, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501518, 6, "Sauce, spaghetti, avec champignons et poivrons verts, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501517, 5, "Poulet, tendres de poitrine, panés, non cuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501525, 14, "Boisson, type déjeuner, orange, moins de sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501516, 5, "Poulet, tendres de poitrine, panés, cuits au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501514, 5, "Poulet, galette, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501513, 5, "Poulet, galette, congelée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501510, 4, "Vinaigrette, moutarde au miel, réduite en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501509, 2, "Assaisonnement, taco, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501508, 1, "Fromage, provolone, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501507, 1, "Crème, succédané, aromatisé, en poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501506, 1, "Crème, succédané, aromatisé, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501505, 1, "Fromage, parmesan, râpé, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501515, 5, "Poulet, tendres de poitrine, panés, cuits au four conventionnel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501502, 7, "Charcuterie, prosciutto, (jambon de Parme), salé à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501526, 14, "Boisson à base de plantes, soya, enrichie, chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501528, 14, "Boisson à base de plantes, soya, enrichie, toutes saveurs, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501546, 25, "Grignotises, bretzels, mous, non salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501545, 25, "Grignotises, maïs soufflé au four à micro-ondes, saveur de beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501544, 22, "Lasagne aux légumes, congelée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501543, 22, "Pâté impérial (egg roll), légumes, réfrigéré, réchauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501542, 22, "Pâté impérial (egg roll), poulet, réfrigéré, réchauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501541, 22, "Pâté impérial (egg roll), porc, réfrigéré, réchauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501540, 22, "Burrito, boeuf et haricots, cuit au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501539, 22, "Burrito, haricots et fromage, cuit au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501527, 14, "Boisson à base de plantes, soya, enrichie, toutes saveurs, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501538, 19, "Dessert, congelé, crème glacée légère, molle, mélangée avec morceaux de biscuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501536, 21, "Aliments prêts à manger, sandwichs et burgers, sandwich au poulet croustillant, avec laitue, tomate et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501535, 20, "Grains céréaliers, teff, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501534, 20, "Grains céréaliers, épeautre, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501533, 20, "Grains céréaliers, blé, kamut khorasan, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501532, 19, "Dessert, congelé, crème glacée, chocolat, moins de sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501531, 19, "Dessert, congelé, crème glacée, vanille, moins de sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501530, 18, "Muffin, bleuets, commercial, teneur réduite en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501529, 14, "Boisson à base de plantes, soya, enrichie, toutes saveurs, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501537, 19, "Dessert, congelé, crème glacée légère, molle, mélangée avec bonbons au chocolat au lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501098, 11, "Chou, napa, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501097, 8, "Substitut de repas (céréale), prête-à-manger, Vector, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6298, 11, "Artichaut mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6261, 15, "Poisson, truite arc-en-ciel anadrome, viande, séchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6260, 9, "Cerise de Virginie, crue, dénoyautée (cerise à grappes)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6259, 9, "Ronce élégante, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6258, 25, "Grignotises, croustilles multigrains, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6257, 25, "Grignotises, croustilles de patates douces, non salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6256, 25, "Grignotises, maïs, grains non soufflés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6255, 25, "Grignotises, maïs soufflé au four micro-ondes, moins de lipides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6254, 22, "Burrito, haricots et fromage, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6262, 15, "Poisson, truite arc-en-ciel anadrome, bouillie, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6253, 22, "Burrito, boeuf et haricots, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6251, 21, "Aliments prêts à manger, déjeuner, bagel, avec bifteck, oeuf, fromage et condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6250, 21, "Aliments prêts à manger, déjeuner, bagel, avec oeuf, saucisse, fromage et condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6249, 21, "Aliments prêts à manger, déjeuner, bagel, avec jambon, oeuf et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6248, 21, "Aliments prêts à manger, filets de poitrine de poulet, panés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6247, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, régulier, 2 galettes, avec condimets et sauce spéciale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6246, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 2 galettes, avec condiments, légumes et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6245, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6244, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, avec condiments, légumes et mayonnaise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6252, 22, "Lasagne au fromage, congelée, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6263, 11, "Maïs, séché, jaune" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6264, 15, "Poisson, éperlan, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6265, 18, "Pain frit, avec lard" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6292, 18, "Biscuit, grains de chocolat, pâte réfrigérée, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6291, 1, "Kéfir, (2-3,9% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6289, 16, "Beurre d'arachides, naturel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6288, 10, "Porc, coupes diverses, cuisse, longe et épaule, maigre et gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6287, 11, "Jus, tomates, en conserve, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6286, 13, "Boeuf, coupes diverses, boeuf à ragout, 0mm  (0\") paré, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6285, 13, "Boeuf, coupes diverses, boeuf à ragout, 0mm  (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6284, 19, "Tartinade type confiture, Double Fruit, légère, abricot" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6283, 19, "Tartinade type confiture, Double Fruit, Légère" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6282, 19, "Tartinade type confiture, Double fruit, abricot" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6281, 19, "Tartinade type confiture, Double Fruit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6280, 11, "Brocoli, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6279, 11, "Brocoli, tiges, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6278, 11, "Brocoli, fleurettes, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6276, 8, "Céréale, chaude, gruau, gros flocons, grain entier, sèche, Cream Hill Estates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6275, 20, "Grains céréaliers, farine d'avoine, grains entiers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6268, 11, "Agave, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6267, 11, "Agave, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6266, 11, "Agave, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6242, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, régulier, 2 galettes, avec condiments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501547, 25, "Grignotises, croustilles de soya, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6122, 10, "Porc, haché, mi-maigre, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6120, 10, "Porc, haché, maigre, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5936, 11, "Saule réticulé, autochtone, feuilles, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5935, 5, "Tétras du Canada, autochtone, viande, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5934, 5, "Tétras du Canada, autochtone, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5933, 5, "Lagopède, autochtone, viande, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5932, 5, "Lagopède, autochtone, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5931, 5, "Canard sauvage, autochtone, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5930, 5, "Bernache du canada (outarde), autochtone, viande et peau, déshydratée, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5929, 5, "Bernache du canada (outarde), autochtone, viande, fumée, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5937, 11, "Rumex petite-oseille, autochtone, feuilles, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5928, 15, "Poisson, saumon, autochtone, oeufs, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5926, 15, "Poisson, corégone de lac, autochtone, tête, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5925, 15, "Poisson, corégone de lac, autochtone, oeufs, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5924, 15, "Poisson, corégone de lac, autochtone, fumées, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5923, 15, "Poisson, corégone de lac, autochtone, fumé, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5922, 15, "Poisson, cisco (hareng de lac), autochtone, cuit au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5921, 15, "Poisson, cisco (hareng de lac), autochtone, fumé, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5920, 16, "Vermicelle de soya, cuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5919, 15, "Poisson, chabot, autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5927, 15, "Poisson, corégone de lac, autochtone, oesophage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5918, 16, "Lentilles, roses, bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5938, 9, "Camarine noire, autochtone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5940, 15, "Concombre de mer (holothurie), autochtone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5965, 15, "Poisson, saumon, rose, conserve, chair avec arêtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5963, 14, "Boisson pour sportifs, saveur citron et lime, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5962, 14, "Boisson pour sportifs, saveur fruits, prête-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5961, 14, "Boisson pour sportifs, saveur orange, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5960, 11, "Oignon, jaune, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5959, 11, "Champignon, shiitake, sauté, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5958, 11, "Champignon, sauté, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5957, 11, "Champignon, portobella (portobello), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5939, 9, "Chicouté, autochtone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5956, 9, "Clémentine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5952, 13, "Boeuf, épaule, bifteck de palette, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5950, 13, "Boeuf, épaule, bifteck de palette, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5949, 13, "Boeuf, épaule, rôti de palette, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5948, 13, "Boeuf, épaule, rôti de palette, désossé, maigre et gras, 3mm (1/8'') paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5946, 13, "Boeuf, épaule, rôti de palette, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5945, 13, "Boeuf, épaule, rôti de palette, désossé, maigre et gras, 3mm (1/8'') paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5944, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5943, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5955, 13, "Boeuf, épaule, bifteck de palette, avec os, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5917, 20, "Grains céréaliers, quinoa, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5916, 20, "Grains céréaliers, tapioca, perlé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5915, 15, "Poisson, lotte (loche), autochtone, tête, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5891, 4, "Gras animal, autochtone, phoque barbu, huile (oogruk)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5890, 17, "Gibier, viande, autochtone, phoque barbu, (oogruk), déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5889, 11, "Sinfoin alpin, racines, autochtone, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5888, 15, "Poisson, morue-lingue, autochtone, foie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5887, 15, "Poisson, hareng, autochtone, pacifique, déshydraté, dans l`huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5886, 15, "Poisson, hareng, autochtone, oeufs, pacifique, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5885, 15, "Poisson, hareng, autochtone, oeufs, pacifique, déshydratés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5884, 15, "Poisson, oeufs de hareng, sur algue géante, autochtone, pacifique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5892, 15, "Poisson, oopah (tunicata), autochtone, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5883, 11, "Épilobe à feuilles étroites, autochtone, feuilles tendres, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5881, 15, "Chiton, \"leathery, gumboots\", autochtone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5879, 15, "Poisson, bar noir (mérou noir), autochtone, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5877, 17, "Gibier, viande, autochtone, béluga, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5876, 17, "Gibier, viande, autochtone, béluga, nageoire, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5875, 17, "Gibier, viande, autochtone, béluga, yeux, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5874, 15, "Ascidies, autochtone (tunughnak)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5873, 17, "Gibier, viande, autoch, agutuk, viande de caribou (crème glacée alaskienne)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5872, 15, "Agutuk, autochtone, poisson avec shortening (Crème glacée alaskienne)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3856, 18, "Pâte feuilletée, congelée, prête-à-cuire, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5893, 17, "Gibier, viande, autochtone, hibou strié, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5894, 15, "Poisson, grand brochet, autochtone, foie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5895, 15, "Poisson, saumon, autochtone, tipnuk, fermenté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5914, 15, "Poisson, lotte (loche), autochtone, peau, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5913, 15, "Poisson, lotte (loche), autochtone, peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5912, 15, "Poisson, lotte (loche), autochtone, foie, cuit au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5911, 22, "Tamale (Navajo)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5910, 18, "Pain, frit (\"fry bread\") avec saindoux, (Navajo)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5909, 11, "Feuilles de saule, autochtone, tendres, hachées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5908, 11, "Feuilles de saule, autochtone, dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5907, 4, "Animal fat, autochtone, baleine boréale, huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5906, 17, "Gibier, viande, autochtone, baleine boréale, muktuk" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5905, 17, "Gibier, viande, autochtone, baleine boréale, lard" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5904, 4, "Gras animal, autochtone, morse, huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5903, 17, "Gibier, viande, autochtone, morse, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5902, 17, "Gibier, viande, autochtone, cerf de Sitka (venaison), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5901, 17, "Gibier, viande, autochtone, morse, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5900, 11, "Rumex petite-oseille, autochtone, feuilles tendres" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5899, 15, "Poisson, saumon, autochtone, royal ou quinnat, foie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5898, 15, "Poisson, saumon, autochtone, royal ou quinnat, fumé, saumuré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5897, 15, "Poisson, saumon, autochtone, royal ou quinnat, fumé, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5896, 15, "Poisson, saumon, autochtone, royal ou quinnat, légèrement salé et fumé, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5966, 15, "Poisson, tilapia, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6121, 10, "Porc, haché, mi-maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5967, 15, "Poisson, tilapia, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5969, 18, "Gaufre, babeurre, congelée, prête-à-chauffer" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6081, 13, "Boeuf, côte, rôti de côte avec os, maigre et gras, 3mm (1/8\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6079, 13, "Boeuf, côte, rôti de côte avec os, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6078, 13, "Boeuf, côte, rôti de côte avec os, maigre et gras, 3mm (1/8 \") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6071, 13, "Boeuf, côte, bifteck de faux-filet, désossé, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6069, 13, "Boeuf, côte, bifteck de faux-filet, désossé, maigre et gras, 0mm (0\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6068, 13, "Boeuf, côte, bifteck de faux-filet, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6066, 13, "Boeuf, côte, bifteck de faux-filet, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6065, 13, "Boeuf, côte, rôti de faux-filet, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6082, 13, "Boeuf, côte, rôti de côte avec os, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6064, 13, "Boeuf, côte, rôti de faux-filet, désossé, maigre et gras, 3mm (1/8\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6061, 13, "Boeuf, côte, rôti de faux-filet, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6050, 13, "Boeuf, cuisse, ronde, bifteck d'extérieur, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6049, 13, "Boeuf, cuisse, ronde, bifteck d'extérieur, désossé, maigre et gras, 3mm (1/8\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6048, 13, "Boeuf, cuisse, ronde, bifteck d'extérieur, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6046, 13, "Boeuf, cuisse, ronde, bifteck d'extérieur, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6045, 13, "Boeuf, cuisse, ronde, bifteck d'extérieur, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6044, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6043, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre et gras, 3mm (1/8\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6062, 13, "Boeuf, côte, rôti de faux-filet, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6042, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre et gras, 0mm (0\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6089, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6091, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6119, 10, "Porc, haché, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6118, 13, "Boeuf, longe, bifteck d'aloyau (gros filet), maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6117, 13, "Boeuf, longe, bifteck d'aloyau (gros filet), maigre et gras, 3mm (1/8\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6115, 13, "Boeuf, longe, bifteck d'aloyau (gros filet), maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6114, 13, "Boeuf, longe, bifteck d'aloyau (gros filet), maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6112, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6111, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre et gras, 3mm (1/8\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6110, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre et gras, 0mm (0\") paré, cuit, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6090, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6109, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6107, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6105, 13, "Boeuf, longe, rôti de contre-filet, désossé, maigre et gras, 3mm (1/8\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6102, 13, "Boeuf, longe, rôti de contre-filet, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6098, 13, "Boeuf, cuisse, bifteck de pointe de surlonge, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6095, 13, "Boeuf, cuisse, bifteck de pointe de surlonge, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6094, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6093, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre et gras, 3mm (1/8\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6092, 13, "Boeuf, cuisse, rôti de pointe de surlonge, désossé, maigre et gras, 0mm (0\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6108, 13, "Boeuf, longe, bifteck de contre-filet, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6041, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6040, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6039, 13, "Boeuf, cuisse, ronde, rôti d'extérieur, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5993, 13, "Boeuf, cuisse, rôti de noix de ronde, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5991, 13, "Boeuf, cuisse, rôti de noix de ronde, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5990, 13, "Boeuf, épaule, bifteck de côtes croisées, désossé, maigre, cuit, braised" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5989, 13, "Boeuf, épaule, bifteck de côtes croisées, désossé, maigre et gras, 3mm (1/8\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5984, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5983, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre et gras, 3mm (1/8\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5982, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5981, 13, "Boeuf, épaule, rôti de côtes croisées, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5994, 13, "Boeuf, cuisse, rôti de noix de ronde, désossé, maigre et gras, 0mm (0\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5980, 19, "Confiseries, sucre, fructose, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5978, 19, "Confiseries, sucre, fructose, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5977, 19, "Édulcorant, saccharine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5975, 19, "Édulcorant, sucralose, SPLENDA" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5974, 19, "Édulcorant, aspartame, EQUAL" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5973, 18, "Crêpe, nature, (avec babeurre), congelée, prête-à-chauffer, cuite au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5972, 18, "Gaufre, nature, congelée, prête-à-cuire, cuite au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5971, 18, "Gaufre, babeurre, congelée, prête-à-chauffer, cuite au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5970, 18, "Gaufre, babeurre, congelée, prête-à-chauffer, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5979, 19, "Dessert, congelé, crème glacée, enrobage de chocolat ou caramel, avec noix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5996, 13, "Boeuf, cuisse, rôti de noix de ronde, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5997, 13, "Boeuf, cuisse, bifteck de noix de ronde, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5999, 13, "Boeuf, cuisse, bifteck de noix de ronde, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6038, 1, "Fromage cheddar, teneur réduite en gras (18%)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6037, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6036, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre et gras, 3mm (1/8\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6035, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6034, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6033, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre et gras, 3mm (1/8\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6032, 13, "Boeuf, cuisse, ronde, bifteck d'intérieur, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6031, 13, "Boeuf, cuisse, ronde, rôti d'intérieur, désossé, maigre, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6029, 13, "Boeuf, cuisse, ronde, rôti d'intérieur, désossé, maigre et gras, 0mm (0\") paré, cuit, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6028, 13, "Boeuf, cuisse, ronde, rôti d'intérieur, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6026, 13, "Boeuf, cuisse, ronde, rôti d'intérieur, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6025, 13, "Boeuf, flanc, bifteck de flanc, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6023, 13, "Boeuf, flanc, bifteck de flanc, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6022, 13, "Boeuf, flanc, bifteck de flanc, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6020, 13, "Boeuf, flanc, bifteck de flanc, désossé, maigre et gras, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6019, 13, "Boeuf, gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6018, 13, "Boeuf, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6002, 13, "Boeuf, cuisse, bifteck de noix de ronde, désossé, maigre, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6000, 13, "Boeuf, cuisse, bifteck de noix de ronde, désossé, maigre et gras, 0mm (0\") paré, cuit, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5968, 16, "Hambourgeois végétarien / soya, galette, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5870, 22, "Lasagne avec viande et sauce, congelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501548, 11, "Massette, pousses de feuilles étroites, autochotone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501551, 1, "Lait, liquide, chèvre, non enrichi, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501841, 11, "Artichaut, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501840, 11, "Crosses de fougères (têtes de violon), congelées, bouillies, drainées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501839, 11, "Laitue, mélange mesclun" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501838, 11, "Pomme de terre, purée, préparée à partir de flocons sans lait, lait 2% et margarine ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501837, 11, "Pomme de terre, en escalopes, mélange sec, préparé avec eau, lait 2% et margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501836, 11, "Légumes, brocoli et chou-fleur, congelé, bouilli, drainé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501835, 11, "Légumes, mélange asiatique, congelés, bouillis, drainés (brocoli, haricots verts, maïs miniature, pois mange-tout, poivron rouge)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501834, 18, "Muffin, son de blé, avec raisins secs, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501842, 18, "Pouding au pain, avec raisins secs, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501833, 18, "Muffin, son de blé, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501831, 18, "Crêpe, sarrazin, mélange sec imcomplet, préparé (avec oeuf, huile et lait)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501830, 18, "Dumpling, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501829, 18, "Indien, pain naan" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501828, 1, "Oeuf, poule, blanc, frais ou congelé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501827, 18, "Barre granola, tendre, salée et sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501826, 18, "Barre granola, tendre, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501825, 18, "Barre granola, tendre, fruits et/ou noix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501824, 18, "Barre granola, tendre, grains de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501832, 18, "Muffin, bleuets, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501823, 18, "Barre granola, tendre, enrobée de chocolat, toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501843, 18, "Tarte au sucre, 1 croûte, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501845, 18, "Gâteau, jaune (avec streusel), type pouding, mélange sec préparé, avec glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501865, 20, "Grains céréaliers, farine de blé, blanche, tout usage, non blanchie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501864, 19, "Dessert, pouding, toutes saveurs sauf chocolat, instantané, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501863, 1, "Garniture à dessert (non laitière), poudre, préparée avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501862, 1, "Crème à fouetter, 35% M.G. sucrée, fouettée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501861, 9, "Fruits tropicaux, salade (ananas, papaye rouge et jaune), conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501859, 14, "Chocolat chaud, mélange sec, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501858, 14, "Déjeuner instantané, poudre, chocolat, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501857, 14, "Déjeuner instantané, poudre, préparé avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501844, 18, "Tartelette au beurre, avec raisins secs, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501855, 18, "Muffin, grains de chocolat, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501853, 18, "Biscuit, sablé, nature, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501852, 18, "Gâteau, carottes, fait maison, avec glaçage au fromage à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501851, 18, "Gâteau au fromage, nature, avec garniture aux cerises, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501850, 18, "Gâteau, chocolat, type pouding, mélange sec, préparé, avec glaçage au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501849, 18, "Gâteau, chocolat, fait maison, avec glaçage au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501848, 18, "Gâteau, pain d'épices, mélange sec, préparé, sans glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501847, 18, "Gâteau quatre-quarts, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501846, 18, "Gâteau, blanc, type pouding, mélange sec, préparé, avec glaçage au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501854, 18, "Muffin, carottes, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501822, 18, "Barre granola, tendre, saveurs de fruits, enrobée de yogourt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501821, 18, "Barre granola/céréales, Gruau sur le pouce, toutes saveurs, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501820, 18, "Barre granola, croquante, fruits et/ou noix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501795, 11, "Taro, feuilles, cuites à la vapeur, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501794, 11, "Taro, cuit, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501793, 19, "Chocolat, sirop, consistance claire, réduit en Calories" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501792, 18, "Brioche, cannelle, pâte réfrigérée, avec glaçage, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501791, 11, "Patate douce, congelée, cuite au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501790, 11, "Patate douce, bouillie sans la pelure, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501789, 11, "Patate douce, cuite au four, pelée après la cuisson, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501788, 11, "Patate douce, feuilles, cuites à la vapeur, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501796, 11, "Taro, pousses, cuites, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501787, 11, "Patate aquatique, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501785, 11, "Succotash, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501784, 17, "Ragoût ou soupe, caribou" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501783, 17, "Ragoût, orignal" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501782, 11, "Courge d'hiver, spaghetti, au four ou bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501781, 11, "Doliques asperge, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501780, 11, "Courge d'hiver, hubbard, bouillie, en purée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501779, 11, "Courge d'hiver, hubbard, cuite au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501778, 11, "Courge d'hiver, courge musquée, congelée, bouillie, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501786, 11, "Succotash, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501797, 11, "Taro, Tahiti, cuit, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501798, 14, "Thé, toundra, herbes et labrador" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501799, 16, "Tofu, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501819, 18, "Barre granola, croquante, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501818, 18, "Barre granola/céréales, farcie aux fruits, toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501817, 18, "Barres muffin, toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501816, 18, "Barre granola, All Bran, barres et bouchées collation, toutes saveurs, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501815, 11, "Légumes, macédoine, congelée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501814, 20, "Blé, gluten de blé vital" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501813, 11, "Waxgourd (melon d'eau chinois), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501812, 11, "Pois carrés, verts, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501811, 11, "Igname, bouillie, égouttée ou au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501810, 11, "Doliques bulbeux, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501809, 17, "Veau, cuisse (ronde), maigre, sauté, non pané" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501808, 11, "Navet, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501807, 11, "Navet, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501806, 11, "Navet, feuilles, congelées, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501805, 11, "Navet, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501803, 22, "Pâté à la dinde, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501802, 11, "Produits à base de tomates, conserve, purée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501801, 11, "Produits à base de tomates, conserve, pâte, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501800, 16, "Tofu, frit (préparé avec calcium sulfate)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501866, 20, "Restaurant chinois, nouilles, croquantes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501777, 11, "Courge d'hiver, courge musquée, cuite au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501868, 5, "Poulet à griller, dos, viande, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501870, 5, "Poulet à griller, pilon, viande, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501946, 1, "Oeuf, poule, omelette, avec fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501945, 1, "Oeuf, poule, omelette espagnole, avec oignon, poivrons verts, tomates et champignons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501944, 1, "Oeuf, poule, omelette de l'Ouest (''Western''), avec poivrons verts, oignons et jambon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501943, 15, "Poisson, morue de l'atlantique, déshydratée et salée, trempée dans l'eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501942, 15, "Mollusques, calmar, espèces diverses, panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501936, 15, "Poisson, beignet (fricadelle)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501935, 15, "Poisson, en pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501934, 7, "Cretons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501947, 1, "Oeuf à la bénédictine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501933, 14, "Sangria" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501931, 14, "Cooler à la vodka, saveurs de fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501930, 14, "Café au lait, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501929, 14, "Thé chaï, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501926, 8, "Céréale, prête-à-manger, Life, cannelle, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501925, 8, "Céréale, prête-à-manger, Squares: à l'avoine, érable et cassonnade, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501924, 8, "Céréale, chaude, avoine (gruau), poids contrôle, canelle, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501923, 8, "Céréale, chaude, avoine (gruau), poids contrôle, canelle, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501922, 8, "Céréale, chaude, avoine (gruau), poids contrôle, érable et cassonade, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501932, 14, "Acoolisé, cocktail, margarita" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501918, 8, "Céréale, chaude, avoine (gruau), poids contrôle, érable et cassonade, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501948, 1, "Oeuf, poule, jaune, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501950, 14, "Boisson à base de plantes, soya, enrichie, toutes saveurs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501971, 22, "Salade de pâtes avec légumes, préparée avec vinaigrette italienne, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501970, 22, "Lasagne végétarienne, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501969, 22, "Lasagne avec sauce à la viande, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501968, 22, "Salade césar, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501967, 22, "Salade de taco avec salsa, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501966, 22, "Salade césar avec poulet, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501965, 22, "Salade grecque, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501964, 22, "Salade jardinière, avec vinaigrette italienne, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501949, 1, "Oeuf, succédané, congelé (jaune remplacé), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501963, 6, "Soupe, oignon, faite maison (avec pain et fromage)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501961, 6, "Soupe, potage aux légumes, préparé avec lait 2% M.G., faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501960, 6, "Soupe aux légumes, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501959, 6, "Soupe, pois cassés avec jambon, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501958, 6, "Soupe, lentilles, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501956, 18, "Barre granola, tendre, saveurs de fruits, protéines de soya ajoutées, enrobée de yogourt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501954, 8, "Céréale, prête-à-manger, biologique, granola croquante, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501952, 8, "Céréale, prête-à-manger, Morning Crisp: érable et pacanes, Jordans" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501951, 19, "Dessert, pouding au riz, avec raisins secs, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501962, 6, "Soupe, poulet et nouilles, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501917, 8, "Céréale, chaude, avoine (gruau), instantanée: réduite en sucre: cassonnade et cannelle, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501916, 8, "Céréale, chaude, avoine (gruau), instantanée: réduite en sucre, cassonnade et cannelle, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501915, 8, "Céréale, chaude, avoine (gruau), instantanée: réduite en sucre, pommes et cannelle, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501890, 16, "Colorant à café (non laitier), liquide, soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501889, 14, "Boisson à base de plantes, soya, enrichie, avec acides gras oméga-3 ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501888, 16, "Haricots, sautés (frigoles refrits), conserve, végétarien" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501887, 11, "Maïs sucré, jaune, congelé, en grains, cuit au four micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501886, 11, "Haricots italiens, jaunes ou verts, congelés, cuits au four micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501885, 9, "Jus, pommes et raisins, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501884, 9, "Jus de grenade, prêt-à-boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501883, 9, "Raisin, jus, conserve ou bouteille, sans sucre ajouté, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501891, 18, "Croûte de tarte, type biscuit, graham, prête à servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501882, 9, "Bleuet sauvage, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501878, 5, "Poulet à griller, aile, viande et peau, cuites, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501877, 5, "Poulet à griller, cuisse, viande et peau, cuites, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501876, 5, "Poulet à griller, pilon, viande et peau, cuites, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501875, 5, "Poulet à griller, poitrine, viande et peau, cuites, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501874, 5, "Poulet à griller, dos, viande et peau, cuites, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501873, 5, "Poulet à griller, aile, viande, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501872, 5, "Poulet à griller, cuisse, viande, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501871, 5, "Poulet à griller, peau, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501879, 8, "Céréale, prête-à-manger, miel, amandes et graines de lin, Kashi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501892, 18, "Croûte de tarte, type biscuit, chocolat, prête à servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501893, 19, "Bonbons, chocolat noir, 45-59% solides de cacao" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501894, 19, "Bonbons, chocolat noir, 60-69% solides de cacao" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501914, 8, "Céréale, chaude, avoine (gruau), instantanée: réduite en sucre, pommes et cannelle, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501913, 17, "Gibier, viande, otarie de Steller, gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501912, 17, "Gibier, viande, otarie de Steller, viande et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501911, 17, "Gibier, viande, otarie de Steller, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501910, 17, "Gibier, viande, otarie de Steller, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501909, 17, "Gibier, viande, otarie de Steller, rein, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501908, 17, "Gibier, viande, otarie de Steller, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501906, 6, "Soupe, wonton (won ton), préparée au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501905, 6, "Mets chinois, soupe, aigre-piquante, préparée au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501904, 6, "Mets chinois, soupe aux oeufs (potage aux oeufs), préparée au restaurant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501903, 25, "Grignotises, croustilles, tortilla, nature, maïs jaune" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501902, 25, "Grignotises, croustilles de plantain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501901, 25, "Grignotises, SUNCHIPS, saveur de fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501900, 25, "Grignotises, SUNCHIPS, saveur d'oignon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501899, 20, "Grains céréaliers, farine de maïs, bleue, grains entiers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501898, 20, "Grains céréaliers, riz, blanc, cuit à la vapeur, restaurant chinois" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501897, 20, "Grains céréaliers, amarante, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501896, 19, "Bonbons, chocolat noir, non spécifié" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501895, 19, "Bonbons, chocolat noir, 70-85% solides de cacao" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501869, 5, "Poulet à griller, poitrine, viande, cuite, rôtisserie, avec assaisonnement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501549, 9, "Églantier, fruits, autochtone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501776, 11, "Courge d'hiver, toutes variétés, cuites au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501774, 11, "Courge d'été, courgette (zucchini), congelée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501636, 11, "Pissenlit, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501635, 11, "Cresson alénois, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501634, 9, "Canneberge (airelle), sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501633, 11, "Doliques à oeil noir, jeunes cosses et graines, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501632, 11, "Doliques à oeil noir, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501630, 11, "Doliques à oeil noir, grains immatures, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501629, 11, "Maïs sucré, conserve, emballage sous vide, grains entiers, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501628, 11, "Maïs sucré, conserve, saumure, solides et liquide, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501637, 11, "Oseille, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501627, 11, "Maïs sucré, conserve, en crème, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501625, 11, "Maïs, sucré, blanc, avec ou sans épi, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501624, 11, "Maïs, sucré, blanc, avec ou sans épi, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501623, 11, "Chou cavalier (collards), congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501622, 15, "Mollusques, coque, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501621, 11, "Chrysanthème des jardins, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501620, 11, "Céleri-rave, bouilli, égoutté, with salt" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501619, 11, "Chou-fleur, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501618, 11, "Chou-fleur, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501626, 11, "Maïs, sucré, blanc, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501617, 11, "Carotte, conserve, solides et liquide, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501638, 1, "Oeuf, succédané, liquide, sans gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501640, 21, "Aliments prêts à manger, sandwich de crêpes avec oeuf, fromage et bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501658, 9, "Pamplemousse rose, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501657, 11, "Calebasse, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501656, 11, "Courge torchon (towelgourd), bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501655, 14, "Boisson, punch aux fruits, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501654, 14, "Boisson, punch aux fruits, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501653, 15, "Poisson, lotte (loche), cuite au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501652, 15, "Poisson, lotte (loche), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501651, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois, gros, 1 galette avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501639, 1, "Oeuf, succédané, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501650, 21, "Aliments prêts à manger, sandwichs et burgers, hambourgeois au fromage, gros, 1 galette, avec condiments et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501648, 21, "Aliments prêts à manger, pizza avec fromage et pepperoni, croûte épaisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501647, 21, "Aliments prêts à manger, pizza avec fromage et pepperoni, croûte régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501646, 21, "Aliments prêts à manger, pizza avec fromage et légumes, croûte régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501645, 21, "Aliments prêts à manger, pizza avec fromage, croûte mince" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501644, 21, "Aliments prêts à manger, pizza avec fromage, croûte épaisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501643, 21, "Aliments prêts à manger, pizza avec fromage, croûte régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501642, 11, "Aubergine, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501641, 21, "Aliments prêts à manger, sandwich de crêpes avec oeuf, fromage et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501649, 21, "Aliments prêts à manger, carré au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501616, 11, "Carotte, conserve, solides égouttés, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501615, 11, "Carotte, congelée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501614, 11, "Carotte, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501589, 11, "Haricots, pinto, secs, germés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501588, 11, "Haricots, pinto, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501587, 11, "Haricots, petits blancs, secs, germés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501586, 11, "Haricots communs, secs, germés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501585, 16, "Haricots, rouges, tous les types, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501584, 16, "Haricots, rouges, tous les types, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501583, 16, "Haricots, rouges, tous les types, bouillis, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501582, 11, "Bambou, pousses, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501590, 11, "Haricots italiens, jaunes ou verts, conserve, solides égouttés, non salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501581, 11, "Margose, fruits, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501579, 11, "Asperge, congelée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501578, 11, "Asperge, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501577, 11, "Asperge, conserve, solides et liquide, non salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501576, 11, "Artichaut, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501575, 11, "Sagitaire, bouillie, drainée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501574, 8, "Céréales, prêtes à manger, flocons d'amarante" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501553, 18, "Biscuit, beurre d'arachides, pâte réfrigérée, preparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501552, 18, "Biscuit, avoine, pâte réfrigérée, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501580, 11, "Margose, feuilles tendres, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501591, 11, "Haricots italiens, jaunes ou verts, conserve, solides et liquide, non salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501592, 22, "Pâté au boeuf, congelé, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501593, 13, "Boeuf, tripe, mijotée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501613, 11, "Cardon, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501612, 19, "Bonbons, tablettes, Twix, biscuits au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501611, 18, "Gâteau sablé, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501610, 11, "Chou de Milan (Savoie), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501609, 11, "Chou rouge, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501608, 11, "Pétasite commun, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501607, 11, "Bardane (glouteron), racine, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501606, 11, "Choux de Bruxelles, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501605, 11, "Choux de Bruxelles, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501604, 11, "Brocoli, congelé, haché, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501603, 11, "Gourganes (fèves des marais, fava), fraîches, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501602, 18, "Pain irlandais au bicarbonate de soude, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501601, 18, "Pain, semoule de maïs (aussi préparation pour muffin), mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501600, 11, "Bourrache, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501599, 9, "Bleuet sauvage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501597, 9, "Mûre sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501596, 18, "Biscuit, poudre à pâte, nature/babeurre, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501595, 11, "Betteraves, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501594, 11, "Betterave, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501660, 11, "Cassier (ben oléifère), feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501775, 11, "Courge d'hiver, courge poivrée (courgeon), bouillie, en purée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501661, 11, "Cassier (ben oléifère), gousses, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501663, 11, "Doliques d'Égypte, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501746, 11, "Citrouille, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501745, 11, "Pomme de terre, escaloppe (dauphinoise), faite maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501744, 11, "Pomme de terre, pelure, cuite au four à micro-ondes avec la pelure, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501743, 11, "Pomme de terre, chair et pelure, cuite au four à micro-ondes avec la pelure, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501742, 11, "Pomme de terre, chair, cuite au four à micro-ondes avec la pelure, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501741, 11, "Pomme de terre, purée, préparée à partir de flocons sans lait, lait entier et margarine ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501740, 11, "Pomme de terre, entière, congelée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501739, 11, "Pomme de terre, frite, congelée, partiellement frite, coupe cottage, réchauffée au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501747, 11, "Citrouille, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501738, 11, "Pomme de terre, frite, congelée, allumette, réchauffée au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501736, 11, "Pomme de terre, bouillie sans la pelure, chair, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501735, 11, "Pomme de terre, bouillie avec la pelure, pelure seulement, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501734, 11, "Pomme de terre, bouillie avec la pelure, chair, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501733, 11, "Pomme de terre, pelure, cuite au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501732, 11, "Pomme de terre, chair, cuite au four, avec sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501731, 11, "Pomme de terre, chair et pelure, cuite au four, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501730, 11, "Pomme de terre, au gratin, faite maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501709, 11, "Phytolaque d'Amérique, pousses, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501737, 11, "Pomme de terre, frite, congelée, allumette, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501708, 11, "Pois, cajan, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501748, 11, "Citrouille, fleurs, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501750, 11, "Radis, oriental (daikon), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501773, 3, "Zwieback" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501772, 11, "Courge d'été, courgette (zucchini), bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501771, 11, "Courge d'été, pâtisson, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501768, 11, "Courge d'été, toutes variétés, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501767, 11, "Épinard, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501766, 11, "Épinard, bouillis, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501765, 11, "Fèves, soya, sèches, germées, germes de haricot, sautées, sel ajouté, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501764, 11, "Fèves, soya frais (edamame), bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501749, 11, "Pourpier, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501763, 6, "Soupe, bouillon, poulet, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501760, 12, "Graines, sésame, graines, grillées, décortiquées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501759, 21, "Aliments prêts à manger, sandwich de crêpes avec oeuf et saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501758, 11, "Salsifis, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501756, 4, "Vinaigrette, aigre-douce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501755, 4, "Vinaigrette, graines de sésame, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501754, 4, "Vinaigrette, mayonnaise, imitation, soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501752, 11, "Rutabaga (chou-navet), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501751, 9, "Framboise sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501761, 11, "Fagotier, fleurs, cuites à la vapeur, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501707, 18, "Croûte de tarte, type ordinaire, mélange sec, préparé, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501706, 11, "Poivron rouge, congelé, haché, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501705, 11, "Poivron rouge, congelé, haché, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501681, 11, "Moutarde joncée, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501680, 11, "Moutarde, feuilles, congelées, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501679, 11, "Moutarde, feuilles, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501678, 11, "Champignon, cuit au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501677, 11, "Champignon, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501676, 11, "Haricots, mungo, secs, germés, germes de haricot, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501675, 8, "Céréale, millet, soufflé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501674, 11, "Lotus, racine, bouillie, égouttée, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501682, 11, "Épinards de la Nouvelle-Zélande, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501673, 11, "Haricots, lima (fordhook), congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501671, 11, "Haricots, lima, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501670, 11, "Lentilles, germées, sautées, sel ajouté, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501669, 11, "Poireaux (bulbe et portion inférieure), bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501668, 11, "Chou gras (chenopode blanc), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501667, 11, "Chou-rave, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501666, 11, "Chou vert frisé, congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501665, 11, "Jute tossa, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501664, 11, "Chou vert frisé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501672, 11, "Haricots, lima, petits, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501683, 4, "Huile, enduit à cuisson en vaporisateur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501684, 11, "Okra (gombo), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501685, 11, "Okra (gombo), congelé, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501704, 11, "Poivron rouge, congelé, haché, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501703, 11, "Poivron rouge, lyophilisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501702, 11, "Poivron rouge, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501701, 11, "Poivron vert, congelé, haché, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501700, 11, "Pois, petits (verts), congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501699, 11, "Pois, petits (verts), bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501698, 11, "Pois, petits (verts), conserve, solides et liquide, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501697, 11, "Pois, petits (verts), conserve, solides égouttés, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501696, 11, "Pois mange-tout, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501695, 11, "Pois mange-tout, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501694, 11, "Pois et oignons, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501693, 11, "Pois et carottes, congelés, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501692, 11, "Panais, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501691, 18, "Crèpe, blé entier, mélange sec incomplet, préparé (avec oeuf, huile et lait)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501690, 18, "Crêpe, nature (incluant babeurre), mélange sec, incomplet, préparé avec oeuf, huile et lait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501689, 18, "Crêpe, nature (incluant babeurre), mélange sec, complet, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501688, 14, "Boisson au jus, orange" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501687, 11, "Oignon, congelé, entier, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501686, 11, "Oignon, congelé, haché, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 501662, 9, "Airelle myrtille, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3855, 18, "Biscuit, sandwich à la vanille, fourré à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3840, 18, "Biscuit, beurre d'arachides, pâte réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3853, 18, "Biscuit, sucre, fait maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1606, 9, "Melon, en boules, congelé (cantaloup et melon miel)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1605, 9, "Melon, miel (honeydew), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1604, 9, "Melon, casaba, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1603, 9, "Mangue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1602, 9, "Abricots de St-Dominique (des Antilles), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1601, 9, "Nèfle du japon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1600, 9, "Longan, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1599, 9, "Longan, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1610, 9, "Mûres blanche, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1598, 9, "Mûre de logan, congelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1596, 9, "Litchi, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1595, 9, "Lime, jus, conserve ou bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1594, 9, "Lime, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1593, 9, "Lime, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1592, 9, "Citron, zeste, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1591, 9, "Citron, jus, congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1590, 9, "Citron, jus, conserve ou bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1589, 9, "Citron, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1597, 9, "Litchi, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1587, 9, "Citron, cru, sans pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1611, 9, "Nectarine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1613, 9, "Olive, mûre, conserve, petite à extra large" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1633, 9, "Pêche, moitié ou tranchées, conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1632, 9, "Grenadille (passiflora laurifolia), jaune, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1631, 9, "Grenadille (fruit de la passion). jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1630, 9, "Grenadille (fruit de la passion), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1629, 9, "Papaye, nectar, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1628, 9, "Papaye, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1625, 9, "Tangerine (mandarine), jus, conserve, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1624, 9, "Tangerine (mandarine), jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1612, 9, "Oheloberry, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1623, 9, "Tangerine (mandarine), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1621, 9, "Orange, zeste, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1620, 9, "Orange, jus, réfrigéré, pouvant provenir de concentré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1619, 9, "Orange, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1618, 9, "Orange, avec pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1617, 9, "Orange, floride, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1616, 9, "Orange, californie, navel, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1615, 9, "Orange, californie, valence, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1614, 9, "Olive, mûre, conserve, jumbo à super colossale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1622, 9, "Orange et pamplemousse, jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1634, 9, "Pêche, moitié ou tranchées, conserve, dans du sirop extra léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1586, 9, "Kumquat, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1584, 9, "Jujube (datte chinoise), sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1561, 9, "Groseille à maquereau, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1560, 9, "Groseille à maquereau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1559, 9, "Fruits, salade (pêches, poires, abricots, ananas, cerises), conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1558, 9, "Fruits, salade (pêches, poires, abricots, ananas, cerises), conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1557, 9, "Fruits, salade (pêches, poires, abricots, ananas, cerises), conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1556, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1555, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1554, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1562, 9, "Pamplemousse, rose ou rouge, toutes régions, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1553, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du sirop extra léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1551, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1550, 9, "Figue, séchée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1549, 9, "Figue, séchée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1548, 9, "Figue, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1547, 9, "Figue, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1546, 9, "Figue, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1545, 9, "Figue, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1544, 9, "Sureau, baie, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1552, 9, "Fruits, cocktail (pêches, poires, abricots, ananas, cerises, raisins), conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1585, 9, "Kiwi, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1563, 9, "Pamplemousse rose ou rouge, californie ou arizona, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1565, 9, "Pamplemousse, blanc, californie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1583, 9, "Jujube (datte chinoise), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1582, 9, "Prune de java, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1581, 9, "Jaquier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1580, 9, "Goyave, sauce aux, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1579, 9, "Goyave, fraise, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1578, 9, "Goyave, ordinaire, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1577, 9, "Cerise de terre, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1576, 9, "Raisin, jus, conserve ou bouteille, sans vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1564, 9, "Pamplemousse, rose ou rouge, floride, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1575, 9, "Raisin, thompson sans pépins, conserve, sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1573, 9, "Raisin, type Nord-Américain, peau non-adhérente, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1572, 9, "Pamplemousse blanc, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1571, 9, "Pamplemousse, jus, concentré, congelé, non dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1570, 9, "Pamplemousse, jus, conserve, sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1569, 9, "Pamplemousse, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1568, 9, "Pamplemousse, conserve, conservé dans jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1567, 9, "Pamplemousse, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1566, 9, "Pamplemousse, blanc, floride, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1574, 9, "Raisin, thompson, sans pépins, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1635, 9, "Pêche, moitié ou tranchées, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1636, 9, "Pêche, moitié ou tranchées, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1637, 9, "Pêche, épicée, entière, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1701, 9, "Pomme, en purée, conserve, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1700, 9, "Pomme, purée, conserve, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1699, 9, "Pomme, conserve, sucrée, tranchée, non chauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1698, 9, "Pomme, crue, sans pelure, tranchée, cuite, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1697, 9, "Pomme, crue, sans pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1696, 9, "Pomme, crue, avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1694, 9, "Abricot, nectar, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1693, 9, "Poire, asiatique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1702, 9, "Abricot, déshydraté (faible en humidité), sulfuré, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1692, 9, "Feijoa, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1690, 9, "Fruits tropicaux, salade (ananas, papaye rouge et jaune), conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1689, 9, "Tamarin, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1688, 9, "Pomme cannelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1687, 9, "Fraise, congelée, sucrée, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1686, 9, "Fraise, congelée, sucrée, entière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1685, 9, "Fraise, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1684, 9, "Cachiman épineux, (corrossol épineux), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1683, 9, "Sapote, mamey, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1691, 9, "Melon d'eau (pasteque), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1682, 9, "Sapotille, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1703, 9, "Abricot, déshydraté (faible en humidité), sulfuré, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1705, 9, "Bleuet, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1723, 9, "Orange, jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1722, 9, "Orange, toutes variétés commerciales, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1721, 9, "Melon, cantaloup, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1720, 9, "Raisin, jus, concentré, congelé, sucre et vitamine C ajoutés, dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1719, 9, "Raisin, jus, concentré, congelé, sucre et vitamine C ajoutés, non dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1718, 9, "Raisin, rouge ou vert (Type Européen, comme Thompson sans graines), peau adhérente, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1717, 9, "Pamplemousse, jus, concentré, congelé, dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1716, 9, "Pamplemousse, jus, conserve, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1704, 9, "Banane, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1715, 9, "Pamplemousse, blanc, toutes régions, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1713, 9, "Fruits, salade (pêches, poires, abricots, ananas, cerises), conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1712, 9, "Fruits, salade (pêches, poires, abricots, ananas, cerises), conserve, jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1711, 9, "Figue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1710, 9, "Datte, domestique, naturelle et séchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1709, 9, "Groseille (gadelle), rouge et blanche, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1708, 9, "Cerise sucrée (guigne), conserve, dans du sirop léger" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1707, 9, "Cerise sure, rouge, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1706, 9, "Bleuet, congelé, non sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1714, 9, "Pamplemousse, rose, rouge ou blanc, toutes régions, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1681, 9, "Jambose (pommes de rose), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1680, 9, "Roselle, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1679, 9, "Rhubarbe, congelée, cuite, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1655, 9, "Kaki, plaquemine (diospyros virginiana), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1654, 9, "Kaki, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1653, 9, "Kaki (diospyros kaki), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1652, 9, "Poire, nectar, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1651, 9, "Poire, moitié, séchée, sulfurée, cuite, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1650, 9, "Poire, moitié, séchée, sulfurée, cuite, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1649, 9, "Poire, moitié, séchée, sulfurée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1648, 9, "Poire, moitié, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1656, 9, "Ananas, en morceaux, congelés, sucrés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1647, 9, "Poire, moitié, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1645, 9, "Poire, moitié, conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1644, 9, "Pêche, nectar, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1643, 9, "Pêche, congelée, tranchée, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1642, 9, "Pêche, moitié, séchée, sulfurée, cuite, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1641, 9, "Pêche, moitié, séchée, sulfurée, cuite, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1640, 9, "Pêche, moitié, séchée, sulfurée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1639, 9, "Pêche, déshydratée (faible en humidité), sulfurée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1638, 9, "Pêche, déshydratée (faible en humidité), sulfurée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1646, 9, "Poire, moitié, conserve, dans du sirop extra léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1657, 9, "Ananas, jus, conserve, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1658, 9, "Ananas, jus, concentré, congelé, non sucré, non dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1659, 9, "Ananas, jus, concentré, congelé, dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1678, 9, "Rhubarbe, congelée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1677, 9, "Framboise, congelée, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1676, 9, "Framboise, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1675, 9, "Coing, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1674, 9, "Pomélo, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1673, 9, "Pruneau, jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1672, 9, "Pruneau, séché, cuit, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1671, 9, "Pruneau, déshydraté (faible en humidité), cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1670, 9, "Pruneau, déshydraté (faible en humidité), non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1669, 9, "Pruneau, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1668, 9, "Figue de Barbarie, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1667, 9, "Grenade, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1666, 9, "Prune, pourpre, conserve, dans du sirop très épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1665, 9, "Prune, pourpre, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1664, 9, "Prune, pourpre, conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1663, 9, "Prune, pourpre, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1662, 9, "Plantain, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1661, 9, "Plantain (banane des antilles), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1660, 9, "Pitanga, (cerise de surinam), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1543, 9, "Anone reticulée, anone coeur de boeuf, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1542, 9, "Raisins de corinthe (zante), secs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1541, 9, "Cassis, noir européen, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1540, 9, "Canneberge et orange, relish, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1367, 8, "Céréale, prête-à-manger, avoine croquante, saveurs variées, (amandes, érable et noix, rasins sec, baies, amandes vanilles),  General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1360, 8, "Céréale, prête-à-manger, muesli: saveurs variées, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1353, 8, "Céréale, prête-à-manger, Muesli: Héritage, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1350, 8, "Céréale, prête-à-manger, muesli: bleuets et amandes, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1348, 8, "Céréale, prête-à-manger, Kashi: soufflée, Kashi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1344, 8, "Céréale, prête-à-manger, bouchées d'avoine au miel avec amandes, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1339, 8, "Céréale, prête-à-manger, Heritage O's, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1338, 8, "Céréale, prête-à-manger, Heritage Flakes, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1372, 8, "Céréale, prête-à-manger, Raisin Bran, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1337, 8, "Céréale, prête-à-manger, Croque Nature: raisins secs et amandes, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1335, 8, "Céréale, prête-à-manger, Croque Nature: original, faible en gras, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1334, 8, "Céréale, prête-à-manger, granola: avec amandes, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1333, 8, "Céréale, prête-à-manger, granola: avec raisins secs, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1332, 8, "Céréale, prête-à-manger, granola: pommes et cannelle, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1331, 8, "Céréale, prête-à-manger, croustillantes avec graines de citrouilles et raisins, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1328, 8, "Céréale, prête-à-manger, granola: framboises et amandes, légère, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1327, 8, "Céréale, prête-à-manger, granola: raisins érable, légère, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1326, 8, "Céréale, prête-à-manger, granola: bleuets, légère, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1336, 8, "Céréale, prête-à-manger, Croque Nature: raisins avec amandes, faible en gras, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1325, 8, "Céréale, prête-à-manger, Flax Plus: baie rouges croustillantes, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1374, 8, "Céréale, prête-à-manger, Plein de raisons secs: son et raisins secs, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1378, 8, "Céréale, prête-à-manger, Reese Puffs (Beurre d'arachide), General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1414, 8, "Céréale, chaude, avoine (gruau), instantanée: nature, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1413, 8, "Céréale, chaude, avoine (gruau), instantanée: nature, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1404, 8, "Céréale, chaude, crème de blé, instantanée: original, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1403, 8, "Céréale, chaude, crème de blé, instantanée: original, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1402, 8, "Céréale, chaude, 9 grain, préparée, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1401, 8, "Céréale, chaude, 9 grain, sèche, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1400, 8, "Céréale, chaude, crème de blé, rapide, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1399, 8, "Céréale, chaude, crème de blé, rapide, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1375, 8, "Céréale, prête-à-manger, flax plus: son de raisins, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1398, 8, "Céréale, chaude, crème de blé, nature, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1393, 8, "Céréale, prête-à-manger, Millet Rice (riz), Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1391, 8, "Céréale, prête-à-manger, Puffins: original, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1387, 8, "Céréale, prête-à-manger, avoine grillée en O, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1386, 8, "Céréale, prête-à-manger, O's grillés, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1383, 8, "Céréale, prête-à-manger, Smart Bran avec psyllium, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1382, 8, "Céréale, prête-à-manger, Shreddies, miel, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1381, 8, "Céréale, prête-à-manger, blé filamenté, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1380, 8, "Céréale, prête-à-manger, bouchées de blé filamenté, Barbara' Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1397, 8, "Céréale, chaude, crème de blé, nature, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1317, 8, "Céréale, prête-à-manger, fibre en premier: multison, Menu Bleu, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1314, 8, "Céréale, prête-à-manger, bouchées d'avoine au miel (grillées au miel), Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1305, 8, "Céréale, prête-à-manger, flocons de maïs au miel, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1259, 8, "Céréale, prête-à-manger, Lucky Charms, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1258, 8, "Céréale, prête-à-manger, Life, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1257, 8, "Céréale, prête-à-manger, Honeycomb, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1256, 8, "Céréale, prête-à-manger, cheerios, miel et noix, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1253, 8, "Céréale, prête-à-manger, Grape-nuts, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1251, 8, "Céréale, prête-à-manger, Golden Grahams, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1249, 8, "Céréale, prête-à-manger, Weetabix, Weetabix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1248, 8, "Céréale, prête-à-manger, Froot Loops, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1260, 8, "Céréale, prête-à-manger, son de blé 100%, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1247, 8, "Céréale, prête-à-manger, Shreddies, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1242, 8, "Céréale, prête-à-manger, flocons de maïs, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1240, 8, "Céréale, prête-à-manger, Croque Nature: original, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1239, 8, "Céréale, prête-à-manger, Selects: dattes, raisins secs et pacanes croquantes, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1238, 8, "Céréale, prête-à-manger, Selects: bleuets sauvages et amandes croquantes, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1236, 8, "Céréale, prête-à-manger, Crispix, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1235, 8, "Céréale, prête-à-manger, Count Chocula, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1232, 8, "Céréale, prête-à-manger, 'All Bran' bran flakes, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1231, 8, "Céréale, prête-a-manger, Alpha-bits, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1244, 8, "Céréale, prête-à-manger, Muffets: blé filamenté, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1262, 8, "Céréale, prête-à-manger, Croc-en-cannelle, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1263, 8, "Céréale, prête-à-manger, Fibre 1, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1264, 8, "Céréale, prête-à-manger, Just Right, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1303, 8, "Céréale, prête-à-manger, flocons de maïs: sucrés au jus de fruits, Nature's Path" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1301, 8, "Céréale, prête-à-manger, flocons de maïs, Choix du Président" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1300, 8, "Céréale, prête-à-manger, flocons de maïs, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1295, 8, "Céréale, prête-à-manger, cheerios: multigrains, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1293, 8, "Céréale, prête-à-manger, cheerios: pommes cannelle, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1292, 8, "Céréale, prête-à-manger, riz brun soufflé, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1291, 8, "Céréale, prête-à-manger, O à déjeuner, Barbara's Bakery" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1280, 8, "Céréale, prête-à-manger, bouchées de blé filalmenté, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1279, 8, "Céréale, prête-à-manger, blé filamenté, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1278, 8, "Céréale, prête-à-manger, blé soufflé, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1276, 8, "Céréale, prête-à-manger, bouchées blé filamenté et son, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1275, 8, "Céréale, prête-à-manger, Croque Avoine, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1271, 8, "Céréale, prête-à-manger, Life Multigrains, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1270, 8, "Céréale, prête-à-manger, Sugar Crisp, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1269, 8, "Céréale, prête-à-manger, Frosted Flakes, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1268, 8, "Céréale, prête-à-manger, Corn Pops, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1267, 8, "Céréale, prête-à-manger, Spécial K, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1266, 8, "Céréale, prête-à-manger, riz soufflé, non-sucré, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1265, 8, "Céréale, prête-à-manger, Rice Krispies, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1415, 8, "Céréale, chaude, avoine (gruau), instantanée: pommes et cannelle, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1724, 9, "Orange, jus, concentré, congelé, non dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1416, 8, "Céréale, chaude, avoine (gruau), instantanée: pommes et cannelle, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1420, 8, "Céréale, chaude, avoine (gruau), instantanée: cannelle et épices, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1517, 9, "Mûre, congélée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1516, 9, "Mûre, conserve, sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1515, 9, "Mûre, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1514, 9, "Banane, déshydratée ou en poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1513, 9, "Avocat, cru, Floride" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1512, 9, "Avocat, cru, californie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1511, 9, "Avocat, cru, toutes variétés commerciales" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1510, 9, "Abricot, congélé, sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1518, 9, "Bleuet, conserve, sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1509, 9, "Abricot, séché, sulfuré, cuit, sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1507, 9, "Abricot, séché, sulfuré, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1506, 9, "Abricot, entier pelé, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1505, 9, "Abricot, entier pelé, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1504, 9, "Abricot, moitié avec pelure, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1503, 9, "Abricot, moitié avec pelure, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1502, 9, "Abricot, moitié avec pelure, conserve, dans du sirop extra léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1501, 9, "Abricot, moitié avec pelure, conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1500, 9, "Abricot, entier, pelé, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1508, 9, "Abricot, séché, sulfuré, cuit sans sucre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1499, 9, "Abricot, moitié avec pelure, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1519, 9, "Bleuet, congélé, sucré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1521, 9, "Mûre de boysen, congélée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1539, 9, "Sauce, canneberges, conserve, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1538, 9, "Canneberge, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1537, 9, "Pommette, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1536, 9, "Cerise sucrée (guigne), congélée, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1535, 9, "Cerise sucrée (guigne), conserve, dans du sirop extra épais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1534, 9, "Cerise sucrée (guigne), conserve, dans du sirop épais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1533, 9, "Cerise sucrée (guigne), conserve, conservé dans jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1532, 9, "Cerise sucrée (guigne), conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1520, 9, "Mûre de boysen, conserve, sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1531, 9, "Cerise sucrée (guigne), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1529, 9, "Cerise sure, rouge, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1528, 9, "Cerise sure, rouge, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1527, 9, "Cerise sure, rouge, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1526, 9, "Cerise sure, rouge, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1525, 9, "Chérimole, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1524, 9, "Carissa, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1523, 9, "Carambole (fruit étoile), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1522, 9, "Fruit à pain, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1530, 9, "Cerise sure, rouge, congélée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1498, 9, "Abricot, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1497, 9, "Pomme, jus, concentré, congélé, dilué, sans vitamine c ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1496, 9, "Pomme, jus, concentré, congélé, non dilué, sans vitamine C" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1465, 8, "Céréale, chaude, avoine (gruau), gros flocons, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1464, 8, "Céréale, chaude, avoine (gruau), gros flocons, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1463, 8, "Céréale, chaude, avoine (gruau), gros flocons, préparée, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1462, 8, "Céréale, chaude, avoine (gruau), gros flocons, sèche, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1444, 8, "Céréale, chaude, avoine (gruau), minute, préparée, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1443, 8, "Céréale, chaude, avoine (gruau), minute, sèche, Robin Hood" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1440, 8, "Céréale, chaude, avoine (gruau), rapide, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1439, 8, "Céréale, chaude, avoine (gruau), rapide, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1466, 8, "Céréale, chaude, crème de blé, instantanée: cassonade et érable, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1438, 8, "Céréale, chaude, avoine (gruau), une minute, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1436, 8, "Céréale, chaude, avoine (gruau), instantanée: pêches et crème, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1435, 8, "Céréale, chaude, avoine (gruau), instantanée: pêches et crème, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1432, 8, "Céréale, chaude, avoine (gruau), son de blé, son d'avoine et graines de lin ajoutés, préparée, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1431, 8, "Céréale, chaude, avoine (gruau), son de blé, son d'avoine, et graines de lin ajoutés, sèche, Rogers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1424, 8, "Céréale, chaude, avoine (gruau), instantanée: raisins secs et épices, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1423, 8, "Céréale, chaude, avoine (gruau), instantanée: raisins et épices, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1422, 8, "Céréale, chaude, avoine (gruau), instantanée: érable et cassonade, préparée, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1421, 8, "Céréale, chaude, avoine (gruau), instantanée: érable et cassonade, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1437, 8, "Céréale, chaude, avoine (gruau), une minute, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1467, 8, "Céréale, chaude, crème de blé, instantanée: cassonade et érable, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1470, 8, "Céréale, chaude, crème de blé, instantanée: pomme et cannelle, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1471, 8, "Céréale, chaude, crème de blé, instantanée: pomme et cannelle, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1495, 9, "Pomme, jus, conserve ou bouteille, sans vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1494, 9, "Pomme, congelée, tranchée, non sucrée, chauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1493, 9, "Pomme, congelée, tranchée, non sucrée, non chauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1492, 9, "Pomme, séchée, sulfurée, mijotée, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1491, 9, "Pomme, séchée, sulfurée, mijotée, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1490, 9, "Pomme, séchée, sulfurée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1489, 9, "Pomme, déshydratée (faible humidité), sulfurée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1488, 9, "Pomme, déshydratée (faible humidité), sulfurée, non cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1487, 9, "Pomme, conserve, sucrée, tranchée, chauffée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1486, 9, "Pomme, crue, sans pelure, tranchée, cuite au four à micro-ondes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1485, 9, "Azerole, jus, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1484, 9, "Azerole, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1479, 8, "Céréale, prête-à-manger, Raisin Bran, Post" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1478, 8, "Céréale, prête-à-manger, Mini-Wheats givrées (original, érable, cassonnade, fraise), Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1477, 8, "Céréale, prête-à-manger, son de maïs carrées, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1475, 8, "Céréale, prête-à-manger, Cheerios, General Mills" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1474, 8, "Céréale, prête-à-manger, Capitaine Crounche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1473, 8, "Céréale, prête-à-manger, All Bran Buds, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1472, 8, "Céréale, prête-à-manger, All Bran Original, Kellogg's" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1419, 8, "Céréale, chaude, avoine (gruau), instantanée: cannelle et épices, sèche, Quaker" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1725, 9, "Orange, jus, concentré, congelé, dilué" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1726, 9, "Tangerine (mandarine), conserve, dans du jus, solides et liquides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1727, 9, "Tangerine (mandarine), conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2018, 11, "Haricots italiens, verts ou jaunes, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2017, 11, "Haricots italiens, jaunes ou verts, conserve, assaisonés, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2016, 11, "Haricots italiens, jaunes ou verts, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2015, 11, "Haricots, shellie, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2014, 11, "Haricots, pinto, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2013, 11, "Haricots, pinto, grains immatures, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2012, 11, "Haricots, petits blancs, secs, germés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2011, 11, "Haricots, petits blancs, secs, germés, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2019, 11, "Haricots italiens, verts ou jaunes, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2010, 11, "Haricots, mungo, secs, germés, germes de haricot, sautés, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2008, 11, "Haricots, mungo, secs, germés, germes de haricot, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2007, 11, "Haricots, lima (fordhook), congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2006, 11, "Haricots, lima (fordhook), congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2005, 11, "Haricots, lima, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2004, 11, "Haricots, lima, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2003, 11, "Haricots, lima, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2002, 11, "Haricots communs, secs, germés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2001, 11, "Haricots communs, secs, germés, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2009, 11, "Haricots, mungo, secs, germés, germes de haricot, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2000, 11, "Bambou, pousses, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2020, 11, "Betteraves, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2022, 11, "Betterave, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2040, 11, "Chou de Chine (pe-tsai), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2039, 11, "Bok choy, pak-choi, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2038, 11, "Bok choy, pak-choi, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2037, 11, "Chou de Milan (Savoie), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2036, 11, "Chou de Milan (Savoie), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2035, 11, "Chou rouge, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2034, 11, "Chou rouge, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2033, 11, "Pétasite commun, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2021, 11, "Betterave, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2032, 11, "Pétasite commun, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2030, 11, "Bardane (glouteron), racine, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2029, 11, "Bardane (glouteron), racine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2028, 11, "Choux de Bruxelles, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2027, 11, "Choux de Bruxelles, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2026, 11, "Brocoli, congelé, tiges et têtes, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2025, 11, "Brocoli, congelé, tiges et têtes, non préparées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2024, 11, "Gourganes (fèves des marais, fava), fraîches, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2023, 11, "Gourganes (fèves des marais, fava), fraîches, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2031, 11, "Pétasite commun, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1999, 11, "Bambou, pousses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1998, 11, "Margose, fruits, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1997, 11, "Margose, fruits, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1969, 10, "Porc, longe, milieu, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1968, 10, "Porc, longe, milieu, désossé, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1967, 10, "Porc, longe, milieu, désossé, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1966, 10, "Porc, fesse, intérieur, désossé, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1965, 10, "Porc, fesse, intérieur, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1964, 10, "Porc, fesse, intérieur, désossé, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1963, 10, "Porc, fesse, intérieur, désossé, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1962, 10, "Porc, longe, filet, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1970, 10, "Porc, longe, milieu, désossé, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1961, 10, "Porc, longe, filet, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1943, 10, "Porc, longe, filet, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1942, 7, "Jambon, extra maigre, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1941, 10, "Porc, salé, jambon, épaule, soc roulé (toupie), maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1940, 10, "Porc, salé, épaule, jambon, soc roulé (toupie), maigre et gras, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1939, 10, "Porc, salé, jambon entier, maigre, avec os, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1938, 10, "Porc, salé, jambon désossé, extra-maigre (approximativement 5% M.G.), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1937, 10, "Porc, salé, tranches pour le déjeuner, cru ou non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1936, 10, "Porc, salé, bacon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1944, 10, "Porc, longe, filet, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1971, 10, "Porc, épaule soc (désossé), maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1972, 10, "Porc, épaule, soc (désossé), maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1973, 10, "Porc, épaule, soc (désossé), maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1996, 11, "Margose, feuilles tendres, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1995, 11, "Margose, feuilles tendres, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1994, 11, "Asperge, congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1993, 11, "Asperge, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1992, 11, "Asperge, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1991, 11, "Asperge, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1990, 11, "Asperge, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1989, 11, "Artichaut, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1988, 11, "Artichaut, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1987, 11, "Sagittaire, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1986, 11, "Sagittaire, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1985, 11, "Amarante, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1984, 11, "Amarante, feuilles, fraîches" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1982, 11, "Luzerne, graines germées, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1981, 10, "Porc, salé, bacon de dos (semoule de maïs), non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1979, 10, "Porc, salé, bacon en miettes, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1978, 10, "Porc, salé, jambon, épaule, picnic, désossé, maigre, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1977, 10, "Porc, salé, jambon entier, maigre, 30% réduit de sel, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1974, 10, "Porc, épaule, soc (désossé), maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2041, 11, "Chou de Chine (pe-tsai), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1935, 10, "Porc, rognon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2042, 11, "Cardon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2044, 11, "Carotte, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2107, 11, "Chou vert frisé, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2106, 11, "Chou vert frisé, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2105, 11, "Chou vert frisé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2104, 11, "Jute tossa, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2103, 11, "Jute tossa, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2102, 11, "Oreilles de Judas, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2101, 11, "Oreilles de Judas, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2100, 11, "Topinambour, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2108, 11, "Kanpyo (tranches de courge séchées)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2099, 11, "Doliques d'Égypte, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2097, 11, "Cassier (ben oléifère), feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2096, 11, "Cassier (ben oléifère), feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2095, 11, "Courge torchon (towelgourd), bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2094, 11, "Courge torchon (towelgourd), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2093, 11, "Calebasse, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2092, 11, "Calebasse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2091, 11, "Gingembre, racine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2090, 11, "Scarole ou endive (cichorium endivia), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2098, 11, "Doliques d'Égypte, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2089, 11, "Aubergine, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2109, 11, "Chou-rave, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2111, 11, "Chou gras (chenopodes blancs), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2132, 11, "Épinards de la Nouvelle-Zélande, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2131, 11, "Moutarde joncée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2130, 11, "Moutarde joncée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2129, 11, "Moutarde, feuilles, congelées, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2128, 11, "Moutarde, feuilles, congelées, non préparées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2127, 11, "Moutarde, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2126, 11, "Moutarde, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2125, 11, "Champignon shiitake, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2110, 11, "Chou-rave, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2124, 11, "Champignon shiitake, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2119, 11, "Lotus, racine, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2118, 11, "Lotus, racine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2117, 11, "Laitue frisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2116, 11, "Laitue romaine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2115, 11, "Laitue butterhead (Boston)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2114, 11, "Lentilles, germées, sautées, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2113, 11, "Lentilles, germées, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2112, 11, "Chou gras (chenopode blanc), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2123, 11, "Champignon, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2088, 11, "Aubergine, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2087, 11, "Pissenlit, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2086, 11, "Pissenlit, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2062, 11, "Chou, salade, avec vinaigrette, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2061, 11, "Chrysanthème des jardins, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2060, 11, "Chrysanthème des jardins, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2059, 11, "Ciboulette, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2058, 11, "Chicorée, racine (cichorium intybus), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2057, 11, "Chicorée, feuilles (cichorium intybus), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2056, 11, "Endive de Belgique (chicorée de bruxelles ou witloof), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2055, 11, "Chayotte, fruit, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2063, 11, "Chou cavalier (collards), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2054, 11, "Chayotte, fruit, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2052, 11, "Bette à carde, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2051, 11, "Laitue-tige, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2050, 11, "Céleri-rave, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2049, 11, "Céleri-rave, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2048, 11, "Chou-fleur, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2047, 11, "Chou-fleur, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2046, 11, "Chou-fleur, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2045, 11, "Manioc, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2053, 11, "Bette à carde, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2064, 11, "Chou cavalier (collards), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2065, 11, "Chou cavalier (collards), congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2066, 11, "Chou cavalier (collards), congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2085, 11, "Cresson alénois, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2084, 11, "Cresson alénois, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2083, 11, "Doliques à oeil noir, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2082, 11, "Doliques à oeil noir, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2081, 11, "Haricots asperge (dolique), bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2080, 11, "Haricots asperge (dolique), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2079, 11, "Doliques à oeil noir, jeunes cosses et graines, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2078, 11, "Doliques à oeil noir, jeunes cosses et graines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2077, 11, "Doliques à oeil noir, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2076, 11, "Doliques à oeil noir, grains immatures, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2075, 11, "Doliques à oeil noir, grains immatures, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2074, 11, "Doliques à oeil noir, grains immatures, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2073, 11, "Mâche commune, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2072, 11, "Maïs avec poivrons rouges ou verts, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2071, 11, "Maïs sucré, congelé, épi, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2070, 11, "Maïs sucré, conserve, saumure, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2069, 11, "Maïs sucré, conserve, saumure, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2068, 11, "Maïs sucré, jaune, avec ou sans épi, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2067, 11, "Coriandre (cilantro), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2043, 11, "Cardon, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1230, 8, "Céréale, prête-à-manger, alpen (muesli), Weetabix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1934, 10, "Porc, côtes de flanc, centre (côtes levées), maigre et gras, mijotées, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1932, 10, "Porc, longe, filet, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1791, 10, "Porc, longe, côtelette bout côte, avec os, maigre et gras, grillés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1790, 10, "Porc, longe, côtelette bout côte, avec os, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1789, 10, "Porc, longe, côtelette bout côte, avec os, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1788, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1787, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1786, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1785, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1784, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1792, 10, "Porc, longe, côtelette bout côte, avec os, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1783, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1781, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1780, 10, "Porc, longe, entière, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1779, 10, "Porc, longe, entière, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1778, 10, "Porc, longe, entière, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1777, 10, "Porc, longe, entière, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1776, 10, "Porc, longe, entière, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1775, 10, "Porc, longe, entière, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1774, 10, "Porc, longe, entière, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1782, 10, "Porc, longe, milieu, (côtelette centre), avec os, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1773, 10, "Porc, longe, entière, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1793, 10, "Porc, longe, côtelette bout côte, avec os, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1795, 10, "Porc, longe, côtelette bout côte, avec os, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1819, 10, "Porc, épaule, picnic, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1818, 10, "Porc, épaule, picnic, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1817, 10, "Porc, épaule, picnic, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1816, 10, "Porc, épaule entière, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1815, 10, "Porc, épaule entière, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1814, 10, "Porc, épaule entière, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1813, 10, "Porc, épaule, entière, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1812, 10, "Porc, longe, rôti de surlonge, désossé, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1794, 10, "Porc, longe, côtelette bout côte, avec os, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1808, 10, "Porc, longe, rôti de surlonge, désossé, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1803, 10, "Porc, longe, côtelette surlonge, avec os, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1802, 10, "Porc, longe, côtelette surlonge, avec os, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1801, 10, "Porc, longe, côtelette surlonge, avec os, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1800, 10, "Porc, longe, côtelette surlonge, avec os, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1799, 10, "Porc, longe, côtelette surlonge, avec os, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1798, 10, "Porc, longe, côtelette surlonge, avec os, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1797, 10, "Porc, longe, côtelette surlonge, avec os, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1796, 10, "Porc, longe, côtelette bout côte, avec os, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1804, 10, "Porc, longe, côtelette surlonge, avec os, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1772, 10, "Porc, fesse, bout jarret, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1771, 10, "Porc, fesse, bout jarret, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1770, 10, "Porc, fesse, bout jarret, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1745, 9, "Raisins secs, sans pépin (sultana)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1744, 9, "Raisins secs, dorés, sans pépins" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1743, 9, "Pruneau, séché, cuit, sans sucre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1742, 9, "Pruneau, séché, non cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1741, 9, "Prune, pourpre, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1740, 9, "Prune, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1739, 9, "Ananas, conserve, dans du sirop extra épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1738, 9, "Ananas, conserve, dans du sirop épais, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1746, 9, "Raisins secs, épépinés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1737, 9, "Ananas, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1735, 9, "Ananas, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1734, 9, "Ananas, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1733, 9, "Poire, moitié, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1732, 9, "Poire, moitié, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1731, 9, "Poire, crue, avec pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1730, 9, "Pêche, moitié ou tranchées, conserve, dans du sirop léger, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1729, 9, "Pêche, moitié ou tranchées, conserve, dans l'eau, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1728, 9, "Pêche, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1736, 9, "Ananas, conserve, dans du jus, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1747, 9, "Framboise, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1748, 9, "Rhubarbe, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1749, 9, "Fraise, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1769, 10, "Porc, fesse, bout jarret, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1768, 10, "Porc, fesse, bout croupe, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1767, 10, "Porc, fesse, bout croupe, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1766, 10, "Porc, fesse, bout croupe, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1765, 10, "Porc, fesse, bout croupe, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1764, 10, "Porc, cuisse, entière, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1763, 10, "Porc, cuisse, entière, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1762, 10, "Porc, cuisse, entière, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1761, 10, "Porc, cuisse, entière, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1760, 10, "Porc, gras séparable, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1759, 10, "Porc, gras séparable, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1758, 10, "Porc, morceau de gros, flanc, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1757, 10, "Porc, morceau de gros, gras de dos, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1755, 10, "Porc, carcasse, maigre et gras, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1754, 9, "Pomme, jus, concentré, congelé, dilué, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1753, 9, "Pomme, jus, concentré, congelé, non dilué, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1752, 9, "Pomme, jus, conserve ou bouteille, vitamine C ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1751, 9, "Cenelle, écarlate, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1750, 9, "Fraise, congelée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1820, 10, "Porc, épaule, picnic, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1933, 10, "Porc, côtes de flanc, centre (côtes levées), maigre et gras, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1821, 10, "Porc, épaule, picnic, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1823, 10, "Porc, épaule, palette (soc), avec os, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1899, 10, "Porc, longe, côtelette bout côte, désossé, maigre et gras, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1898, 10, "Porc, longe, côtelette bout côte, désossé, maigre et gras, sautéee" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1897, 10, "Porc, longe, côtelette bout côte, désossé, maigre et gras, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1896, 10, "Porc, longe, côtelette bout côte, désossé, maigre et gras, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1895, 10, "Porc, longe, côtelette bout côte, désossé, maigre et gras, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1894, 10, "Porc, côtes de dos, maigre et gras, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1893, 10, "Porc, côtes de dos, maigre et gras, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1888, 10, "Porc, salé, jambon désossé, maigre et régulier, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1900, 10, "Porc, longe, côtelette bout côte, désossé, maigre, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1887, 10, "Porc, salé, jambon désossé, maigre et régulier, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1884, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre et gras, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1883, 10, "Porc, longe, côtelette bout côte, avec os, maigre, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1882, 10, "Porc, longe, milieu (côtelette centre), avec os, maigre, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1881, 10, "Porc, queue, mijotée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1880, 10, "Porc, queue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1879, 10, "Porc, pieds, mijotés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1878, 10, "Porc, salé, jambon, épaule, picnic, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1877, 10, "Porc, salé, jambon, épaule, picnic, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1885, 10, "Porc, longe, côtelette bout côte, avec os, maigre et gras, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1876, 10, "Porc, salé, gras (jambon et épaule picnic), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1901, 10, "Porc, longe, côtelette bout côte, désossé, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1903, 10, "Porc, longe, côtelette bout côte, désossé, maigre, sautée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1931, 10, "Porc, longe, filet, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1922, 10, "Porc, longe, rôti de surlonge, désossé, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1921, 10, "Porc, longe, rôti de surlonge, désossé, maigre et gras, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1918, 10, "Porc, longe, côtelette surlonge, désossé, maigre, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1917, 10, "Porc, longe, côtelette surlonge, désossé, maigre, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1916, 10, "Porc, longe, côtelette surlonge, désossé, maigre, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1915, 10, "Porc, longe, côtelette surlonge, désossé, maigre, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1914, 10, "Porc, longe, côtelette surlonge, désossé, maigre et gras, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1902, 10, "Porc, longe, côtelette bout côte, désossé, maigre, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1913, 10, "Porc, longe, côtelette surlonge, désossé, maigre et gras, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1911, 10, "Porc, longe, côtelette surlonge, désossé, maigre et gras, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1910, 10, "Porc, longe, côte demi bout (côtes style compagnard), maigre, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1909, 10, "Porc, longe, côte demi bout (côtes style campagnard), maigre, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1908, 10, "Porc, longe, côte demi bout (côtes style campagnard), maigre, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1907, 10, "Porc, longe, côte demi bout (côtes style campagnard), maigre et gras, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1906, 10, "Porc, longe, côte demi bout (côtes style campagnard), maigre et gras, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1905, 10, "Porc, longe, côte demi bout (côte style campagnard), maigre et gras, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1904, 10, "Porc, longe, côtelette bout côte, désossé, maigre, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1912, 10, "Porc, longe, côtelette surlonge, désossé, maigre et gras, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1875, 10, "Porc, salé, gras, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1874, 10, "Porc, salé, porc salé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1873, 10, "Porc, salé, jambon entier, maigre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1842, 10, "Porc, rognon, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1841, 10, "Porc, bajoue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1840, 10, "Porc, coeur, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1839, 10, "Porc, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1838, 10, "Porc, pieds, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1837, 10, "Porc, oreilles, congelées, mijotées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1836, 10, "Porc, oreilles, congelées, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1835, 10, "Porc, intestin (andouilles), mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1843, 10, "Porc, panne, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1834, 10, "Porc, intestin (andouilles), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1832, 10, "Porc, cervelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1830, 10, "Porc, épaule, palette (soc), avec os, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1829, 10, "Porc, épaule, palette (soc), avec os, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1828, 10, "Porc, épaule, palette (soc), avec os, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1827, 10, "Porc, épaule, palette (soc), avec os, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1826, 10, "Porc, épaule, palette (soc), avec os, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1825, 10, "Porc, épaule, palette (soc), avec os, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1824, 10, "Porc, épaule, palette (soc), avec os, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1833, 10, "Porc, cervelle, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1844, 10, "Porc, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1845, 10, "Porc, foie, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1846, 10, "Porc, poumons, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1871, 10, "Porc, salé, jambon entier, maigre et gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1870, 10, "Porc, salé, jambon, désossé, petit demi-jambon, très maigre (approximativement 5% de gras), non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1869, 10, "Porc, salé fricadelles de jambon haché, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1868, 10, "Porc, salé, fricadelles de jambon haché, non chauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1865, 7, "Charcuterie, jambon,  régulier (13% M.G.), en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1862, 7, "Jambon, maigre, en conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1861, 10, "Porc, salé, jambon désossé, régulier (11% M.G.), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1860, 10, "Porc, salé, pieds, mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1859, 10, "Porc, salé, bacon de dos, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1857, 10, "Porc, salé, tranches pour le déjeuner, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1855, 10, "Porc, langue, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1854, 10, "Porc, langue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1853, 10, "Porc, estomac, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1852, 10, "Porc, rate, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1851, 10, "Porc, rate, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1850, 10, "Porc, pancréas, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1849, 10, "Porc, pancréas, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1848, 10, "Porc, désossé mécaniquement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1847, 10, "Porc, poumons, braisés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1822, 10, "Porc, épaule, picnic, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1229, 8, "Céréale, chaude, maïs (jaune), cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1228, 8, "Céréale, chaude, maïs (jaune), sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1225, 8, "Céréale, chaude, crème de riz, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 531, 4, "Vinaigrette, mayonnaise, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 530, 4, "Vinaigrette, commerciale, mille Îles, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 529, 4, "Vinaigrette, italienne, commerciale, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 528, 4, "Vinaigrette, française, commerciale, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 527, 4, "Vinaigrette, type mayonnaise, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 526, 4, "Vinaigrette, mille îles, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 525, 4, "Vinaigrette, russe, commerciale, hypocalorique" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 524, 4, "Vinaigrette, russe, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 532, 4, "Vinaigrette, italienne, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 523, 4, "Shortening, industriel, friture (liquide), soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 463, 4, "Shortening, tout usage, soya et palme hydrogéné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 462, 4, "Huile de poisson, sardine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 461, 4, "Huile de poisson, saumon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 460, 4, "Huile de poisson, menhaden, entièrement hydrogénée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 459, 4, "Huile de poisson, menhaden" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 458, 4, "Huile de poisson, hareng" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 457, 4, "Huile de poisson, foie de morue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 456, 4, "Huile végétale, avoine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 464, 4, "Gras animal, saindoux (porc)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 455, 4, "Shortening, usage déterminé, cuisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 533, 4, "Vinaigrette, française, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 535, 4, "Gras animal,  autochtone, huile de phoque" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 560, 5, "Poulet à griller, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 559, 5, "Poulet à griller, viande, peau, abats et cou, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 558, 5, "Poulet à griller, viande, peau, abats et cou, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 557, 5, "Poulet à griller, viande, peau, abats et cou, enfarinés, frits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 556, 5, "Poulet à griller, viande, peau, abats et cou, pâte à frire, frits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 555, 5, "Poulet à griller, viande, peau, abats et cou, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 552, 4, "Shortening, domestique, huile végétale non précisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 550, 4, "Tartinade, mélange, 20% beurre / 80% canola oil" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 534, 4, "Vinaigrette, fromage bleu ou roquefort, commerciale, régulière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 548, 4, "Shortening, industriel, tout usage, canola et palme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 546, 4, "Shortening, industriel, pour cuisson (pâtisserie), soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 545, 4, "Shortening, industriel, pour cuisson (pâtisserie), canola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 544, 4, "Shortening, industriel, pour cuisson (gâteau), soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 543, 4, "Shortening, industriel, pour cuisson (gâteau), canola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 542, 4, "Shortening, industriel, friture (solide), soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 541, 4, "Shortening, industriel, friture (solide), canola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 540, 4, "Shortening, industriel, friture (liquide), canola" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 539, 4, "Shortening, domestique, huiles végétales et animales non précisées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 547, 4, "Shortening, industriel, tout usage, soya et palme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 454, 4, "Shortening, usagé déterminé, gâteau et glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 453, 4, "Huile végétale, tournesol, acide oléique (70% et plus)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 452, 4, "Huile végétale, moutarde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 426, 4, "Vinaigrette, française, faite maison, huile non spécifiée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 424, 4, "Huile végétale, sésame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 423, 4, "Huile végétale, palme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 422, 4, "Huile végétale, olive" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 420, 4, "Huile végétale, noix de coco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 419, 4, "Huile végétale, soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 418, 4, "Huile végétale, arachide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 417, 4, "Huile végétale, germe de blé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 428, 4, "Vinaigrette, huile et vinaigre, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 416, 4, "Huile végétale, son de riz" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 414, 4, "Gras animal, suif de boeuf (gras de boeuf)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 394, 3, "Bébé, céréale, riz, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 293, 3, "Bébé, céréale, riz, avec poudre de lait et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 291, 3, "Bébé, céréale, avoine, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 287, 3, "Bébé, céréale, mélange de grains, avec poudre de lait et fruits, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 286, 3, "Bébé, céréale, mélange de grains, préparée avec préparation pour nourrissons ou lait maternel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 285, 3, "Bébé, céréale, mélange de grains, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 283, 3, "Bébé, céréale, orge, avec poudre de lait, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 415, 4, "Tartinade pour sandwich, avec cornichons hachés, ordinaire, huile non spécifiée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 429, 4, "Huile végétale, beurre de cacao" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 430, 4, "Huile végétale, graine de coton" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 432, 4, "Huile végétale, carthame, acide linoléique (70% et plus)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 451, 4, "Huile végétale, canola (colza)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 450, 4, "Huile végétale, avocat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 449, 4, "Gras animal, oie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 448, 4, "Gras animal, dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 447, 4, "Gras animal, canard" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 446, 4, "Shortening, domestique, huile de soya (hydrogénée) et palme" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 445, 4, "Gras animal, poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 444, 4, "Huile végétale, babassu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 443, 4, "Huile végétale, noisette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 442, 4, "Huile végétale, lécithine de soya" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 441, 4, "Huile végétale, noyaux d'abricots" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 440, 4, "Huile végétale, amande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 439, 4, "Huile végétale, noix" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 438, 4, "Gras animal, suif de mouton (gras de mouton)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 437, 4, "Huile végétale, maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 436, 4, "Huile végétale, pépins de raisin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 435, 4, "Huile végétale, graines de pavot" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 434, 4, "Huile végétale, palmiste" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 433, 4, "Huile végétale, carthame, acide oléique (70% et plus)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 561, 5, "Poulet à griller, viande et peau, pâte à frire frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 232, 3, "Aliments pour bébé, grignotises, biscuit, mélange de grains" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 562, 5, "Poulet à griller, viande et peau, enfarinées, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 564, 5, "Poulet à griller, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 627, 5, "Poulet à griller, aile, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 626, 5, "Poulet à griller, aile, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 625, 5, "Poulet à griller, haut de cuisse, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 624, 5, "Poulet à griller, haut de cuisse, viande et peau, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 623, 5, "Poulet à griller, haut de cuisse, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 622, 5, "Poulet à griller, viande, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 621, 5, "Poulet à griller, cou, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 620, 5, "Poulet à griller, cou, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 628, 5, "Poulet à griller, aile, viande et peau, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 619, 5, "Poulet à griller, neck, viande et peau, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 617, 5, "Poulet à griller, neck, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 616, 5, "Poulet à griller, cou, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 615, 5, "Poulet à griller, cuisse, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 614, 5, "Poulet à griller, cuisse, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 613, 5, "Poulet à griller, cuisse, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 612, 5, "Poulet à griller, cuisse, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 611, 5, "Poulet à griller, cuisse, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 610, 5, "Poulet à griller, cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 618, 5, "Poulet à griller, neck, viande et peau, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 609, 5, "Poulet à griller, cuisse, viande et peau, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 629, 5, "Poulet à griller, aile, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 631, 5, "Poulet à griller, aile, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 649, 5, "Poulet à bouillir, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 648, 5, "Poulet à bouillir, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 647, 5, "Poulet à bouillir, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 646, 5, "Poulet à bouillir, viande, peau, abats et cou, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 645, 5, "Poulet à bouillir, viande, peau, abats et cou, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 644, 5, "Poulet à rôtir, viande blanche, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 643, 5, "Poulet à rôtir, viande blanche, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 642, 5, "Poulet à rôtir, abats, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 630, 5, "Poulet à griller, aile, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 641, 5, "Poulet à rôtir, abats, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 639, 5, "Poulet à rôtir, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 638, 5, "Poulet à rôtir, viande et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 637, 5, "Poulet à rôtir, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 636, 5, "Poulet à rôtir, viande, peau, abats et cou, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 635, 5, "Poulet à rôtir, viande, peau, abats et cou, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 634, 5, "Poulet à griller, aile, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 633, 5, "Poulet à griller, aile, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 632, 5, "Poulet à griller, aile, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 640, 5, "Poulet à rôtir, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 608, 5, "Poulet à griller, cuisse, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 607, 5, "Poulet à griller, cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 606, 5, "Poulet à griller, pilon, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 582, 5, "Poulet à griller, viande blanche et peau, enfarinées, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 581, 5, "Poulet à griller, viande blanche et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 580, 5, "Poulet à griller, viande blanche et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 579, 5, "Poulet à griller, foie, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 578, 5, "Poulet à griller, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 577, 5, "Poulet à griller, coeur, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 576, 5, "Poulet à griller, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 575, 5, "Poulet à griller, gésier, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 583, 5, "Poulet à griller, viande blanche et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 574, 5, "Poulet à griller, gésier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 572, 5, "Poulet à griller, abats, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 571, 5, "Poulet à griller, abats, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 570, 5, "Poulet à griller, peau seulement, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 569, 5, "Poulet à griller, peau seulement, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 568, 5, "Poulet à griller, viande seulement, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 567, 5, "Poulet à griller, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 566, 5, "Poulet à griller, viande seulement, frite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 565, 5, "Poulet à griller, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 573, 5, "Poulet à griller, abats, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 584, 5, "Poulet à griller, viande blanche et peau,  à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 585, 5, "Poulet à griller, viande brune et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 586, 5, "Poulet à griller, viande brune et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 605, 5, "Poulet à griller, pilon, viande et peau, enfarinées, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 604, 5, "Poulet à griller, pilon, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 603, 5, "Poulet à griller, poitrine, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 602, 5, "Poulet à griller, poitrine, viande et peau, enfariné, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 601, 5, "Poulet à griller, poitrine, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 600, 5, "Poulet à griller, dos, viande, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 599, 5, "Poulet à griller, dos, viande et peau, enfarinées, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 598, 5, "Poulet à griller, dos, viande et peau, pâte à frire, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 597, 5, "Poulet à griller, viande brune, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 596, 5, "Poulet à griller, viande brune, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 595, 5, "Poulet à griller, viande brune, frite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 594, 5, "Poulet à griller, viande brune, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 593, 5, "Poulet à griller, viande blanche,  à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 592, 5, "Poulet à griller, viande blanche, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 591, 5, "Poulet à griller, viande blanche, frite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 590, 5, "Poulet à griller, viande blanche, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 589, 5, "Poulet à griller, viande brune et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 588, 5, "Poulet à griller, viande brune et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 587, 5, "Poulet à griller, viande brune et peau, enfarinées, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 563, 5, "Poulet à griller, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 650, 5, "Poulet à bouillir, abats, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 219, 20, "Grains céréaliers, orge, malt, extrait, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 217, 2, "Vanille, extrait, imitation, avec alcool" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 75, 14, "Lait frappé, chocolat, épais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 74, 1, "Lait, liquide, brebis, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 73, 1, "Lait, liquide, humain (lait maternel), mature, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 72, 1, "Lait, liquide, chèvre, enrichi, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 71, 14, "Chocolat chaud, cacao, fait maison, préparé avec lait 2% m.g." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 70, 1, "Lait, liquide, chocolat, partiellement écrémé, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 69, 1, "Lait, liquide, chocolat, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 68, 1, "Lait, concentré, sucré, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 76, 14, "Lait frappé, vanille, épais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 67, 1, "Babeurre, poudre, crème douce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 63, 1, "Lait, liquide, partiellement écrémé, 1% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 61, 1, "Lait, partiellement écrémé, liquide, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 60, 1, "Garniture à dessert (non laitière), congelée, semi-solide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 59, 1, "Garniture à dessert (non laitière), sous pression (bombe)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 58, 1, "Garniture à dessert (non laitière), poudre, préparée avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 57, 1, "Garniture à dessert (non laitière), poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 56, 1, "Colorant à café (non laitier), liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 55, 1, "Lait de poule, 7% M.G., produit canadien, 4% à 8% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 66, 1, "Lait, poudre, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 54, 1, "Crème, garniture fouettée, sous pression (bombe)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 77, 1, "Lactoserum, acide, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 79, 1, "Lactoserum, sucré, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 102, 1, "Fromage mexicain, queso anejo" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 101, 1, "Fromage, sauce, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 100, 1, "Fondue au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 98, 1, "Fromage de chèvre, mou, (plus de 55% eau, 21% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 97, 1, "Fromage de chèvre, semi-mou, (35% à 55% eau, 30% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 96, 1, "Fromage chèvre, dur, (moins de 35% eau, 36% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 93, 1, "Fromage parmesan, râpé en filaments" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 92, 1, "Beurre, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 78, 1, "Lactoserum, acide, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 91, 1, "Oeuf, dinde, entier, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 89, 1, "Oeuf, oie, entier, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 88, 1, "Oeuf, canard, entier, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 87, 1, "Oeuf, poule, jaune, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 86, 1, "Oeuf, poule, blanc, déshydraté, poudre, réduit en glucose" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 85, 1, "Oeuf, poule, blanc, séché, flocons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 84, 1, "Oeuf, poule, déshydraté, entier, stabilisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 83, 1, "Oeuf, poule, déshydraté, entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 80, 1, "Lactoserum, sucré, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 90, 1, "Oeuf, caille, entier, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 52, 1, "Fromage fondu, préparation, Suisse, pain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 51, 1, "Fromage fondu, préparation, cheddar, conditionné à froid" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 48, 1, "Fromage tilsit, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 23, 1, "Fromage cheshire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 22, 1, "Fromage carvi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 21, 1, "Fromage camembert" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 20, 1, "Fromage brie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 19, 1, "Fromage brick" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 18, 1, "Fromage bleu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 17, 1, "Huile de beurre, anhydre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 16, 1, "Beurre fouetté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 24, 1, "Fromage colby" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 14, 2, "Vinaigre, distillé (blanc)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 10, 22, "Dinde tranchée avec pommes de terre en purée et pois" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 9, 22, "Pain de viande avec sauce aux tomates, pommes de terre en purée et pois" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 8, 22, "Poulet frit avec pommes de terre en purée et légumes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 7, 22, "Boeuf braisé, avec pomme de terre au four, pois et maïs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 6, 18, "Maïs, beignet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 5, 22, "Mets chinois, chow mein, poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 4, 22, "Chop suey, avec viande, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2, 22, "Soufflé au fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 13, 2, "Vinaigre, cidre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 25, 1, "Fromage cottage en crème (4,5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 26, 1, "Fromage cottage en crème avec fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 27, 1, "Fromage cottage sec pressé (0,4% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 47, 1, "Fromage suisse (emmental)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 46, 1, "Fromage roquefort (bleu)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 45, 1, "Fromage romano" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 44, 1, "Fromage ricotta, avec lait partiellement écrémé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 43, 1, "Fromage ricotta, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 42, 1, "Fromage provolone" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 41, 1, "Fromage port-salut" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 40, 1, "Fromage parmesan, pâte dure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 39, 1, "Fromage parmesan, râpé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 38, 1, "Fromage neufchatel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 37, 1, "Fromage muenster" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 35, 1, "Fromage mozzarella (48%d'humidité, 25% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 34, 1, "Fromage monterey" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 33, 1, "Fromage limburger (limbourg)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 32, 1, "Fromage gruyère" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 31, 1, "Fromage gjetost" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 30, 1, "Fromage fontina" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 29, 1, "Fromage edam" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 28, 1, "Fromage à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 103, 1, "Fromage mexicain, queso asadero" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 218, 2, "Vanille, extrait, imitation, sans alcool" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 104, 1, "Fromage Mexicain, queso chihuahua" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 106, 1, "Fromage, type cheddar ou colby, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 193, 2, "Épices, muscade, moulue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 192, 2, "Épices, graines de moutarde, jaunes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 191, 2, "Épices, marjolaine, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 190, 2, "Épices, macis, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 189, 2, "Épices, gingembre, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 188, 2, "Épices, ail, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 187, 2, "Épices, fenugrec, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 186, 2, "Épices, fenouil, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 194, 2, "Épices, oignon, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 185, 2, "Épices, aneth, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 183, 2, "Épices, cari, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 182, 2, "Épices, cumin, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 181, 2, "Épices, coriandre (cilantro), graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 180, 2, "Épices, coriandre (cilantro), feuilles, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 179, 2, "Épices, clou de girofle, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 178, 2, "Épices, cannelle, moulue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 177, 2, "Épices, chili, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 176, 2, "Épices, cerfeuil, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 184, 2, "Épices, aneth, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 175, 2, "Épices, céleri, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 195, 2, "Épices, origan, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 197, 2, "Épices, persil, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 216, 2, "Vanille, extrait" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 215, 2, "Épices, thym, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 214, 2, "Sel, table" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 213, 2, "Épices, aneth, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 212, 2, "Basilic, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 211, 2, "Épices, curcuma, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 210, 2, "Épices, thym, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 209, 2, "Épices, estragon, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 196, 2, "Épices, paprika" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 207, 2, "Épices, sarriette, moulue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 205, 2, "Épices, safran" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 204, 2, "Épices, romarin, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 203, 2, "Épices, assaisonnement pour tarte à la citrouille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 202, 2, "Épices, assaisonnement pour volaille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 201, 2, "Épices, pavot, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 200, 2, "Épices, poivre, blanc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 199, 2, "Épices, piment rouge ou de cayenne" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 198, 2, "Épices, poivre, noir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 206, 2, "Épices, sauge, moulue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 174, 2, "Épices, cardamome, moulue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 173, 2, "Épices, carvi, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 172, 2, "Épices, laurier, feuilles" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 125, 1, "Oeuf, poule, entier, frais ou congelé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 124, 1, "Babeurre, liquide, culture, 1% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 123, 1, "Lait, liquide, entier, agriculteur, 3.7% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 122, 1, "Colorant à café (non laitier), en poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 120, 1, "Fromage cottage, (2% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 119, 1, "Fromage cheddar" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 118, 1, "Beurre, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 117, 1, "Oeuf, succédané, congelé (jaune remplacé)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 126, 1, "Oeuf, poule, blanc, frais ou congelé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 116, 14, "Chocolat chaud, cacao, fait maison, préparé avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 114, 1, "Lait, liquide, écrémé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 113, 1, "Lait, liquide, entier, homogénéisé, pasteurisé, 3.25% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 112, 1, "Lait, concentré, écrémé, conserve, non dilué, 0.2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 111, 1, "Fromage mozzarella, partiellement écrémé, (52% eau, 16.5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 110, 1, "Fromage mozzarella, (52% eau, 22.5% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 109, 1, "Fromage gouda" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 108, 1, "Fromage féta" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 107, 1, "Fromage cottage, (1% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 115, 1, "Lait, poudre, écrémé, instant" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 127, 1, "Oeuf, poule, jaune, frais ou congelé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 129, 1, "Oeuf, poule, entier, cuit, frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 130, 1, "Oeuf, poule, entier, cuit, bouilli à la coque, dur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 171, 2, "Épices, basilic, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 170, 2, "Épices, anis, graines" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 169, 2, "Épices, piments de la jamaïque, moulu" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 164, 19, "Dessert, congelé, yogourt glacé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 163, 1, "Crème de table (à café) 20% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 160, 1, "Fromage, réduit en calories (6% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 153, 1, "Lait, concentré, partiellemente écrémé, conserve, non dilué, 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 152, 1, "Crème sure, de culture, 18% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 151, 1, "Crème, à café (de table), 15% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 150, 1, "Crème à céréales (moitié-moitié), 10% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 147, 1, "Fromage cottage sec, pressé, sans gras, gros et petit grain" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 140, 1, "Lait, concentré, entier, conserve, non dilué, 7,8% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 139, 1, "Crème sure, de culture, 14% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 138, 1, "Crème à fouetter, 35% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 137, 1, "Crème à fouetter, 32% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 136, 1, "Crème à café (crème de table), 18% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 134, 1, "Lait, en poudre, écrémé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 133, 1, "Oeuf, poule, entier, cuit, brouillé ou omelette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 132, 1, "Oeuf, poule, entier, cuit, poché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 105, 1, "Fromage, type cheddar ou colby, faible en gras (7% M.G.)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2133, 11, "Épinards de la Nouvelle-Zélande, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 651, 5, "Poulet à bouillir, abats, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 653, 5, "Poulet à bouillir, viande blanche seulement, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1012, 6, "Soupe, poulet et nouilles, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1011, 6, "Sauce, non spécifiée, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1010, 6, "Sauce, dinde, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1009, 6, "Sauce, dinde, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1008, 6, "Sauce, porc, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1007, 6, "Sauce, oignon, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1006, 6, "Sauce, champignons, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1005, 6, "Sauce, champignons, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1017, 6, "Sauce, barbecue, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1004, 6, "Sauce, poulet, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1002, 6, "Sauce, boeuf, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1001, 6, "Sauce, boeuf, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1000, 6, "Sauce, au jus, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 999, 6, "Sauce, au jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 997, 6, "Sauce, teriyaki, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 994, 6, "Sauce, Stroganoff, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 988, 6, "Soupe, crème, légumes, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 987, 6, "Soupe, légumes et boeuf, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1003, 6, "Sauce, poulet, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 986, 6, "Soupe, tomates et légumes, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1025, 6, "Sauce, salsa, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1027, 6, "Sauce, blanche, consistance moyenne, lait 2%, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1063, 6, "Soupe, crème, champignons, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1062, 6, "Soupe, champignons et orge, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1061, 6, "Soupe, minestrone, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1060, 6, "Soupe, bouillon ou consommé, boeuf, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1057, 6, "Soupe, poulet et légumes, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1056, 6, "Soupe, poulet et riz, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1055, 6, "Soupe, poulet et nouilles, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1054, 6, "Soupe, poulet et gombo (okra), conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1026, 6, "Sauce, blanche, consistance claire, lait 2%, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1053, 6, "Soupe, crème, poulet, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1051, 6, "Soupe, fromage cheddar, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1050, 6, "Soupe, crème, céleri, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1049, 6, "Soupe, boeuf et nouilles, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1047, 6, "Soupe, fèves et bacon, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1046, 6, "Soupe, crème, asperges, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1030, 6, "Sauce, piments, TABASCO, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1029, 6, "Sauce, piments forts, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1028, 6, "Sauce, blanche, consistance épaisse, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1052, 6, "Soupe, bouillon, poulet, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 985, 6, "Soupe, tomates, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 984, 6, "Soupe, pois verts ou cassés, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 983, 6, "Soupe, queue de boeuf, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 951, 6, "Soupe, crème, oignon, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 950, 6, "Soupe, oignon, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 949, 6, "Soupe, crème, champignons, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 948, 6, "Soupe, champignons et orge, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 947, 6, "Soupe, minestrone, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 946, 6, "Soupe, minestrone, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 945, 6, "Soupe, lentilles avec bacon, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 944, 6, "Soupe, bouillon ou consommé, boeuf, conserve, condensé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 953, 6, "Soupe, crème, pommes de terre, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 940, 6, "Soupe, poulet et légumes, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 938, 6, "Soupe, poulet et riz, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 937, 6, "Soupe, poulet et riz, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 936, 6, "Soupe, poulet et nouilles, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 935, 6, "Soupe, poulet et nouilles, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 934, 6, "Soupe, poulet et gombo (okra), conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 933, 6, "Soupe, crème, poulet, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 932, 6, "Soupe, chaudrée de poulet, (à la king), prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 931, 6, "Soupe, bouillon, poulet, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 939, 6, "Soupe, poulet et légumes (inclus gumbo), prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 954, 6, "Soupe, potage écossais, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 957, 6, "Soupe, tomates et riz, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 958, 6, "Soupe, dinde, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 982, 6, "Soupe, champignons, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 981, 6, "Soupe, minestrone, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 980, 6, "Soupe, poireaux, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 979, 6, "Soupe, consommé, déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 976, 6, "Soupe, poulet et légumes, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 975, 6, "Soupe, poulet et riz, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 974, 6, "Soupe, crème, poulet, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 973, 6, "Soupe, bouillon, poulet, cube, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 972, 6, "Soupe, bouillon, poulet, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 971, 6, "Soupe, crème, céleri, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 970, 6, "Soupe, chou-fleur, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 969, 6, "Soupe, boeuf et nouilles, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 968, 6, "Soupe, bouillon, boeuf, cube, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 967, 6, "Soupe, bouillon, boeuf, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 966, 6, "Soupe, fèves et bacon, deshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 965, 6, "Soupe, crème, asperges, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 964, 6, "Soupe, légumes avec bouillon de boeuf, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 963, 6, "Soupe, boeuf et légumes, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 961, 6, "Soupe, légumes mélangés (avec pâtes), prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1064, 6, "Soupe, oignon, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 930, 6, "Soupe, fromage cheddar, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1065, 6, "Soupe, crème, oignon, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1068, 6, "Soupe, potage écossais, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1175, 7, "Saucisse italienne, porc, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1174, 7, "Saucisse,  Vienne (cocktail), conserve, poulet, boeuf et porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1172, 7, "Charcuterie, poitrine de dinde, cuite, tranchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1171, 7, "Charcuterie, saucisson, thuringer, cervelat, boeuf et porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1167, 7, "Saucisse, fumée, porc, pré-cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1166, 7, "Charcuterie, garniture à sandwich, viande non spécifée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1164, 7, "Tartinade pour sandwich, poulet et/ou dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1161, 7, "Pâté de foie, non spécifié, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1178, 7, "Saucisse, boudin, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1160, 7, "Pâté de foie gras, foie d'oie, fumé, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1158, 7, "Charcuterie, pastrami, dinde, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1157, 7, "Charcuterie, pain de viande aux olives, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1154, 7, "Charcuterie, boeuf, cuit, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1153, 7, "Saucisse, knackwurst (knockwurst), porc, boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1152, 7, "Saucisse italienne, porc, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1151, 7, "Charcuterie, garniture à sandwich, jambon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1148, 7, "Charcuterie, jambon, cuit, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1147, 7, "Saucisse fumée, dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1159, 7, "Pâté de foie de poulet, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1144, 7, "Poulet, tartinade à sandwich, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1179, 7, "Charcuterie, bologne, boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1183, 7, "Saucisse, saucisson Braunschweiger (saucisson de foie avec bacon), porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1224, 8, "Céréale, chaude, crème de riz, sèche" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1223, 20, "Grains céréaliers, germe de blé, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1222, 8, "Céreale, prête-à-manger, granola, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1220, 7, "Charcuterie, poitrine de poulet, cuite, extra maigre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1217, 7, "Saucisse, jambon, pré-cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1216, 7, "Charcuterie, bologne, poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1212, 7, "Charcuterie, simili poulet, pain de viande" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1207, 7, "Charcuterie, poulet, cuit, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1182, 7, "Saucisse Bratwurst, porc, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1202, 7, "Charcuterie, salami, cuit, dinde" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1199, 7, "Saucisse à déjeuner, en chapelet ou en galette, porc, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1198, 7, "Saucisse à déjeuner, en chapelet ou en galette, porc, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1196, 7, "Charcuterie, pain de viande aux piments et aux cornichons, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1192, 7, "Saucisson de foie (liverwurst), porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1190, 7, "Charcuterie, tête fromagée, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1187, 7, "Saucisse fumée, poulet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1185, 7, "Saucisse fumée, boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1184, 7, "Pain de viande hollandais, à l'ancienne, porc et boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1200, 7, "Charcuterie, salami, cuit, boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1143, 7, "Saucisse fumée, fromage, porc, boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1142, 7, "Saucisse, Brotwurst, porc, boeuf, avec lait écrémé en poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1140, 7, "Saucisse, Bockwurst, porc/veau, lait/oeufs, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1091, 6, "Soupe, champignons, déhydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1090, 6, "Soupe, minestrone, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1089, 6, "Soupe, poireaux, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1088, 6, "Soupe, consommé, déshydraté, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1087, 6, "Soupe, poulet et légumes, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1086, 6, "Soupe, poulet et riz, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1085, 6, "Soupe, crème, poulet, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1084, 6, "Soupe, bouillon, poulet, cube, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1092, 6, "Soupe, queue de boeuf, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1083, 6, "Soupe, bouillon, poulet, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1081, 6, "Soupe, chou-fleur, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1080, 6, "Soupe, boeuf et nouilles, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1079, 6, "Soupe, bouillon, boeuf, cube, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1078, 6, "Soupe, bouillon, boeuf, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1077, 6, "Soupe, fèves et bacon, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1076, 6, "Soupe, crème, asperges, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1075, 6, "Soupe, légumes avec bouillon de boeuf, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1071, 6, "Soupe, tomates et riz, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1082, 6, "Soupe, crème, céleri, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1093, 6, "Soupe, pois verts ou cassés, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1094, 6, "Soupe, tomates, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1095, 6, "Soupe, tomates et légumes, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1139, 7, "Saucisse, saucisson de bière, porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1135, 2, "Sauce, moutarde, brune, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1133, 6, "Sauce, worcestershire, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1131, 6, "Sauce, tartare, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1130, 6, "Sauce, bifteck, HP ou A1, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1128, 6, "Soupe, tomates, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1127, 6, "Soupe, oignon, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1126, 6, "Soupe, légumes avec boeuf (et orge), conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1125, 6, "Soupe, pois cassés avec jambon, conserve, condenséee, au ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1124, 6, "Soupe, pois verts, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1121, 6, "Soupe, tomates, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1120, 6, "Soupe, oignon, déshydratée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1119, 6, "Soupe, légumes avec boeuf (et orge), conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1118, 6, "Soupe, pois cassés avec jambon, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1117, 6, "Soupe, pois cassés avec jambon, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1116, 6, "soupe, pois verts, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1108, 6, "Soupe, poulet et nouilles, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1097, 6, "Soupe, crème, légumes, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1096, 6, "Soupe, légumes et boeuf, déshydratée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 1067, 6, "Soupe, crème, pommes de terre, conserve, condensée, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 652, 5, "Poulet à bouillir, viande blanche seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 929, 6, "Soupe, crème, céleri, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 927, 6, "Soupe, bouillon, boeuf, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 718, 5, "Dinde, toutes catégories, aile, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 717, 5, "Dinde, toutes catégories, cuisse, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 716, 5, "Dinde, toutes catégories, cuisse, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 715, 5, "Dinde, toutes catégories, poitrine, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 714, 5, "Dinde, toutes catégories, poitrine, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 713, 5, "Dinde, toutes catégories, dos, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 712, 5, "Dinde, toutes catégories, dos, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 711, 5, "Dinde, toutes catégories, viande brune seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 719, 5, "Dinde, toutes catégories, aile, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 710, 5, "Dinde, toutes catégories, viande brune seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 708, 5, "Dinde, toutes catégories, viande blanche seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 707, 5, "Dinde, toutes catégories, viande brune et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 706, 5, "Dinde, toutes catégories, viande brune et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 705, 5, "Dinde, toutes catégories, viande blanche et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 704, 5, "Dinde, toutes catégories, cou, viande blanche et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 703, 5, "Dinde, toutes catégories, cou, viande seulement, mijotée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 702, 5, "Dinde, toutes catégories, cou, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 701, 5, "Dinde, toutes catégories, foie, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 709, 5, "Dinde, toutes catégories, viande blanche seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 700, 5, "Dinde, toutes catégories, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 722, 5, "Dinde à griller, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 724, 5, "Dinde à griller, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 748, 5, "Dinde à griller, aile, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 747, 5, "Dinde à griller, cuisse, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 746, 5, "Dinde à griller, cuisse, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 745, 5, "Dinde à griller, cuisse, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 744, 5, "Dinde à griller, cuisse, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 743, 5, "Dinde à griller, poitrine, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 742, 5, "Dinde à griller, poitrine, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 741, 5, "Dinde à griller, poitrine, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 723, 5, "Dinde à griller, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 740, 5, "Dinde à griller, poitrine, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 734, 5, "Dinde à griller, viande brune seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 733, 5, "Dinde à griller, viande blanche seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 732, 5, "Dinde à griller, viande blanche seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 731, 5, "Dinde à griller, viande brune et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 730, 5, "Dinde à griller, viande brune et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 729, 5, "Dinde à griller, viande blanche et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 728, 5, "Dinde à griller, viande blanche et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 725, 5, "Dinde à griller, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 735, 5, "Dinde à griller, viande brune seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 699, 5, "Dinde, toutes catégories, coeur, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 698, 5, "Dinde, toutes catégories, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 697, 5, "Dinde, toutes catégories, gésier, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 671, 5, "Oie domestiquée, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 670, 5, "Oie domestiquée, viande et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 669, 5, "Oie domestiquée, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 668, 5, "Canard sauvage, autochtone, poitrine, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 667, 5, "Canard sauvage, autochtone, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 666, 5, "Canard domestiqué, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 665, 5, "Canard domestiqué, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 664, 5, "Canard domestiqué, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 672, 5, "Oie domestiquée, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 663, 5, "Canard domestiqué, viande et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 661, 5, "Poulet, chapon, abats, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 660, 5, "Poulet, chapon, abats, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 659, 5, "Poulet, chapon, viande et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 658, 5, "Poulet, chapon, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 657, 5, "Poulet, chapon, viande, peau, abats et cou, rôtis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 656, 5, "Poulet, chapon, viande, peau, abats et cou, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 655, 5, "Poulet à bouillir, viande brune seulement, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 654, 5, "Poulet à bouillir, viande brune seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 662, 5, "Canard domestiqué, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 673, 5, "Oie domestiquée, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 674, 5, "Pintade, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 675, 5, "Pintade, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 696, 5, "Dinde, toutes catégories, gésier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 695, 5, "Dinde, toutes catégories, abats, mijotés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 694, 5, "Dinde, toutes catégories, abats, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 693, 5, "Dinde, toutes catégories, peau et gras séparable seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 692, 5, "Dinde, toutes catégories, peau et gras séparable seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 691, 5, "Dinde, toutes catégories, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 690, 5, "Dinde, toutes catégories, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 689, 5, "Dinde, toutes catégories, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 688, 5, "Dinde, toutes catégories, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 685, 5, "Pigeonneaux (pigeon), poitrine, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 684, 5, "Pigeonneaux (pigeon), viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 683, 5, "Pigeonneaux (pigeon), viander et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 682, 5, "Caille, poitrine, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 681, 5, "Caille, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 680, 5, "Caille, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 679, 5, "Faisan, cuisse, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 678, 5, "Faisan, poitrine, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 677, 5, "Faisan, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 676, 5, "Faisant, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 749, 5, "Dinde à griller, aile, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 928, 6, "Soupe, boeuf et nouilles, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 750, 5, "Dinde à griller, aile, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 754, 5, "Dinde, jeune, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 840, 5, "Poulet à griller, poitrine, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 839, 5, "Poulet à griller, poitrine, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 838, 5, "Poulet à griller, poitrine, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 837, 5, "Poulet à griller, dos, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 836, 5, "Poulet à griller, dos, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 835, 5, "Poulet à griller, dos, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 834, 5, "Poulet à griller, dos, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 833, 5, "Poulet à griller, dos, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 841, 5, "Poulet à griller, poitrine, sans la peau, désossée, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 832, 5, "Poulet à griller, dos, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 824, 5, "Poulet à griller, peau seulement, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 823, 5, "Poulet à griller, peau seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 822, 5, "Poulet à griller, peau seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 821, 5, "Poulet à bouillir, viande seulement, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 820, 5, "Poulet, poulet de cornouailles, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 819, 5, "Poulet, poulet de cornouailles, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 818, 5, "Poulet, poulet de cornouailles, viande et peau, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 817, 5, "Poulet, poulet de courouailles, viande et peau, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 831, 5, "Poulet à griller, gras détachable, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 816, 5, "Dinde, toutes catégories, hachée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 842, 5, "Poulet à griller, poitrine, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 844, 5, "Poulet à griller, pilon, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 926, 6, "Soupe, fèves et jambon, prête-à-servir" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 924, 6, "Soupe, fèves et bacon, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 923, 6, "Soupe, crème, asperges, conserve, condensée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 919, 5, "Poulet, haché, maigre, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 918, 5, "Poulet, haché, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 887, 5, "Volaille, produit: dinde, conserve, flocons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 886, 5, "Volaille, produit: poulet, conserve, flocons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 855, 5, "Poulet à griller, haut de cuisse, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 843, 5, "Poulet à griller, poitrine, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 854, 5, "Poulet à griller, haut de cuisse, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 852, 5, "Poulet à griller, haut de cuisse, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 851, 5, "Poulet à griller, haut de cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 850, 5, "Poulet à griller, haut de cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 849, 5, "Poulet à griller, pilon, viande, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 848, 5, "Poulet à griller, pilon, viande, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 847, 5, "Poulet à griller, pilon, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 846, 5, "Poulet à griller, pilon, viande et peau, à l'étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 845, 5, "Poulet à griller, pilon, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 853, 5, "Poulet à griller, haut de cuisse, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 815, 5, "Dinde, toutes catégories, hachée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 813, 5, "Volaille désossée mécaniquement, poule, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 812, 5, "Volaille désossée mécaniquement, provenant de dos et cous seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 778, 5, "Dindon, jeune, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 775, 5, "Dinde, jeune, aile, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 774, 5, "Dinde, jeune, aile, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 773, 5, "Dinde, jeune, cuisse, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 772, 5, "Dinde, jeune, cuisse, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 771, 5, "Dinde, jeune, poitrine, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 770, 5, "Dinde, jeune, poitrine, viande et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 767, 5, "Dinde, jeune, viande brune seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 779, 5, "Dindon, jeune, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 766, 5, "Dinde, jeune, viande brune seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 764, 5, "Dinde, jeune, viande blanche seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 763, 5, "Dinde, jeune, viande brune et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 762, 5, "Dinde, jeune, viande brune et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 761, 5, "Dinde, jeune, viande blanche et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 760, 5, "Dinde, jeune, viande blanche et peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 757, 5, "Dinde, jeune, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 756, 5, "Dinde, jeune, viande seulement, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 755, 5, "Dinde, jeune, viande et peau, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 765, 5, "Dinde, jeune, viande blanche seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 780, 5, "Dindon, jeune, viande seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 781, 5, "Dindon, jeune, viande seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 784, 5, "Dindon, jeune, viande blanche et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 811, 5, "Volaille désossée mécaniquement, provenant de dos et cous avec peau, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 810, 5, "Volaille, produit: dinde, bâtonnets, panés, frits, avec pâte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 805, 5, "Volaille, produit: dinde, croquettes, panées, frites avec pâte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 804, 5, "Volaille, produit: dinde et sauce, congelées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 802, 5, "Volaille, produit: dinde, conserve, désossée, avec bouillon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 800, 5, "Volaille, produit: poulet en flocons, conserve, désossé avec bouillon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 799, 5, "Dindon, jeune, aile, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 798, 5, "Dindon, jeune, aile, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 797, 5, "Dindon, jeune, cuisse, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 796, 5, "Dindon, jeune, cuisse, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 795, 5, "Dindon, jeune, poitrine, viande et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 794, 5, "Dindon, jeune, poitrine, viande et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 791, 5, "Dindon, jeune, viande brune seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 790, 5, "Dindon, jeune, viande brune seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 789, 5, "Dindon, jeune, viande blanche seulement, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 788, 5, "Dindon, jeune, viande blanche seulement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 787, 5, "Dindon, jeune, viande brune et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 786, 5, "Dindon, jeune, viande brune et peau, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 785, 5, "Dindon, jeune, viande blanche et peau, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 751, 5, "Dinde à griller, aile, viande seulement, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3854, 18, "Biscuit, sandwich avec gaufrettes au sucre, fourré à la crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2134, 11, "Okra (gombo), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2136, 11, "Okra (gombo), congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3269, 16, "Haricots, pinto, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3268, 16, "Haricots, roses, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3267, 16, "Haricots, roses, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3266, 16, "Haricots, petits blancs, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3265, 16, "Haricots, rouge foncé, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3264, 16, "Haricots, rouge pâle, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3261, 16, "Haricots, \"great northern\", conserve, solides et liquide, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3260, 16, "Haricots, \"great northern\", bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3270, 16, "Haricots, pinto, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3259, 16, "Haricots, \"great northern\", crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3257, 16, "Haricots verts, grains mûrs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3256, 16, "Haricots, canneberge (romain), bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3255, 16, "Haricots, canneberge (romain), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3254, 16, "Haricots, \"black turtle\", grains mûrs, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3253, 16, "Haricots, \"black turtle\", grains mûrs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3252, 16, "Haricots, \"black turtle\", grains mûrs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3251, 16, "Haricots au four (''fèves au lard''), conserve, avec lard et sauce sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3250, 16, "Haricots au four (''fèves au lard''), conserve, avec saucisses" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3258, 16, "Haricots verts, grains mûrs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3249, 16, "Haricots au four (''fèves au lard''), conserve, avec boeuf" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3271, 16, "Haricots, pinto, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3273, 16, "Haricots, blancs, petits, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3291, 16, "Haricots, lima, secs, petits grains (de sieva), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3290, 16, "Haricots, lima, secs, gros, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3289, 16, "Haricots, lima, secs, gros, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3288, 16, "Haricots, lima, secs, gros, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3287, 16, "Doliques d'Égypte, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3286, 16, "Doliques d'Égypte, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3285, 16, "Haricots à oeil noir (dolique), communs, grains mûrs, conserve, avec porc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3284, 16, "Haricots à oeil noir (dolique), communs, grains mûrs, conserve, nature, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3272, 16, "Haricots, blancs, petits, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3283, 16, "Haricots à oeil noir (dolique), communs, grains mûrs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3281, 16, "Haricots à oeil noir (dolique), kunde, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3280, 16, "Haricots à oeil noir (dolique), kunde, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3279, 16, "Pois chiches (garbanzo), conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3278, 16, "Caroube, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3277, 16, "Gourganes (fèves des marais, fava), conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3276, 16, "Haricots, blancs, conserve, solides et liquide, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3275, 16, "Haricots, jaunes (fève), bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3274, 16, "Haricots, jaunes (fève), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3282, 16, "Haricots à oeil noir (dolique), communs, grains mûrs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3292, 16, "Haricots, lima, secs, petits grains (de sieva), bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3248, 16, "Haricots au four (''fèves au lard''), conserve, nature ou végétarien" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3246, 16, "Haricots, adzuki, yokan (gelée de fèves)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3221, 15, "Poisson, saumon, rose, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3220, 15, "Poisson, saumon, coho, sauvage, poché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3219, 15, "Poisson, saumon, coho, sauvage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3218, 15, "Poisson, saumon, kéta, conserve, égoutté, avec arêtes, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3217, 15, "Poisson, saumon, kéta, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3216, 15, "Poisson plat (plie ou flet ou sole), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3215, 15, "Poisson, truite, espèces diverses, au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3214, 15, "Poisson, thon, chair pale, conserve, dans l'huile, égoutté, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3222, 15, "Poisson, saumon, rose, conserve, avec chair et arêts et liquide, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3213, 15, "Mollusques, pétoncle (coquille St Jacques), espèces diverses, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3211, 15, "Crustacés, crevette, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3210, 15, "Crustacés, homard, d'amérique, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3209, 15, "Crustacés, homard, amérique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3208, 15, "Poisson, corégone de lac, autochtone, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3207, 15, "Poisson, thon, chair pale, conserve, dans l'huile, égoutté, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3206, 15, "Poisson, truite, arc-en-ciel, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3205, 15, "Poisson, truite, arc-en-ciel, sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3204, 15, "Poisson, truite, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3212, 15, "Crustacés, crevette, espèces diverses, à vapeur ou bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3247, 16, "Haricots au four (''fèves au lard''), faits maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3223, 15, "Poisson, saumon, rouge (sockeye), conserve, égoutté, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3225, 15, "Poisson, saumon, rose, conserve, chair avec arêtes et liquide, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3245, 16, "Haricots, adzuki, conserve, sucrés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3244, 16, "Haricots, adzuki, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3243, 16, "Haricots, adzuki, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3242, 15, "Crustacés, crevette ou homard, pâté, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3241, 15, "Poisson, eulakane, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3240, 15, "Mye, beignet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3239, 15, "Crustacés, crabe des neiges (crabe-araignée), conserve, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3238, 15, "Crustacés, crabe, rouge, à vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3224, 15, "Crustacés, crevette, espèces diverses, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3237, 15, "Crustacés, crabe, tourteau, à vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3234, 15, "Poisson, inconnu, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3233, 15, "Poisson, laquaiche aux yeux d'or, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3232, 15, "Poisson, morue, atlantique, fumée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3231, 15, "Poisson, morue, atlantique, langues et joues, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3230, 15, "Poisson, omble chevalier, autochtone, viande, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3228, 15, "Poisson, saumon, rose, poché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3227, 15, "Poisson, saumon, kéta, poché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3226, 15, "Poisson, saumon, rouge (sockeye), conserve, égoutté avec arêtes, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3235, 15, "Poisson, doré noir, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3293, 16, "Lupins, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3294, 16, "Lupins, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3295, 16, "Haricots, mat (papillon), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3359, 16, "Haricots, mat, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3358, 16, "Lupins, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3357, 16, "Haricots, lima, secs, petits grains (de sieva), bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3356, 16, "Haricots, lima, secs, gros, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3355, 16, "Doliques d'Égypte, bouillie, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3354, 16, "Haricots à oeil noir (dolique), communs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3353, 16, "Haricots à oeil noir (dolique), kinde, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3352, 16, "Gourganes (fèves des marais, fava), déshydratées, bouillies, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3360, 16, "Légumineuses, ambériques, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3351, 16, "Haricots, jaunes (fève), bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3349, 16, "Haricots, pinto, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3348, 16, "Haricots, roses, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3347, 16, "Haricots, rouge pâle, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3345, 16, "Haricots, ''great northern'', bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3344, 16, "Haricots verts, grains mûrs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3343, 16, "Haricots, canneberge (romain), bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3342, 16, "Haricots, \"black turtle\", grains mûrs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3341, 16, "Haricots, noirs, grains mûrs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3350, 16, "Haricots, blancs, fins, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3340, 16, "Haricots, adzuki, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3361, 16, "Haricots, mungo, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3363, 16, "Arachides, Espagnole, rôties à l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3381, 16, "Haricots, rouge foncé, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3380, 16, "Haricots, rouge pâle, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3379, 16, "Haricots, rouges, tous les types, conserve, avec solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3378, 16, "Haricots, canneberge, conserve, avec solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3377, 16, "Haricots, noirs, grains mûrs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3376, 16, "Haricots, noirs, grains mûrs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3375, 16, "Haricots au four (fèves au lard), conserve, avec lard et sauce tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3374, 16, "Haricots au four (fèves au lard), conserve, avec lard" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3362, 16, "Arachides, tous les types, rôties à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3373, 16, "Pois, carrés, secs, bouillis, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3371, 16, "Tofu, fuyu, salé et fermenté (avec sulfate de calcium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3370, 16, "Tofu, koyadofu, séché et surgelé (préparé avec sulfate de calcium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3369, 16, "Soya, isolat de protéines (préparé avec potassium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3368, 16, "Soya, concentrat de protéines (préparation avec acid et de l'eau)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3367, 16, "Pois, cajan, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3366, 16, "Beurre d'arachides  croquant, gras et sucre ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3365, 16, "Arachides, Virginia, rôties à l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3364, 16, "Arachides, Balencia, rôties à l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3372, 16, "Doliques asperge, grains mûrs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3339, 16, "Falafel, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3338, 16, "Hoummos (hommos, hummus), fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3337, 16, "Pois, carrés, secs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3313, 16, "Pois, cajan, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3312, 16, "Pois, cajan, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3311, 16, "Arachides, farine, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3310, 16, "Arachides, farine, dégraissée, salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3309, 16, "Beurre d'arachides croquant, gras, sucre et sel ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3308, 16, "Arachides, Virginia, rôties à l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3307, 16, "Arachides, Virginia, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3306, 16, "Arachides, Valencia, rôties à l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3314, 16, "Haricots, sautés (frigoles refrits), conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3305, 16, "Arachides, Valencia, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3303, 16, "Arachides, Espagnoles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3302, 16, "Arachides, tous les types, rôties/sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3301, 16, "Haricots, mungo, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3300, 16, "Haricots, mungo, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3299, 16, "Ambériques, riz à long grain (nouilles chinoises), déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3298, 16, "Légumineuses, ambériques, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3297, 16, "Légumineuses, ambériques, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3296, 16, "Haricots, mat (papillon), bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3304, 16, "Arachides, Espagnoles, rôties à l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3315, 16, "Viande, simili, bacon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3316, 16, "Viande, simili, saucisse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3317, 16, "Haricots, soya, rôtis avec sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3336, 16, "Pois, carrés, secs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3335, 16, "Doliques asperge, grains mûrs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3334, 16, "Doliques asperge, grains mûrs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3333, 16, "Tofu, fuyu, salé et fermenté (préparé avec chlorure de magnésium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3332, 16, "Okara" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3331, 16, "Tofu, koyadofu, séché et surgelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3330, 16, "Soya, sauce (fait avec protéine végétale hydrolysée)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3329, 16, "Soya, sauce (fait de soya), tamari" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3328, 16, "Soya, isolat de protéines (préparé avec sodium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3327, 16, "Soya, concentré de protéines (préparation d'alcool)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3326, 16, "Soya, semoule, dégraissée, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3325, 16, "Soya, farine, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3324, 16, "Soya, farine, dégraissée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3323, 16, "Soya, farine, non dégraissée, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3322, 16, "Soya, farine, non dégraissée, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3321, 16, "Soya, produits fermenté, tempeh (tempe)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3320, 16, "Soya, produits fermentés, natto" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3319, 16, "Soya, produits fermentés, miso" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3318, 16, "Haricots, soya, rôtis à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3203, 15, "Poisson, sardine, Atlantique, conserve, dans l' huile, égoutté avec arêtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3202, 15, "Poisson, doré (doré jaune ou blanc), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3201, 15, "Poisson, baudroie d'amérique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3200, 15, "Poisson, flétan, Atlantique ou Pacifique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3088, 15, "Poisson, corégone de lac, espèces diverses, autochtone, fumées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3087, 15, "Poisson, turbot, européen, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3086, 15, "Thon, salade" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3085, 15, "Poisson, thon à nageoires jaunes, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3084, 15, "Poisson, thon, chair blanche, conserve, dans l'eau, égoutté, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3083, 15, "Poisson, thon, chair blanche, conserve à l'huile, égoutté, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3082, 15, "Poisson, bonite à ventre rayé, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3081, 15, "Poisson, thon, chair pale, conserve, dans l'eau, égoutté, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3089, 15, "Poisson, merlu (colllin), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3080, 15, "Poisson, thon rouge, frais, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3078, 15, "Poisson, tile, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3077, 15, "Poisson, tile, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3076, 15, "Poisson, espadon, cuit ar four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3075, 15, "Poisson, espadon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3074, 15, "Poisson, surimi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3073, 15, "Poisson, crapet-soleil, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3072, 15, "Poisson, meunier noir (carpe noire), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3071, 15, "Poisson, esturgeon, espèces diverses, fumées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3079, 15, "Poisson, thon rouge, frais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3070, 15, "Poisson, esturgeon, espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3090, 15, "Poisson, merlu (collin), espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3092, 15, "Poisson, sériole, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3110, 15, "Mollusques, mye (palourde), espèces diverses, panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3109, 15, "Mollusques, mye (palourde), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3108, 15, "Mollusques, ormeau, espèces diverses, enfarinées, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3107, 15, "Mollusques, ormeau, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3106, 15, "Crustacés, langouste, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3105, 15, "Crustacés, crevette, imitation (surimi)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3104, 15, "Crustacés, crevette, espèces, diverses, panées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3103, 15, "Crustacés, écrevisse, espèces diverses, sauvage, à vapeur ou bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3091, 15, "Poisson, loup de l'atlantique (loup de mer), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3102, 15, "Crustacés, écrevisse, espèces diverses, sauvage, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3100, 15, "Crustacés, crabe dormeur, pacifique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3099, 15, "Crustacés, crabe, bleu, beignets de crabe, faits maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3098, 15, "Crustacés, crabe, bleu, conserve, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3097, 15, "Crustacés, crabe, bleu, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3096, 15, "Crustacés, crabe, bleu, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3095, 15, "Crustacés, crabe royal d'alaska, imitation (fruits de mer surimi)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3094, 15, "Crustacés, crabe royal d'alaska, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3093, 15, "Crustacés, crabe royal d'alaska, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3101, 15, "Crustacés, crabe des neiges (crabe-araignée), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3069, 15, "Poisson, esturgeon, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3068, 15, "Poisson, tambour croca, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3067, 15, "Poisson, vivaneau, espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3043, 15, "Poisson, sébaste, pacifique, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3042, 15, "Poisson, pompano, floride, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3041, 15, "Poisson, pompano, floride, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3040, 15, "Poisson, morue, pacifique occidental, cuite au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3039, 15, "Poisson, morue, pacifique occidental, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3038, 15, "Poisson, goberge, atlantique (merlan, lieu noir), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3037, 15, "Poisson, grand brochet, autochtone, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3036, 15, "Poisson, grand brochet, autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3044, 15, "Poisson, sébaste, pacifique, espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3035, 15, "Poisson, perchude, espéces diverses, cuites au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3033, 15, "Poisson, loquette d'amérique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3032, 15, "Poisson, sebaste, atlantique (perche rose), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3031, 15, "Poisson, sebaste, atlantique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3030, 15, "Poisson, mulet cabot (muge cabot), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3029, 15, "Poisson, mulet cabot (muge cabot), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3028, 15, "Poisson, chanide, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3027, 15, "Poisson, thazard tacheté (atlantique), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3026, 15, "Poisson, thazard tacheté (atlantique), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3034, 15, "Poisson, perchaude, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3045, 15, "Poisson, rogue (oeufs de poisson), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3046, 15, "Poisson, hoplostète orange (\"orange roughy\"), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3047, 15, "Poisson, morue charbonnière, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3066, 15, "Poisson, vivaneau, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3065, 15, "Poisson, éperlan, arc-en-ciel (d'amérique), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3064, 15, "Poisson, éperlan, arc-en-ciel (d'amérique), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3063, 15, "Poisson, malachigan d'eau douce (\"sheepshead\"), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3062, 15, "Poisson, malachigan d'eau douce (\"sheepshead\"), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3061, 15, "Poisson, requin (aiguillat), espèces diverses, panure avec pâte et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3060, 15, "Poisson, requin, (aiguillat), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3059, 15, "Poisson, alose, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3058, 15, "Poisson, truite de mer, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3057, 15, "Poisson, bar commun (serran), espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3056, 15, "Poisson, bar commun (serran), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3055, 15, "Poisson, spare doré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3054, 15, "Poisson, sardines, Pacifique, conserve, avec sauce tomate, égouttées, avec arêtes" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3053, 15, "Poisson, saumon, rouge (sockeye), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3052, 15, "Poisson, saumon, rouge (sockeye), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3051, 15, "Poisson, saumon, quinnat (de printemps, roi), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3050, 15, "Poisson, saumon, quinnat, fumé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3049, 15, "Poisson, saumon, atlantique, sauvage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3048, 15, "Poisson, morue charbonnière, fumée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3111, 15, "Mollusques, mye (palourde), espèces diverses, à vapeur ou bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3382, 16, "Haricots, rouge foncé, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3112, 15, "Mollusques, mye (palourde), espèces diverses, conserve, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3114, 15, "Mollusques, seiche (seche, sépiole), espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3177, 15, "Mollusques, huître, pacifique (Japon), à vapeur ou bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3176, 15, "Mollusques, poulpe ordinaire, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3175, 15, "Mollusques, seiche (sèche, sepiole), espèces diverses, à vapeur ou bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3174, 15, "Crustacés, langouste, espèces diverses, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3173, 15, "Crustacés, crabe des nieges (crabe-araignée), à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3172, 15, "Crustacés, crabe dormeur du pacifique, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3171, 15, "Poisson, seriole, espèces diverses, au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3170, 15, "Poisson, loup atlantique (loup de mer), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3178, 15, "Poisson, hoplostete orange (\"orange roughy\"), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3169, 15, "Poisson, corégone de lac, autochtone, au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3167, 15, "Poisson, thon à nageoires jaunes, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3166, 15, "Poisson, bonite à ventre rayé, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3165, 15, "Poisson, crapet-soleill, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3164, 15, "Poisson, meunier noir (carpe noir), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3163, 15, "Poisson, tambour croca, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3162, 15, "Poisson, alose, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3161, 15, "Poisson, truite saumonée, espèces diverses, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3160, 15, "Poisson, spare doré, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3168, 15, "Poisson, turbot, européen, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3159, 15, "Poisson, saumon, rose, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3179, 15, "Poisson, barbue de rivière, sauvage, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3181, 15, "Poisson, barbue de rivière, élevage, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3199, 15, "Poisson, aiglefin, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3198, 15, "Poisson, aiglefin, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3197, 15, "Poisson, brosme, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3196, 15, "Poisson, morue (morue grise), pacifique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3195, 15, "Poisson, morue, atlantique, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3194, 15, "Poisson, morue, atlantique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3193, 15, "Poisson, saumon, coho, sauvage, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3192, 15, "Mollusques, huître, américaine (de l'est), élevage, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3180, 15, "Poisson, barbue de rivière, élevage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3191, 15, "Mollusques, huître, américaine (de l'est), élevage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3189, 15, "Crustacés, écrevisse, espèces diverses, élevage, à vapeur ou bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3188, 15, "Crustacés, écrevisse, espèces diverses, élevage, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3187, 15, "Poisson, truite, arc-en-ciel, élevage, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3186, 15, "Poisson, truite, arc-en-ciel, élevage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3185, 15, "Poisson, saumon, coho, élevage, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3184, 15, "Poisson, saumon, coho, élevage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3183, 15, "Poisson, saumon, atlantique, élevage, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3182, 15, "Poisson, saumon, atlantique, élevage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3190, 15, "Mollusques, huître américaine (huître de l'est), sauvage, cuite au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3158, 15, "Poisson, saumon, kéta, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3157, 15, "Poisson, saumon, quinnat (printemps, royal), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3156, 15, "Poisson, saumon, atlantique, sauvage, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3132, 15, "Poisson, thon, chair blanche, conserve dans l'huile, égoutté, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3131, 15, "Poisson, thon, chair pale, conserve, dans l'eau, égoutté, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3130, 15, "Poisson, saumon, kéta, conserve, égoutté, avec arêtes, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3129, 15, "Poisson, saumon, quinnat, fumé, lox" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3128, 15, "Mollusques, buccin, non précisé, à vapeur ou bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3127, 15, "Mollusques, buccin, non précisé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3126, 15, "Mollusques, calmar, espèces diverses, enfarinées, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3125, 15, "Mollusques, calmar, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3133, 15, "Poisson, thon, chair blanche, conserve, dans l'eau, égoutté, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3124, 15, "Mollusques, pétoncle, espèces diverses, imitation (surimi)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3122, 15, "Mollusques, huître, pacifique (Japon), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3121, 15, "Mollusques, huître, atlantique, sauvage, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3120, 15, "Mollusques, huître, atlantique, sauvage, à vapeur ou bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3119, 15, "Mollusques, huître, atlantique, sauvage, panée et frite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3118, 15, "Mollusques, huître, atlantique, sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3117, 15, "Mollusques, poulpe (pieuvre), ordinaire, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3116, 15, "Mollusques, moule, bleue, à vapeur ou bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3115, 15, "Mollusques, moule, bleue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3123, 15, "Mollusques, pétoncle, espèces diverses, pannées et frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3134, 15, "Poisson, bar d'eau douce (achigan), espèces diverses, au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3135, 15, "Poisson, bar d'Amérique, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3136, 15, "Poisson, tassergal, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3155, 15, "Poisson, morue charbonnière, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3154, 15, "Poisson, rogue (oeufs de poisson), espèces diverses, au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3153, 15, "Poisson, loquette d'amérique, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3152, 15, "Poisson, goberge, atlantique (merlan, lieu noir), au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3151, 15, "Poisson, doré (doré jaune/blanc), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3150, 15, "Poisson, baudroie, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3149, 15, "Poisson, chanos, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3148, 15, "Poisson, maquereau espagnol/chinchard, espèces diverses, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3147, 15, "Poisson, thazard, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3146, 15, "Poisson, morue-lingue, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3145, 15, "Poisson, lingue, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3144, 15, "Poisson, hareng, pacifique, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3143, 15, "Poisson, flétan, Groenland (flétan noir), au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3142, 15, "Poisson, malachigan, eau douce, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3141, 15, "Poisson, coryphène commune, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3140, 15, "Poisson, brosme, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3139, 15, "Poisson, morue, pacifique (morue grise), au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3138, 15, "Poisson, stromatée à fossettes, au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3137, 15, "Poisson, lotte (loche), autochtone, cuite au four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3113, 15, "Mollusques, mye (palourde), espèces diverses, conserve, liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3383, 16, "Haricots, petits blancs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3384, 16, "Haricots, petits blancs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3385, 16, "Haricots, blancs, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3683, 18, "Biscuit, poudre à pâte, nature/babeurre, pâte réfrigérée, élevé en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3682, 18, "Biscuit, poudre à pâte, nature/babeurre, pâte réfrigérée, moins de lipides, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3681, 18, "Biscuit, poudre à pâte, nature/babeurre, pâte réfrigérée, moins de lipides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3679, 18, "Biscuit, poudre à pâte, nature/babeurre, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3677, 18, "Bagel, son d'avoine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3676, 18, "Bagel, cannelle-raisins secs, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3675, 18, "Bagel, cannelle-raisins secs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3673, 18, "Bagel, oeufs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3684, 18, "Biscuit, poudre à pâte, nature/babeurre, pâte réfrigérée, élevé en gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3672, 18, "Bagel, nature (avec oignon, graines de pavot et/ou graines de sesame, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3667, 17, "Veau de grain, épaule, jarret, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3666, 17, "Veau de grain, épaule, jarret, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3665, 17, "Veau de grain, épaule, jarret, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3664, 17, "Veau de grain, épaule, jarret, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3663, 17, "Veau de grain, rôti d'épaule, entier, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3662, 17, "Veau de grain, rôti d'épaule, entier, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3661, 17, "Veau de grain, rôti d'épaule, entier, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3660, 17, "Veau de grain, rôti d'épaule, entier, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3671, 18, "Bagel, nature (avec oignon, graines de pavot et/ou graines de sesame)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3659, 17, "Veau de grain, côtelette, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3685, 18, "Biscuit, poudre à pâte, nature/babeurre, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3688, 18, "Pain, bananes, fait maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3726, 18, "Pain, seigle, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3725, 18, "Pain, son de riz, sans gluten" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3715, 18, "Pain blanc aux raisins, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3714, 18, "Pain blanc aux raisins, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3712, 18, "Pain, seigle noir (pumpernickel), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3711, 18, "Pain, seigle foncé (\"pumpernickel\")" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3710, 18, "Pain, protéines (inclus au gluten)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3709, 18, "Pain, pita, blé entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3686, 18, "Biscuit, poudre à pâte, multigrains, pâte réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3708, 18, "Pain, pita, blanc" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3702, 18, "Pain, multigrains (aussi blé entier, sept grains)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3700, 18, "Pain, italien" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3697, 18, "Pain, Français ou Viennois (aussi levain), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3696, 18, "Pain, oeufs, (challa), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3695, 18, "Pain, oeufs (Challa)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3693, 18, "Pain, semoule de maïs, fait maison, avec lait 2% M.G." });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3691, 18, "Pain, semoule de maïs (aussi préparation pour muffin), mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3690, 18, "Pain, \"Boston brown\", conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3703, 18, "Pain, multigrains, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3658, 17, "Veau de grain, côtelette, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3657, 17, "Veau de grain, côtelette, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3656, 17, "Veau de grain, côtelette, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3630, 17, "Agneau, rate, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3629, 17, "Agneau, rate, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3628, 17, "Veau, pancréas, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3627, 17, "Veau, pancréas, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3626, 17, "Agneau, pancréas, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3625, 17, "Agneau, pancréas, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3624, 17, "Agneau, désossé mécaniquemenet, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3623, 17, "Veau, poumons, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3631, 17, "Veau, rate, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3622, 17, "Veau, poumons, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3620, 17, "Agneau, poumons, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3619, 17, "Veau, foie, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3618, 17, "Veau, foie, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3617, 17, "Veau, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3616, 17, "Agneau, foie, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3615, 17, "Agneau, foie, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3614, 17, "Agneau, foie, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3613, 17, "Veau, rognon, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3621, 17, "Agneau, poumons, braisés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3632, 17, "Veau, rate, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3633, 17, "Veau, thymus, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3634, 17, "Veau, thymus, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3655, 17, "Veau de grain, longe, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3654, 17, "Veau de grain, longe, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3653, 17, "Veau de grain, longe, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3652, 17, "Veau de grain, longe, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3651, 17, "Veau de grain, escalopes (ronde d'intérieur), sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3650, 17, "Veau de grain, escalopes (ronde d'intérieur), braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3649, 17, "Veau de grain, escalopes (ronde d'intérieur), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3648, 17, "Gibier, viande, baleine, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3647, 17, "Gibier, viande, autochtone, morse, viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3645, 17, "Gibier, viande, phoque du groenland, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3643, 17, "Gibier, viande, grenouille, cuisses, panées, frites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3642, 17, "Gibier, viande, grenouille, cuisses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3641, 17, "Gibier, viande, autochtone, caribou (renne), moelle osseuse, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3640, 17, "Agneau, Américain, haché, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3639, 17, "Agneau, canadien, haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3638, 17, "Veau, langue, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3637, 17, "Veau, langue, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3636, 17, "Agneau, langue, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3635, 17, "Agneau, langue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3731, 18, "Pain, germe de blé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3612, 17, "Veau, rognon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3732, 18, "Pain, blanc, commercial, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3735, 18, "Pain, blanc, fait maison, avec lait 2%" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3824, 18, "Biscuit, petit four horoscope (fortune)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3823, 18, "Biscuit, figues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3822, 18, "Biscuit, macaron" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3821, 18, "Biscuit, sandwich au chocolat, fourré à la crème, extra crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3820, 18, "Biscuit, sandwich au chocolat, fourré à la crème, enrobé de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3819, 18, "Biscuit, sandwich au chocolat, fourré de crème, ordinaire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3818, 18, "Biscuit, grains de chocolat, fait maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3816, 18, "Biscuit, grains de chocolat, pâte réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3825, 18, "Biscuit, gingembre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3814, 18, "Biscuits, grains de chocolat, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3812, 18, "Biscuits, brisures de chocolat, commercial, régulier, élevé en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3811, 18, "Biscuit, grains de chocolat, commercial, régulier, moins de lipides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3810, 18, "Biscuit, gaufrette au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3809, 18, "Biscuit, fudge, type gâteau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3808, 18, "Biscuit, beurre, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3807, 18, "Biscuit, carré au chocolat, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3805, 18, "Biscuit, carré au chocolat, régulièr, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3804, 18, "Biscuit, carré au chocolat, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3813, 18, "Biscuit, grains de chocolat, type moelleux, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3803, 18, "Biscuit, à la ménagerie (arrowroot, thé social)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3826, 18, "Biscuit graham, nature ou miel (inclus cannelle)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3828, 18, "Biscuit, doigt de dame (avec jus et zeste de citron)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3851, 18, "Biscuit, sucre, pâte, réfrigérée, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3850, 18, "Biscuit, sucre, pâte réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3849, 18, "Biscuit, sucre, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3846, 18, "Biscuit, sablé, pacanes, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3845, 18, "Biscuit, sablé, nature, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3844, 18, "Biscuit, raisins secs, moelleux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3843, 18, "Biscuit, sandwich, beurre d'arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3842, 18, "Biscuit, beurre d'arachides, fait maison, avec margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3827, 18, "Biscuit graham, enrobage de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503379, 14, "Chocolat, sirop, consistance claire, moins de sucre, vitamines et minéraux ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3838, 18, "Biscuit, beurre d'arachides, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3837, 18, "Biscuit, avoine, fait maison, avec raisins secs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3835, 18, "Biscuit, avoine (avec ou sans raisins), pâte réfrigérée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3833, 18, "Biscuit, avoine (avec ou sans raisins), mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3832, 18, "Biscuit, avoine (avec ou sans raisins). commercial, moelleux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3831, 18, "Biscuit, avoine (avec ou sans raisins), commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3830, 18, "Biscuit, mélasse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3829, 18, "Biscuit, guimauve (inclus tartes), enrobage de chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3839, 18, "Biscuit, beurre d'arachides, commercial, moelleux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3801, 18, "Gâteau, au fromage, préparation, type sans cuisson, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3800, 18, "Gâteau, au fromage, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3799, 18, "Gâteau, jaune, fait maison, sans glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3761, 18, "Gâteau café, fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3760, 18, "Gâteau, blanc, fait maison, avec glaçage à la noix de coco" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3759, 18, "Gâteau, chocolat, fait maison, sans glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3757, 18, "Mélange à gâteau, chocolat (diablotin, fudge), ordinaire, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3755, 18, "Mélange à gâteau, chocolat, type pouding, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3754, 18, "Gâteau, chocolat, commercial avec glaçage chocolat, cuit en magasin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3753, 18, "Gâteau, fudge aux cerises, avec glaçage au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3750, 18, "Mélange à gâteau, carottes, type pouding, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3762, 18, "Gâteau café, cannelle avec garniture de miettes, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3748, 18, "Gâteau Boston, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3745, 18, "Mélange à gâteau, gâteau des anges, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3744, 18, "Gâteau des anges, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3743, 18, "Pain, préparation pour farce, pain de maïs, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3742, 18, "Pain, préparation pour farce, pain de maïs, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3740, 18, "Pain, préparation pour farce, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3739, 18, "Pain, bâtonnet, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3738, 18, "Pain, blé entier, fait maison (2/3 farine de blé entier), grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3737, 18, "Pain, blé entier, fait maison (2/3 de blé entier)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3746, 18, "Gâteau des anges, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3763, 18, "Gâteau café, fruits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3764, 18, "Mélange à gâteau pause-café, cannelle avec garniture de miettes, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3765, 18, "Gâteau café, cannelle, garniture de miettes, mélange sec, préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3797, 18, "Gâteau, jaune, préparation régulière, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3795, 18, "Gâteau, jaune (avec streusel), type pouding, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3794, 18, "Gâteau, jaune, commercial, avec glaçage à la vanille (blanc)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3793, 18, "Gâteau, jaune, commercial, avec glaçage chocolat, cuit en magasin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3792, 18, "Gâteau blanc, fait maison, sans glaçage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3790, 18, "Gâteau blanc, régulier, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3788, 18, "Gâteau, blanc, type pouding, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3787, 18, "Gâteau, éponge, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3786, 18, "Gâteau, éponge, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3785, 18, "Gâteau, grignotise, fourré à la crème, éponge" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3784, 18, "Gâteau, grignotise, fourré à la crème, avec glaçage au chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3778, 18, "Gâteau, quatre-quarts, préparation commerciale, faite avec autre que beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3777, 18, "Gâteau, quatre-quarts, préparation commerciale, fait avec du beurre (inclus frais et congelé)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3776, 18, "Gâteau, ananas renversé, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3774, 18, "Mélange à gâteau, marbre, type pouding, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3773, 18, "Gâteau, pain d'épices, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3771, 18, "Mélange à gâteau, pain d'épices, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3769, 18, "Mélange à gâteau, chocolat allemand, type pouding, sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3767, 18, "Gâteau, fruits, commercial" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3733, 18, "Pain, blanc, fait maison, avec lait écrémé en poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3025, 15, "Poisson, maquereau espagnol et chinchard, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3611, 17, "Agneau, rognon, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3609, 17, "Veau, coeur, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3497, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3496, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre et gras, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3495, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3494, 17, "Agneau, Nouvelle-Zélande, congelé, gigot, entier, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3493, 17, "Agneau, Nouvelle-Zélande, gigot, côtelette / steak, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3492, 17, "Agneau, Nouvelle-Zélande, congelé, gigot, entier, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3491, 17, "Agneau, Nouvelle-Zélande, congelé, gigot, côtelette / steak, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3490, 17, "Agneau, Nouvelle-Zélande, jarret, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3498, 17, "Agneau, Nouvelle-Zélande, congelé, longe, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3489, 17, "Agneau, Nouvelle-Zélande, jarret, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3487, 17, "Agneau, Nouvelle-Zélande, jarret, maigre et gras, 6mm (1/4\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3486, 17, "Agneau, Nouvelle-Zélande, coupes diverses, gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3485, 17, "Agneau, Nouvelle-Zélande, coupes diverses, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3484, 17, "Agneau, Nouvelle-Zélande, coupes diverses, maigre, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3483, 17, "Agneau, Nouvelle-Zélande, coupes diverses, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3482, 17, "Agneau, Nouvelle-Zélande, coupes diverses, maigre et gras, 6mm (1/4\") paré, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3481, 17, "Agneau, Nouvelle-Zélande, coupes diverses, maigre et gras, 6mm (1/4\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3480, 17, "Agneau, cubes à ragout ou brochette, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3488, 17, "Agneau, Nouvelle-Zélande, jarret, maigre et gras, 6mm (1/4\") paré" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3479, 17, "Agneau, cubes à ragout ou brochette, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3499, 17, "Agneau, Nouvelle-Zélande, carré, côtes partiellement exposées, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3501, 17, "Agneau, Nouvelle-Zélande, côte, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3519, 17, "Veau, cuisse (ronde), maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3518, 17, "Veau de lait, escalopes (ronde d'intérieur), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3517, 17, "Veau, cuisse (ronde), maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3516, 17, "Veau, cuisse (ronde), maigre et gras, sauté, non pané" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3515, 17, "Veau, cuisse (ronde), maigre et gras, sauté, pané" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3514, 17, "Veau, cuisse (ronde), maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3513, 17, "Veau, cuisse (ronde), maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3512, 17, "Veau, coupes diverses, gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3500, 17, "Agneau, Nouvelle-Zélande, carré, côtes partiellement exposées, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3511, 17, "Veau, coupes diverses, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3509, 17, "Veau, coupes diverses, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3508, 17, "Veau, coupes diverses, maigre et gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3507, 17, "Veau, coupes diverses, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3506, 17, "Agneau, Nouvelle-Zélande, épaule, entier, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3505, 17, "Agneau, Nouvelle-Zélande, épaule, entier, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3504, 17, "Agneau, Nouvelle-Zélande, épaule, entier, maigre et gras, 6mm (1/4\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3503, 17, "Agneau, Nouvelle-Zélande, épaule, entier, maigre et gras, 6mm (1/4\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3502, 17, "Agneau, Nouvelle-Zélande, côte, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3510, 17, "Veau, coupes diverses, maigre, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3478, 17, "Agneau, cubes à ragout ou brochette, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3460, 17, "Agneau, canadien, épaule, entier, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3458, 17, "Agneau, canadien, épaule, entier, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3404, 16, "Tofu, régulier, ferme ou extra ferme, nature (préparé avec sulfate de calcium et chlorure de magnésium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3403, 16, "Soya, sauce (fait avec soya et blé) shoyu, ordinaire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3401, 16, "Haricots, soya, sec, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3400, 16, "Haricots, soya, sec, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3399, 16, "Beurre d'arachides  crémeux, gras, sucre et sel ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3398, 16, "Arachides, tous les types, rôties à l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3397, 16, "Arachides, tous les types, bouillies, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3396, 16, "Arachides, tous les types, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3407, 16, "Haricots, rouge foncé, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3395, 16, "Pois cassés, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3393, 16, "Lentilles, bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3392, 16, "Lentilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3391, 16, "Chili avec haricots, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3390, 16, "Pois chiches (garbanzo), bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3389, 16, "Pois chiches (garbanzo), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3388, 16, "Gourganes (fèves des marais, fava), déshydratées, bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3387, 16, "Gourganes (fèves des marais, fava), déshydratées, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3386, 16, "Haricots, blancs, bouillis" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3394, 16, "Pois, cassés, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3408, 16, "Haricots, petits blancs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3409, 16, "Haricots, blancs, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3410, 16, "Pois chiches, (garbanzo), bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3452, 17, "Agneau, canadien, côte, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3451, 17, "Agneau, canadien, côte, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3446, 17, "Agneau, canadien, longe, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3445, 17, "Agneau, canadien, longe, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3433, 17, "Agneau, canadien, gigot, entier, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3432, 17, "Agneau, canadien, gigot, entier, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3429, 17, "Agneau, canadien, jarret, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3428, 17, "Agneau, canadien, jarret, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3425, 17, "Agneau, canadien, gras, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3424, 17, "Agneau, canadien, gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3423, 17, "Agneau, canadien, coupes diverses, maigre, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3422, 17, "Agneau, canadien, coupes diverses, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3418, 16, "Tofu, régulier; mi-ferme ou ferme, nature (préparé avec sulfate de calcium)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3416, 16, "Soya, sauce (fait avec soya et blé), shoyu, réduit en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3415, 16, "Haricots, soya, sec, bouilli, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3414, 16, "Beurre d'arachides  crémeux, gras et sucre ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3413, 16, "Arachides, tous les types, rôties à l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3412, 16, "Pois, cassés, bouillis, salés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3411, 16, "Lentilles, bouillies, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3520, 17, "Veau, cuisse (ronde), maigre, sauté, pané" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3610, 17, "Agneau, rognon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3521, 17, "Veau de lait, escalopes (ronde d'intérieur), sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3523, 17, "Veau, longe, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3586, 17, "Gibier, viande, cheval, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3585, 17, "Gibier, viande, cheval, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3584, 17, "Gibier, viande, chèvre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3583, 17, "Gibier, viande, chèvre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3582, 17, "Gibier, viande, wapiti (élan), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3581, 17, "Gibier, viande, wapiti (élan), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3580, 17, "Gibier, viande, chevreuil (venaison), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3579, 17, "Gibier, viande, chevreuil (venaison), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3587, 17, "Gibier, viande, autochtone, orignal, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3578, 17, "Gibier, viande, autochtone, caribou, (renne), viande, cuite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3576, 17, "Gibier, viande, buffle des Indes (arni), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3575, 17, "Gibier, viande, buffle des Indes (arni), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3574, 17, "Gibier, viande, sanglier, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3573, 17, "Gibier, viande, sanglier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3572, 17, "Gibier, viande, bison, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3571, 17, "Gibier, viande, bison, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3570, 17, "Gibier, viande, \"beefalo\", coupes diverses, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3569, 17, "Gibier, viande, \"beefalo\", coupes diverses, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3577, 17, "Gibier, viande, autochtone, caribou, (renne), viande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3568, 17, "Gibier, viande, autochtone, castor, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3588, 17, "Gibier, viande, autochtone, orignal, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3590, 17, "Gibier, viande, rat musqué, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3608, 17, "Veau, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3607, 17, "Agneau, coeur, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3606, 17, "Agneau, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3605, 17, "Veau, cervelle, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3604, 17, "Veau, cervelle, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3603, 17, "Veau, cervelle, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3602, 17, "Agneau, cervelle, sautée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3601, 17, "Agneau, cervelle, braisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3589, 17, "Gibier, viande, autochtone, rat musqué, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3600, 17, "Agneau, cervelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3598, 17, "Gibier, viande, écureuil, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3597, 17, "Gibier, viande, raton laveur, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3596, 17, "Gibier, viande, autochtone, lapin, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3595, 17, "Gibier, viande, autochtone, lapin, sauvage, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3594, 17, "Gibier, viande, lapin domestique, coupes diverses, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3593, 17, "Gibier, viande, lapin domestique, coupes diverses, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3592, 17, "Gibier, viande, lapin domestique, coupes diverses, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3591, 17, "Gibier, viande, sarigue (opossum), rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3599, 17, "Gibier, viande, écureuill, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3567, 17, "Gibier, viande, autochtone, castor, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3566, 17, "Gibier, viande, autochtone, ours, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3565, 17, "Gibier, viande, autochtone, ours, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3541, 17, "Veau, épaule, jarret, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3540, 17, "Veau de lait, rôti d'épaule, entier, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3539, 17, "Veau, épaule, entier, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3538, 17, "Veau de lait, rôti d'épaule, entier, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3537, 17, "Veau de lait, rôti d'épaule, entier, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3536, 17, "Veau, épaule, entier, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3535, 17, "Veau de lait, rôti d'épaule, entier, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3534, 17, "Veau, côte, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3542, 17, "Veau, épaule, jarret, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3533, 17, "Veau, côte, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3531, 17, "Veau, côte, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3530, 17, "Veau, côte, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3529, 17, "Veau de lait, côtelette, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3528, 17, "Veau, longe, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3527, 17, "Veau, longe, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3526, 17, "Veau, longe, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3525, 17, "Veau, longe, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3524, 17, "Veau, longe, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3532, 17, "Veau de lait, côtelette, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3543, 17, "Veau, épaule, jarret, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3544, 17, "Veau, épaule, jarret, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3545, 17, "Veau, épaule, jarret, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3564, 17, "Gibier, viande, antilope, rôtie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3563, 17, "Gibier, viande, antilope, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3562, 17, "Veau, haché, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3561, 17, "Veau, haché, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3560, 17, "Veau, cubes à ragout (cuisse et épaule), maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3559, 17, "Veau, cubes à ragout (cuisse et épaule), maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3558, 17, "Veau, surlonge, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3557, 17, "Veau, surlonge, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3556, 17, "Veau, surlonge, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3555, 17, "Veau, surlonge, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3554, 17, "Veau, surlonge, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3553, 17, "Veau, surlonge, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3552, 17, "Veau, épaule, palette, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3551, 17, "Veau, épaule, palette, maigre, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3550, 17, "Veau, épaule, palette, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3549, 17, "Veau, épaule, palette, maigre et gras, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3548, 17, "Veau, épaule, palette, maigre et gras, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3547, 17, "Veau, épaule, palette, maigre et gras, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3546, 17, "Veau, épaule, jarret, maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3522, 17, "Veau, cuisse (ronde), maigre, rôti" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3024, 15, "Poisson, thazard bané (maquereau royal), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3023, 15, "Poisson, chinchard, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3022, 15, "Poisson, maquereau bleu, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2380, 11, "Carotte, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2379, 11, "Choux de Bruxelles, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2378, 11, "Choux de Bruxelles, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2377, 11, "Brocoli, congelé, haché, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2376, 11, "Brocoli, congelé, haché, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2375, 11, "Brocoli, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2374, 11, "Brocoli, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2373, 11, "Betteraves, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2381, 11, "Carotte, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2372, 11, "Haricots italiens, jaunes ou verts, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2370, 11, "Haricots italiens, jaunes ou verts, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2369, 11, "Haricots, lima, petits, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2368, 11, "Haricots, lima, petits, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2367, 11, "Bambou, pousses, conserve, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2366, 11, "Asperge, conserve, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2365, 11, "Artichaut, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2364, 11, "Artichaut, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2363, 11, "Concombre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2371, 11, "Haricots italiens, jaunes ou verts, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2362, 11, "Chou, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2382, 11, "Carotte, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2384, 11, "Carotte, congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2402, 11, "Oignon, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2401, 11, "Oignon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2400, 11, "Champignon, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2399, 11, "Champignon, blanc, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2398, 11, "Laitue iceberg (pommée)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2397, 11, "Poireaux (bulbe et portion inférieure), bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2396, 11, "Poireaux (bulbe et portion inférieure), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2395, 11, "Chou vert frisé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2383, 11, "Carotte, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2394, 11, "Ail, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2392, 11, "Maïs sucré, jaune, congelé, en grains, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2391, 11, "Maïs sucré, jaune, congelé, en grains, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2390, 11, "Maïs sucré, conserve, emballage sous vide, grains entiers" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2389, 11, "Maïs sucré, conserve, en crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2388, 11, "Maïs sucré, jaune, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2387, 11, "Céleri, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2386, 11, "Céleri, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2385, 11, "Chou-fleur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2393, 11, "Maïs sucré, congelé, en épi, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2361, 11, "Chou, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2360, 11, "Chou-fleur, vert, bouilli, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2359, 11, "Chou-fleur, vert, bouilli" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2335, 11, "Pomme de terre, purée, déshydratée, granules sans lait, préparée avec lait entier et margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2333, 11, "Doliques à oeil noir, bouillis, égouttés, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2332, 11, "Chou cavalier (collards), bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2331, 11, "Brocoli, congelé, tiges et têtes, bouillies, égouttées, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2330, 11, "Haricots jaunes, congelés, bouillis, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2328, 11, "Haricots italiens, jaunes ou verts, congelés, bouillis, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2327, 11, "Artichaut, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2326, 11, "Échalote, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2336, 11, "Pomme de terre, purée, faite maison, préparée avec lait entier et beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2325, 11, "Radis, graines, germées, avec graines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2323, 11, "Pomme de terre, O'brien, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2322, 11, "Piment, fort du Chili, rouge ou verts, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2321, 11, "Algue, wakame, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2320, 11, "Algue, spiruline, séchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2319, 11, "Algue, spiruline, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2318, 11, "Algue, agar, séché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2317, 11, "Tomate, rouge, mûre, étuvée (escalopes avec chapelure)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2316, 11, "Patate douce, cuite, confite, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2324, 11, "Pommes de terre, crêpe, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2337, 11, "Marinades, cornichons sucrés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2338, 11, "Marinades, cornichons sûrs" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2339, 11, "Marinades, relish, chien chaud (hot-dog)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2358, 11, "Chou-fleur, vert, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2357, 11, "Nopales (figue de Barbarie), cuits" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2356, 11, "Nopales (figue de Barbarie), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2355, 11, "Piment, fort du Chili, rouge, séché au soleil" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2354, 11, "Palmiers, coeurs, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2353, 11, "Carotte, petite, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2352, 11, "Roquette (arugula), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2351, 11, "Marinades, relish, hambourgeois" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2350, 11, "Fenouil, bulbe, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2349, 11, "Tomate, séchée au soleil, empaquetée dans l'huile, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2348, 11, "Tomate, séchée au soleil" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2347, 11, "Tomatille, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2346, 11, "Courges d'été, courgettes (zucchini), naines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2345, 11, "Radicchio, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2344, 11, "Poivron jaune, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2343, 11, "Champignon, enoki, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2342, 11, "Marinades, cornichons sucrés, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2341, 11, "Marinades, cornichons sûrs, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2340, 11, "Marinades, relish, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2403, 11, "Oignons en rondelles, panés, pré-frits, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2315, 11, "Épinard, soufflé, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2404, 11, "Oignons en rondelles, panés, pré-frits, congelés, chauffés au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2406, 11, "Panais, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2470, 11, "Navet, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2469, 11, "Produits à base de tomates, conserve, sauce avec morceaux de tomates" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2468, 11, "Produits à base de tomates, conserve,  sauce avec oignons, poivrons verts et céleri" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2467, 11, "Produits à base de tomates, conserve, sauce avec fines herbes et fromage" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2466, 11, "Produits à base de tomates, conserve, sauce avec champignons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2465, 11, "Produits à base de tomates, conserve, sauce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2464, 11, "Jus, tomates, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2463, 11, "Tomate, rouge, mûre, conserve, étuvée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2471, 11, "Navet, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2462, 11, "Tomate, rouge, mûre, conserve, entière" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2460, 11, "Tomate, rouge, mûre, crue, moyenne durant toute l'année" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2459, 11, "Courge d'hiver, spaghetti, au four ou bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2458, 11, "Courge d'hiver, spaghetti, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2457, 11, "Courge d'hiver, hubbard, bouillie, en purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2456, 11, "Courge d'hiver, hubbard, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2455, 11, "Courge d'hiver, hubbard, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2454, 11, "Courge d'hiver, courge musquée, congelée, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2453, 11, "Courge d'hiver, courge musquée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2461, 11, "Tomate, rouge, mûre, bouillie" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2452, 11, "Courge d'hiver, courge musquée, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2472, 11, "Navet, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2474, 11, "Légumes, macédoine, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2494, 11, "Tomates, ketchup (catsup)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2493, 11, "Maïs sucré, blanc, congelé, grains, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2492, 11, "Maïs sucré, blanc, congelé, grains, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2491, 11, "Maïs sucré, blanc, congelé, grains, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2490, 11, "Tomate, rouge, mûre, bouillie, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2487, 11, "Poivron rouge, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2486, 11, "Poivron rouge, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2485, 11, "Poivron vert, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2473, 11, "Légumes, jus, cocktail, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2484, 11, "Poivron rouge, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2482, 11, "Maïs sucré, jaune, congelé, en grains, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2481, 11, "Céleri, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2480, 11, "Brocoli, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2479, 11, "Pomme de terre, chair et pelure, cuite au four à micro-ondes avec la pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2478, 11, "Pomme de terre, chair et pelure, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2477, 11, "Piment jalapeno, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2476, 11, "Betteraves marinées, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2475, 11, "Betteraves harvard, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2483, 11, "Oignon, bouilli, égoutté, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2451, 11, "Courge d'hiver, courge musquée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2450, 11, "Courge d'hiver, courge poivrée (courgeon), bouillie, en purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2449, 11, "Courge d'hiver, courge poivrée (courgeon), cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2424, 11, "Pomme de terre, pelure, cuite au four à micro-ondes avec la pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2423, 11, "Pomme de terre, chair, cuite au four à micro-ondes avec la pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2422, 11, "Pomme de terre, bouillie sans pelure, chair" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2421, 11, "Pomme de terre, bouillie avec la pelure, chair" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2420, 11, "Pomme de terre, pelure, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2419, 11, "Pomme de terre, chair, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2418, 11, "Pomme de terre, pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2417, 11, "Pomme de terre, chair, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2425, 11, "Pomme de terre, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2416, 11, "Poivron vert, congelé, haché, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2414, 11, "Poivron vert, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2413, 11, "Poivron vert, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2412, 11, "Pois, petits (verts), congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2411, 11, "Pois, petits (verts), conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2410, 11, "Pois, petits (verts), bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2409, 11, "Pois, petits (verts), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2408, 11, "Pois mange-tout, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2407, 11, "Panais, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2415, 11, "Poivron vert, congelé, haché, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2426, 11, "Pomme de terre, purée, flocons sans lait, sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2427, 11, "Pomme de terre, purée, préparée à partir de flocons sans lait, lait entier et beurre ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2428, 11, "Pomme de terre, en escalopes, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2448, 11, "Courge d'hiver, courge poivrée (courgeon), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2447, 11, "Épinard, conserve, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2445, 11, "Rutabaga (chou-navet), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2444, 11, "Rutabaga (chou-navet),  cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2443, 11, "Radis, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2442, 11, "Citrouille, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2441, 11, "Citrouille, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2440, 11, "Pomme de terre, farine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2439, 11, "Pomme de terre, frite, congelée, extrudée, réchauffée au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2438, 11, "Pomme de terre, frite, congelée, coupe cottage, sel non ajouté lors de la transformation, réchauffée au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2437, 11, "Pomme de terre, frite, congelée, coupe cottage, sans sel ajouté lors de la transformation, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2436, 11, "Pomme de terre, frite, congelée, préparée au restaurant avec de l'huile végétale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2435, 11, "Pomme de terre, frite, congelée, tous les types, sel ajouté lors de la transformation, réchauffée au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2434, 11, "Pomme de terre, frite, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2433, 11, "Pomme de terre, soufflée, congelée, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2432, 11, "Pomme de terre, soufflée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2431, 11, "Pomme de terre, rissolée, congelée, nature, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2430, 11, "Pomme de terre, rissolée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2429, 11, "Pomme de terre, en escalopes, mélange sec, préparé avec eau, lait entier et beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2405, 11, "Persil, frais" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2495, 11, "Marinades, cornichons à l'aneth (inclus Cacher et Polonais)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2314, 11, "Pomme de terre, purée, faite maison, préparée avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2312, 11, "Carotte, jus, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2199, 11, "Salsifis, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2198, 11, "Radis, orientaux (daikon), séchés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2197, 11, "Radis, oriental (daikon), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2196, 11, "Radis, orientaux (daikon), crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2195, 11, "Pourpier, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2194, 11, "Pourpier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2193, 11, "Citrouille, mélange à tarte, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2192, 11, "Citrouille, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2200, 11, "Salsifis, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2191, 11, "Citrouille, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2189, 11, "Citrouille, fleurs, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2188, 11, "Citrouille, fleurs, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2187, 11, "Pomme de terre, salade, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2186, 11, "Pomme de terre, frite, congelée, extrudée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2185, 11, "Pomme de terre, frite, congelée, préparée au restaurant, frite dans l'huile végétale et gras animal" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2184, 11, "Pomme de terre, entière, congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2183, 11, "Pomme de terre, entière, pelée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2182, 11, "Pomme de terre, O'brien, congelée, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2190, 11, "Citrouille, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2181, 11, "Pomme de terre, O'brien, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2201, 11, "Choucroute, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2203, 11, "Algue, mousse d'Irlande, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2221, 11, "Courge d'été, musquée, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2220, 11, "Courge d'été, musquée, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2219, 11, "Courge d'été, musquée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2218, 11, "Courge d'été, musquée, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2217, 11, "Épinard, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2216, 11, "Épinard, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2215, 11, "Épinard, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2214, 11, "Épinard, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2202, 11, "Algue, agar, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2213, 11, "Épinard, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2211, 11, "Fèves, soya, sèches, germées, germes de haricot, cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2210, 11, "Fèves, soya, sèches, germées, germes de haricot, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2209, 11, "Fèves, soya frais (edamame), bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2208, 11, "Fèves, soya frais (edamame), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2207, 11, "Fagotier, fleurs, cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2206, 11, "Fagotier, fleurs, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2205, 11, "Algue, rhodyménie palmé (main de mere, nori), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2204, 11, "Algue, varech (kelp, kombu, tangle), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2212, 11, "Fèves, soya, sèches, germées, germes de haricot, sautées, sans gras ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2180, 11, "Pomme de terre, rissolée, congelée, avec sauce au beurre, préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2179, 11, "Pomme de terre, rissolée, congelée, avec sauce au beurre, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2178, 11, "Pomme de terre, au gratin, mélange sec, préparé avec eau, lait entier et beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2154, 11, "Pois et carottes, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2153, 11, "Pois secs, germés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2152, 11, "Pois secs, germés, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2151, 11, "Pois, petits (verts), congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2150, 11, "Pois, petits (verts), conserve, assaisonnés, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2149, 11, "Pois, petits (verts), conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2148, 11, "Pois mange-tout, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2147, 11, "Pois mange-tout, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2155, 11, "Pois et carottes, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2146, 11, "Pois mange-tout, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2144, 11, "Oignon, vert (inclus le bout et le bulbe), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2143, 11, "Oignon, congelé, entier, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2142, 11, "Oignon, congelé, entier, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2141, 11, "Oignon, congelé, haché, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2140, 11, "Oignon, congelé, haché, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2139, 11, "Oignon, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2138, 11, "Oignon, flocons déshydratés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2137, 11, "Okra (gombo), congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2145, 11, "Oignon vert (ciboule), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2156, 11, "Pois et carottes, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2157, 11, "Pois et oignons, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2158, 11, "Pois et oignons, congelés, non préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2177, 11, "Pomme de terre, au gratin, mélange sec, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2176, 11, "Pomme de terre, purée, déshydratée, granules avec lait, eau et margarine ajoutées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2175, 11, "Pomme de terre, purée, déshydratée, granules avec lait, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2174, 11, "Pomme de terre, purée, déshydratée, granules sans lait, lait entier et beurre ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2173, 11, "Pomme de terre, purée, déshydratée, granules sans lait, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2172, 11, "Pomme de terre, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2171, 11, "Pomme de terre, au gratin, faite maison, avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2170, 11, "Pomme de terre, escaloppe (dauphinoise), faite maison, avec beurre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2169, 11, "Pomme de terre, purée, faite maison, préparée avec lait entier et margarine" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2168, 11, "Pomme de terre, rissolée, faite maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2167, 11, "Pomme de terre, bouillie avec la pelure, pelure seulement" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2166, 11, "Phytolaque d'Amérique, pousses, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2165, 11, "Phytolaque d'Amérique, pousses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2164, 11, "Poi" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2163, 11, "Pois, cajan, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2162, 11, "Pois, cajan, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2161, 11, "Poivron vert, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2160, 11, "Piment, fort du Chili, rouge ou vert, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2159, 11, "Pois et oignons, congelés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2222, 11, "Courge d'été, musquée, congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2313, 11, "Maïs, pouding, fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2223, 11, "Courge d'été, pâtisson, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2225, 11, "Courge d'été, courgette (zucchini), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2289, 11, "Ciboulette, lyophilisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2288, 11, "Bourrache, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2287, 11, "Bourrache, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2286, 11, "Doliques bulbeux, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2285, 11, "Doliques bulbeux, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2284, 11, "Igname, bouillie, égouttée ou au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2283, 11, "Igname, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2282, 11, "Pois carrés, tubercule, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2290, 11, "Oseille, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2281, 11, "Pois carrés, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2279, 11, "Pois carrés, verts, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2278, 11, "Waxgourd (melon d'eau chinois), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2277, 11, "Waxgourd (melon d'eau chinois), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2276, 11, "Cresson de fontaine, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2275, 11, "Châtaignes d'eau, chinoises, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2274, 11, "Châtaignes d'eau, chinoises, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2273, 11, "Baselle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2272, 11, "Légumes, macédoine, congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2280, 11, "Pois carrés, verts, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2271, 11, "Légumes, macédoine, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2291, 11, "Oseille, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2293, 11, "Cassier (ben oléifère), gousses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2311, 11, "Haricots, pinto, secs, germés, bouillis, égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2310, 11, "Haricots, pinto, secs, germés, crus" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2309, 11, "Produits à base de tomates, conserve, sauce, style espagnol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2308, 11, "Patate douce, conserve, dans du sirop, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2307, 11, "Patate douce, conserve, dans du sirop, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2306, 11, "Courge d'hiver, toutes variétés, cuites au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2305, 11, "Courge d'hiver, toutes variétés, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2304, 11, "Courge d'été, toutes variétés, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2292, 11, "Eppaw de l'Oregon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2303, 11, "Courge d'été, toutes variétés, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2301, 11, "Radis, \"white icicle\", cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2300, 11, "Poivron vert, lyophilisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2299, 11, "Haricots, mungo, secs, germés, germes de haricot, conserve, solides égouttés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2298, 11, "Persil, lyophilisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2297, 11, "Poireaux (bulbe et portion inférieure), lyophilisés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2296, 11, "Chou à feuilles, non pommé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2295, 11, "Chou à feuilles, non pommé, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2294, 11, "Cassier (ben oléifère), gousses, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2302, 11, "Échalote, lyophilisée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2270, 11, "Légumes, macédoine, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2269, 11, "Navet, feuilles et racines, congelées, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2268, 11, "Navet, feuilles et racines, congelées, non préparées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2243, 11, "Patate douce, conserve, sous vide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2242, 11, "Patate douce, bouillie sans la pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2241, 11, "Patate douce, cuite au four, pelée après la cuisson" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2240, 11, "Patate douce, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2239, 11, "Patate douce, feuilles, cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2238, 11, "Patate douce, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2237, 11, "Patate aquatique, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2236, 11, "Patate aquatique, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2244, 11, "Patate douce, conserve, purée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2235, 11, "Succotash, congelé, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2233, 11, "Succotash, conserve avec maïs en grains, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2232, 11, "Succotash, conserve avec maïs en crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2231, 11, "Succotash, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2230, 11, "Succotash, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2229, 11, "Courge d'été, courgette (zucchini) avec jus de tomates, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2228, 11, "Courge d'été, courgette (zucchini), congelée, bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2227, 11, "Courge d'été, courgette (zucchini), congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2226, 11, "Courge d'été, courgette (zucchini), bouillie, égouttée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2234, 11, "Succotash, congelé, non préparé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2245, 11, "Patate douce, congelée, non préparée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2246, 11, "Patate douce, congelée, cuite au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2247, 11, "Taro, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2267, 11, "Navet, feuilles, congelées, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2266, 11, "Navet, feuilles, congelées, non préparées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2265, 11, "Navet, feuilles, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2264, 11, "Navet, feuilles, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2263, 11, "Navet, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2262, 11, "Navet, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2261, 11, "Produits à base de tomates, conserve, sauce, avec oignons" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2260, 11, "Tomate, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2259, 11, "Produits à base de tomates, conserve, purée, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2258, 11, "Produits à base de tomates, pâte, conserve, sans sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2257, 11, "Tomate, rouge, mûre, conserve avec piments verts" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2255, 11, "Tomate, verte, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2254, 11, "Taro, Tahiti, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2253, 11, "Taro, Tahiti, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2252, 11, "Taro, pousses, cuites" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2251, 11, "Taro, pousses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2250, 11, "Taro, feuilles, cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2249, 11, "Taro, feuilles, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2248, 11, "Taro, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2224, 11, "Courge d'été, pâtisson, bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2135, 11, "Okra (gombo), bouilli, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2496, 11, "Piments de la Jamaïque, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2498, 11, "Tomates, ketchup (catsup), faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2900, 14, "Lait malté, saveur chocolat, enrichi, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2899, 14, "Lait malté, saveur naturelle, poudre, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2898, 14, "Lait malté, saveur naturelle, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2896, 14, "Lait malté, saveur naturelle, enrichi, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2895, 14, "Lime, boisson (limeade), concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2894, 14, "Lime, boisson (limeade), concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2893, 14, "Limonade, blanche, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2892, 14, "Limonade, blanche, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2902, 14, "Lait malté, saveur chocolat, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2889, 14, "Boisson au jus, agrumes, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2885, 14, "Boisson au jus, canneberges et abricots, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2884, 14, "Café, succédané, boisson de céréales, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2883, 14, "Café, succédané, boisson de céréales, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2882, 14, "Café instantané, avec sucre, saveur Française, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2881, 14, "Café instantané, avec sucre, saveur cappucino, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2880, 14, "Café instantané, avec sucre, saveur moka, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2879, 14, "Café instantané avec chicorée, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2878, 14, "Café instantané avec chicorée, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2888, 14, "Boisson au jus, agrumes, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2877, 14, "Café instantané, décaféiné, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2903, 14, "Lait malté, saveur de chocolat, poudre, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2905, 14, "Lait frappé (restauration-minute), chocolat" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2926, 14, "Boissons gazeuses, cola avec aspartame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2925, 14, "Alcoolisé, liqueur, café et crème (17% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2924, 14, "Alcoolisé, liqueur, café (26,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2922, 14, "Boisson au jus, punch aux fruits, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2921, 14, "Boisson au jus, punch aux fruits, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2920, 14, "Boissons gazeuses, cola, restaurant-minute" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2919, 14, "Eau de source, \"POLAND SPRINGS\", bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2918, 14, "Eau minérale, gazéifiée, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2904, 14, "Boisson au jus, orange et abricots, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2916, 14, "Tisane infusée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2914, 14, "Thé instantané, sucré, saveur de citron, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2912, 14, "Thé instantané, non sucré, saveur de citron, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2911, 14, "Thé instantané, non sucré, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2910, 14, "Thé instantané, non sucré, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2909, 14, "Thé infusé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2908, 14, "Fraises, mélange à saveur, poudre, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2907, 14, "Fraises, mélange à saveur, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2906, 14, "Lait frappé (restauration-minute), vanille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2915, 14, "Thé instantané, sucré, saveur de citron, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2876, 14, "Café instantané, décaféiné, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2875, 14, "Café instantané, ordinaire, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2874, 14, "Café instantané, régulier, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2848, 14, "Alcoolisé, vin de dessert, sucré (18,8% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2847, 14, "Alcoolisé, whisky (43% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2846, 14, "Alcoolisé, vodka  (40% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2845, 14, "Alcoolisé, rhum  (40% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2844, 14, "Alcoolisé, whisky (40% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2843, 14, "Alcoolisé, liqueur, crème de menthe (36% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2842, 14, "Alcoolisé, cocktail, whisky sour, mélange, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2841, 14, "Alcoolisé, cocktail, whisky sour, mélange, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2849, 14, "Alcoolisé, vin de table, tous (11,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2838, 14, "Alcoolisé, cocktail, pina colada (rhum), fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2835, 14, "Alcoolisé, bière, légère (4% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2828, 13, "Boeuf, salé, \"corned beef\", extérieur et noix de ronde, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2798, 13, "Boeuf, langue de, en pot ou à la diable" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2797, 13, "Boeuf, langue, entière, conserve ou mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2792, 7, "Charcuterie, pastrami, boeuf, tranché" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2791, 13, "Boeuf, salé, \"corned beef\", conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2790, 13, "Boeuf, salé, \"corned beef\", pointe de poitrine, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2789, 13, "Boeuf, salé, \"corned beef\", pointe de poitrine, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2837, 14, "Alcoolisé, cocktail, daiquiri (rhum), fait maison" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2850, 14, "Alcoolisé, vin de table, rouge (11,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2851, 14, "Alcoolisé, vin de table, rosé (11,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2852, 14, "Alcoolisé, vin de table, blanc (11,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2873, 14, "Café infusé, préparé avec l'eau du robinet" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2871, 14, "Chocolat chaud, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2869, 14, "Chocolat chaud, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2868, 14, "Jus, cocktail de tomate et de palourdes, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2867, 1, "Chocolat, sirop, consistance claire, lait entier ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2866, 19, "Chocolat, sirop, consistance claire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2865, 14, "Boisson, mélange à saveur, chocolat, poudre, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2864, 14, "Boisson, mélange à saveur, chocolat, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2863, 14, "Boisson, mélange à saveur, caroube, poudre, avec lait entier ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2862, 14, "Boisson, mélange à saveur, caroube, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2861, 14, "Boissons gazeuses, soda racinette" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2860, 14, "Boissons gazeuses, soda tonique (quinine)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2859, 14, "Boissons gazeuses, type pepper" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2858, 14, "Boissons gazeuses, soda à l'orange" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2857, 14, "Boissons gazeuses, soda au citron et à la lime" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2856, 14, "Boissons gazeuses, soda au raisin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2855, 14, "Boissons gazeuses, soda au gingembre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2854, 14, "Boissons gazeuses, soda mousse" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2853, 14, "Boissons gazeuses, soda nature (club soda)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2928, 14, "Café instantané, sucré, saveur cappucino, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2788, 13, "Boeuf, foie de, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2929, 14, "Café instantané, sucré, saveur française, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2931, 14, "Café, succédané, boisson de céréales, poudre, avec lait entier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2999, 15, "Poisson, morue de l'atlantique, déshydratée et salée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2998, 15, "Poisson, morue de l'atlantique, conserve, solides et liquide" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2997, 15, "Poisson, cisco (hareng de lac), autochtone, fumé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2996, 15, "Poisson, cisco (hareng de lac), autochtone, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2995, 15, "Poisson, caviar, noir et rouge, granuleux" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2994, 15, "Poisson, barbue de rivière, sauvage, panée et frite" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2993, 15, "Poisson, barbue de rivière, sauvage, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2992, 15, "Poisson, carpe, cuite ar four ou grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3000, 15, "Poisson, tambour brésilien, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2991, 15, "Poisson, carpe, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2989, 15, "Poisson, lotte (loche), autochtone, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2988, 15, "Poisson, tassergal, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2987, 15, "Poisson, bar, d'amérique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2986, 15, "Poisson, bar, d'eau douce, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2985, 15, "Poisson, anchois, européen, conserve avec huile d'olive, égoutté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2984, 15, "Poisson, anchois, eueropéen, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2983, 14, "Boisson, saveur limonade, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2982, 14, "Boisson, saveur limonade, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2990, 15, "Poisson, stromatée à fossettes, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2981, 14, "Boisson, saveur punch aux fruits, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3001, 15, "Poisson, tambour brésilien, pané et frit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3003, 15, "Poisson, malachigan d'eau douce (drum), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3021, 15, "Poisson maquereau bleu, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3020, 15, "Poisson, morue lingue, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3019, 15, "Poisson, lingue, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3018, 15, "Poisson, hareng, pacifique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3017, 15, "Poisson, hareng, atlantique, fumé et salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3016, 15, "Poisson, hareng, atlantique, mariné" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3015, 15, "Poisson, hareng, atlantique, cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3014, 15, "Poisson, hareng, atlantique, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3002, 15, "Poisson, coryphène commune, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3013, 15, "Poisson, flétan, Groenland (flétan noir), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3011, 15, "Poisson, aiglefin (\"finnan haddie\"), fumé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3010, 15, "Poisson, merou, espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3009, 15, "Poisson, merou, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3008, 15, "Poisson, gefiltefish à la juive, commercial, recette sucrée avec bouillon" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3007, 15, "Poisson plat (plie ou flet ou sole), cuit au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3006, 15, "Poisson, bâtonnets, congelés, préparés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3005, 15, "Poisson, anguille, espèces diverses, cuites au four ou grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3004, 15, "Poisson, anguille, espèces diverses, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 3012, 15, "Poisson, flétan, Atlantique ou Pacifique, au four ou grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2980, 14, "Boisson, saveur punch aux fruits, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2979, 14, "Déjeuner instantané, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2978, 14, "Alcoolisé, boisson au vin" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2954, 14, "Boisson au jus, canneberges et pommes, vitamine C ajoutée, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2953, 14, "Chocolat chaud, avec aspartame, mélange sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2952, 14, "Alcoolisé, gin (40% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2951, 14, "Alcoolisé, cocktail, scotch et soda" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2949, 14, "Alcoolisé, cocktail, mélange de whisky sour en bouteille, whisky ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2948, 14, "Alcoolisé, cocktail, mélange de whisky sour en poudre, eau et whisky ajoutés" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2943, 14, "Alcoolisé, bière ordinaire (5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2942, 14, "Thé infusé, chamomile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2955, 14, "Boisson au jus, canneberges et raisins, vitamine C ajoutée, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2941, 14, "Thé infusé avec eau distillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2939, 14, "Limonade rose, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2938, 14, "Boissons gazeuses, non cola avec aspartame" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2937, 14, "Alcoolisé, vin de dessert, sec (18,8% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2936, 14, "Alcoolisé, liqueur, café (31,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2935, 14, "Alcoolisé, whisky (50% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2934, 14, "Alcoolisé, whisky (47% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2933, 14, "Eau municipale" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2932, 14, "Lait frappé (restauration-minute), fraise" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2940, 14, "Limonade rose, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2956, 14, "Jus, cocktail, canneberges, vitamine C ajoutée, bouteille" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2957, 14, "Boisson, punch aux fruits, vitamine C ajoutée, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2958, 14, "Boisson, punch aux fruits, vitamine C ajoutée, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2977, 14, "Alcoolisé, whisky (45% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2976, 14, "Jus, cocktail, canneberges, vitamine C ajoutée, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2975, 14, "Jus, cocktail, canneberges, vitamine C ajoutée, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2974, 14, "Boisson, orange, vitamine C ajoutée, concentré congelé, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2973, 14, "Boisson, orange, avec pulpe, vitamine C ajoutée, concentré congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2972, 14, "Boisson, saveur orange, vitamine C ajoutée, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2971, 14, "Boisson, saveur orange, vitamine C ajoutée, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2970, 14, "Chocolat chaud, avec aspartame, mélange sec, préparé avec eau" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2969, 14, "Boisson au jus, ananas et orange, vitamine C ajoutée, boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2968, 14, "Boisson au jus, ananas et pamplemousse, vitamine C ajoutée, boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2967, 14, "Boisson, orange, vitamine C ajoutée, boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2966, 14, "Boisson au malt, incluant la bière désalcoolisée (<0,5% alcool par volume)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2965, 14, "Boisson, saveur limonade, vitamine C ajoutée, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2964, 14, "Boisson, saveur limonade, vitamine C ajoutée, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2963, 14, "Limonade avec édulcorant artificiel, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2962, 14, "Limonade avec édulcorant artificiel, poudre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2961, 14, "Boisson, raisins, vitamine C ajoutée, boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2960, 14, "Boisson au jus, raisin, vitamine C ajoutée, boîte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2959, 14, "Boisson, punch aux fruits, vitamine C ajoutée, prête à boire" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2930, 14, "Café instantané, sucré, saveur moka, poudre, eau ajoutée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2497, 11, "Marinades, cornichons à l'aneth, faible en sodium" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2787, 13, "Boeuf, rognon de, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2713, 13, "Boeuf, pointe de poitrine, maigre, 0mm (0\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2566, 12, "Noix, eau de noix de coco (liquide de la noix)" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2565, 12, "Noix, lait de noix de coco (liquide de la noix râpée et eau), conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2564, 12, "Noix, crème de noix de coco (liquide de la noix râpée), sucrée, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2563, 12, "Noix, crème de noix de coco (liquide de la noix râpée), crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2562, 12, "Noix, noix de coco, désséchée, grillée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2561, 12, "Noix, noix de coco, desséchée, sucrée, flocons, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2560, 12, "Noix, noix de coco, désséchée, sucrée, flocons, empaquetée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2559, 12, "Noix, noix de coco, désséchée, non sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2567, 12, "Noix, noisettes, avelines ou coudres, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2558, 12, "Noix, noix de coco, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2556, 12, "Noix, châtaignes d'Europe (marrons), séchées, décortiquées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2555, 12, "Noix, châtaignes d'Europe (marrons), séchées, avec l'écorce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2554, 12, "Noix, châtaignes d'Europe (marrons), crues, décortiquées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2553, 12, "Noix, châtaignes d'Europe (marrons), crues, avec l'écorce" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2552, 12, "Noix, châtaignes chinoises, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2551, 12, "Noix, châtaignes chinoises, bouillies et cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2550, 12, "Noix, châtaignes chinoises, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2549, 12, "Noix, châtaignes chinoises, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2557, 12, "Noix, châtaignes d'Europe (marrons), bouillies et cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2548, 12, "Noix, beurre d'acajou (cajous, anacardes), nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2568, 12, "Noix, noisettes, avelines ou coudres, séchées, blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2571, 12, "Noix, fruits de ginkgo, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2589, 12, "Noix, noix de noyer noir, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2588, 12, "Noix, pistaches, rôties à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2587, 12, "Noix, noix de pinus edulis, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2586, 12, "Noix, noix de pins, pignons (pignes), séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2585, 12, "Noix, fruits de canarium, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2584, 12, "Noix, pacanes, rôties dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2583, 12, "Noix, pacanes, rôties à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2582, 12, "Noix, pacanes, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2569, 12, "Noix, noisettes, avelines ou coudres, rôties à sec, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2581, 12, "Noix, simili produit, base de blé, nature, sel ajouté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2579, 12, "Noix, noix mélangées, rôties dans l'huile sans arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2578, 12, "Noix, noix mélangées, rôties dans l'huile avec arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2577, 12, "Noix, noix mélangées, rôties à sec avec arachides" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2576, 12, "Noix, macadamia (queensland), rôties dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2575, 12, "Noix, macadamia (queensland), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2574, 12, "Noix, noix de caryers, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2573, 12, "Noix, fruits de ginkgo, conserve" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2572, 12, "Noix, fruits de ginkgo, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2580, 16, "Soya, graines, rôties, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2547, 12, "Noix, noix d'acajou (cajous, anacardes), rôties dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2546, 12, "Noix, noix d'acajou (cajous, anacardes), rôties à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2545, 12, "Noix, noix longues (noix cendres), séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2518, 12, "Graines, carthame, graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2517, 12, "Graines, citrouille et courge, graines, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2516, 12, "Graines, citrouille et courge, graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2515, 12, "Graines, lotus, graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2514, 12, "Graines, semoule de graines de coton, partiellement dégraissées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2513, 12, "Graines, farine de graines de coton, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2512, 12, "Graines, farine de graines de coton, partiellement dégraissées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2511, 12, "Graines de chia, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2519, 12, "Graines,  semoule de graines de carthame, partiellement dégraissée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2510, 12, "Graines, noix-pain (brosimum alicastrum), graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2508, 12, "Graines, fruits à pain, graines, bouillies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2507, 12, "Graines, fruits à pain, graines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2506, 11, "Pomme de terre, bouille, chair et pelure" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2505, 11, "Pomme de terre, chair et pelure, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2502, 11, "Crosses de fougères (têtes de violon), congelées, non préparées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2501, 11, "Betteraves, bouillies, égouttées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2500, 11, "Betteraves, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2499, 11, "Algue, dulse (rhodymemie palme, porphyre, nori), séchée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2509, 12, "Graines, noix-pain (brosimum dicastrum), graines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2521, 12, "Graines, sésame, graines, entières, rôties et grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2522, 12, "Graines, sésame, graines, grillées, décortiquées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2523, 12, "Graines, farine de sésame, partiellement dégraissées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2544, 12, "Noix, noix de Brésil, séchées, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2543, 12, "Noix, faines, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2540, 12, "Noix, pâte d'amandes, sucrée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2539, 12, "Noix, amandes, grillées, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2538, 12, "Noix, amandes, rôties dans l'huile, blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2537, 12, "Noix, amandes, rôties dans l'huile, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2536, 12, "Noix, amandes, rôties à sec, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2535, 12, "Noix, amandes, séchées, blanchies, non rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2534, 12, "Noix, amandes, séchées, non blanchies, non rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2533, 12, "Noix, farine de balanes (glands), non dégraissée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2532, 12, "Noix, balanes (glands), séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2531, 12, "Noix, balanes (glands), crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2530, 12, "Graines, tournesol, farine, partiellement dégraissée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2529, 12, "Graines, beurre de tournesol" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2528, 12, "Graines, tournesol, graines, grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2527, 12, "Graines, tournesol, graines, rôties à sec" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2526, 12, "Graines, tournesol, graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2525, 12, "Graines, semoule de sésame, partiellement dégraissées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2524, 12, "Graines, farine de sésame, faible en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2590, 12, "Noix, Grenoble, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2786, 13, "Boeuf, haché, régulier, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2591, 12, "Graines, graines de fruits à pain, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2593, 12, "Graines, beurre de sésame, tahini, graines rôties et grillées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2666, 13, "Boeuf, thymus, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2665, 13, "Boeuf, graisse de rognons (suif), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2664, 13, "Boeuf, rate, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2663, 13, "Boeuf, rate, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2662, 13, "Boeuf, pancréas, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2661, 13, "Boeuf, pancréas, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2660, 13, "Boeuf, désossé mécaniquement, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2659, 13, "Boeuf, poumons, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2667, 13, "Boeuf, thymus, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2658, 13, "Boeuf, poumon, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2656, 13, "Boeuf, foie, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2655, 13, "Boeuf, rognon, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2654, 13, "Boeuf, coeur, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2653, 13, "Boeuf, coeur, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2652, 13, "Boeuf, cervelle, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2651, 13, "Boeuf, cervelle, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2650, 13, "Boeuf, cervelle, crue" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2645, 12, "Graines, citrouille et courge, graines, entières, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2657, 13, "Boeuf, foie, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2644, 12, "Noix, pistaches, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2668, 13, "Boeuf, langue, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2670, 13, "Boeuf, tripe, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2712, 13, "Boeuf, pointe de poitrine, maigre et gras, 0mm (0\") paré, braisé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2708, 7, "Viande froide, boeuf, salé, en gelée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2707, 13, "Boeuf, salé, boeuf déshydraté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2706, 13, "Boeuf, salé, tranches à déjeuner, cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2705, 13, "Boeuf, salé, tranches à déjeuner, cru ou non réchauffé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2704, 13, "Boeuf, haché, galette, congelé, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2702, 13, "Boeuf, haché, régulier, galette, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2700, 13, "Boeuf, haché, régulier, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2669, 13, "Boeuf, langue, mijoté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2698, 13, "Boeuf, haché, régulier" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2694, 13, "Boeuf, haché, mi-maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2692, 13, "Boeuf, haché, mi-maigre, cuit au four" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2690, 13, "Boeuf, haché, mi-maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2689, 13, "Boeuf, haché, maigre, galette, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2687, 13, "Boeuf, haché, maigre, grillé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2685, 13, "Boeuf, haché, maigre, cuit au four, degré de cuisson: bien cuit" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2683, 13, "Boeuf, haché, maigre, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2676, 13, "Boeuf, pointe de poitrine, maigre, 0mm (0\") paré, cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2696, 13, "Boeuf, haché, mi-maigre, galette, sauté" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2643, 12, "Noix, lait de noix de coco (liquide de la noix râpée et eau), cru" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2642, 12, "Graines, tournesol, graines, rôties dans l'huile" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2641, 12, "Noix, semoule d'amandes, partiellement dégraissées, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2614, 12, "Noix, châtaignes japonaises, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2613, 12, "Noix, châtaignes japonaises, bouillies et cuites à la vapeur" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2612, 12, "Noix, châtaignes japonaises, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2611, 12, "Graines, sésame, graines, déshydratées, décortiquées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2610, 12, "Noix, simili produit, base de blé, toutes les saveurs sauf macadamia, sans sel" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2608, 12, "Graines, beurre de sésame, tahini, graines crues et moulues à la pierre" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2607, 12, "Noix, semoule d'amandes, partiellement dégraissée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2605, 12, "Noix, beurre d'amandes, nature" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2615, 12, "Graines, lotus, graines, crues" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2604, 12, "Graines, sisymbrium sp., graines, entières, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2602, 12, "Noix, noix de coco, désséchées, en crème" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2601, 12, "Noix, lait de noix de coco (liquide de la noix râpée et eau), congelé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2600, 12, "Noix, châtaignes japonaises, séchées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2599, 12, "Graines, melon d'eau (pastèque), graines, déshydratées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2598, 12, "Graines, beurre de sésame, tahini, graines non rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2597, 12, "Graines, farine de sésame, élevée en gras" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2596, 12, "Graines, beurre de sésame, de graines entières, pâte" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2594, 12, "Noix, châtaignes d'Europe (marrons), rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2603, 12, "Noix, noix de coco, désséchée, sucrée, filamentée" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2616, 12, "Noix, amandes, rôties au miel, non blanchies" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2617, 12, "Noix, noix mélangées, rôties à sec avec arachides, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2618, 12, "Noix, noix mélangées, rôties dans l'huile avec arachides, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2640, 12, "Noix, beurre d'amandes, miel et cannelle, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2639, 12, "Noix, beurre d'amandes, nature, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2638, 12, "Graines, citrouille et courge, graines, entières, rôties, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2637, 12, "Noix, pistaches, rôties à sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2636, 12, "Noix, pacanes, rôties dans l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2635, 12, "Noix, pacanes, rôties à sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2633, 12, "Noix, noix mélangées, rôties dans l'huile sans arachides, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2632, 12, "Noix, macadamia (queensland), rôties dans l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2629, 12, "Noix, beurre de noix d'acajou (cajous, anacardes), nature, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2628, 12, "Noix, noix d'acajou (cajous, anacardes), rôties dans l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2627, 12, "Noix, noix d'acajou (cajous, anacardes), rôties à sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2626, 12, "Noix, amandes, rôties dans l'huile, blanchies, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2625, 12, "Noix, amandes, rôties dans l'huile, non blanchies, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2624, 12, "Noix, amandes, rôties à sec, non blanchies, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2623, 12, "Graines, beurre de tournesol, salé" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2622, 12, "Graines, tournesol, graines, grillées, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2621, 12, "Graines, tournesol, graines, rôties dans l'huile, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2620, 12, "Graines, tournesol, graines, rôties à sec, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2619, 12, "Graines, citrouille et courge, graines, rôties, salées" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 2592, 12, "Graines, coton, graines, rôties" });

            migrationBuilder.InsertData(
                table: "FoodItems",
                columns: new[] { "FoodID", "FoodGroupID", "Name" },
                values: new object[] { 503380, 18, "Barre granola, tendre, élevée en fibres, avoine et chocolat" });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "FoodEntries");

            migrationBuilder.DropTable(
                name: "FoodGroups");

            migrationBuilder.DropTable(
                name: "FoodItems");

            migrationBuilder.DropTable(
                name: "GroceryItems");

            migrationBuilder.DropTable(
                name: "GroceryLists");

            migrationBuilder.DropTable(
                name: "MealPlans");

            migrationBuilder.DropTable(
                name: "NutrientNames");

            migrationBuilder.DropTable(
                name: "RecipeItems");

            migrationBuilder.DropTable(
                name: "Recipes");

            migrationBuilder.DropTable(
                name: "Users");

            migrationBuilder.DropTable(
                name: "YieldAmount");

            migrationBuilder.DropTable(
                name: "YieldNames");
        }
    }
}
